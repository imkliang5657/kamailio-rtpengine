head	1.761;
access;
symbols;
locks; strict;
comment	@# @;


1.761
date	2025.08.22.06.53.23;	author miller;	state Exp;
branches;
next	1.760;

1.760
date	2025.08.21.12.01.33;	author miller;	state Exp;
branches;
next	1.759;

1.759
date	2025.08.21.11.55.52;	author miller;	state Exp;
branches;
next	1.758;

1.758
date	2025.08.21.11.52.59;	author miller;	state Exp;
branches;
next	1.757;

1.757
date	2025.08.21.07.44.43;	author miller;	state Exp;
branches;
next	1.756;

1.756
date	2025.08.21.07.37.58;	author miller;	state Exp;
branches;
next	1.755;

1.755
date	2025.08.21.07.33.38;	author miller;	state Exp;
branches;
next	1.754;

1.754
date	2025.08.21.07.26.34;	author miller;	state Exp;
branches;
next	1.753;

1.753
date	2025.08.21.03.54.38;	author miller;	state Exp;
branches;
next	1.752;

1.752
date	2025.08.21.03.47.43;	author miller;	state Exp;
branches;
next	1.751;

1.751
date	2025.08.21.03.35.27;	author miller;	state Exp;
branches;
next	1.750;

1.750
date	2025.08.21.03.35.01;	author miller;	state Exp;
branches;
next	1.749;

1.749
date	2025.08.21.03.30.45;	author miller;	state Exp;
branches
	1.749.1.1
	1.749.2.1;
next	1.748;

1.748
date	2025.08.20.15.14.02;	author miller;	state Exp;
branches
	1.748.1.1;
next	1.747;

1.747
date	2025.08.20.15.05.24;	author miller;	state Exp;
branches;
next	1.746;

1.746
date	2025.08.20.09.27.21;	author miller;	state Exp;
branches;
next	1.745;

1.745
date	2025.08.20.09.13.42;	author miller;	state Exp;
branches;
next	1.744;

1.744
date	2025.08.20.08.46.49;	author miller;	state Exp;
branches;
next	1.743;

1.743
date	2025.08.13.18.42.49;	author miller;	state Exp;
branches;
next	1.742;

1.742
date	2025.08.05.13.40.38;	author miller;	state Exp;
branches;
next	1.741;

1.741
date	2025.07.28.14.17.44;	author miller;	state Exp;
branches;
next	1.740;

1.740
date	2025.07.28.14.07.51;	author miller;	state Exp;
branches;
next	1.739;

1.739
date	2025.07.17.13.34.49;	author miller;	state Exp;
branches;
next	1.738;

1.738
date	2025.07.16.16.34.37;	author miller;	state Exp;
branches;
next	1.737;

1.737
date	2025.07.16.14.59.18;	author miller;	state Exp;
branches;
next	1.736;

1.736
date	2025.07.16.14.15.52;	author miller;	state Exp;
branches;
next	1.735;

1.735
date	2025.07.16.10.10.24;	author miller;	state Exp;
branches;
next	1.734;

1.734
date	2025.07.05.07.47.41;	author miller;	state Exp;
branches;
next	1.733;

1.733
date	2025.07.05.07.42.46;	author miller;	state Exp;
branches;
next	1.732;

1.732
date	2025.07.05.07.38.14;	author miller;	state Exp;
branches;
next	1.731;

1.731
date	2025.07.05.07.34.34;	author miller;	state Exp;
branches;
next	1.730;

1.730
date	2025.07.05.07.32.43;	author miller;	state Exp;
branches;
next	1.729;

1.729
date	2025.07.05.07.32.05;	author miller;	state Exp;
branches;
next	1.728;

1.728
date	2025.07.03.09.47.20;	author miller;	state Exp;
branches;
next	1.727;

1.727
date	2025.07.03.09.44.44;	author miller;	state Exp;
branches;
next	1.726;

1.726
date	2025.07.03.09.16.00;	author miller;	state Exp;
branches;
next	1.725;

1.725
date	2025.07.03.08.26.42;	author miller;	state Exp;
branches;
next	1.724;

1.724
date	2025.07.03.08.16.57;	author miller;	state Exp;
branches;
next	1.723;

1.723
date	2025.07.03.07.35.37;	author miller;	state Exp;
branches;
next	1.722;

1.722
date	2025.07.03.07.31.27;	author miller;	state Exp;
branches;
next	1.721;

1.721
date	2025.07.03.07.20.40;	author miller;	state Exp;
branches;
next	1.720;

1.720
date	2025.07.03.07.11.21;	author miller;	state Exp;
branches;
next	1.719;

1.719
date	2025.06.29.01.04.32;	author miller;	state Exp;
branches;
next	1.718;

1.718
date	2025.06.28.10.39.48;	author miller;	state Exp;
branches;
next	1.717;

1.717
date	2025.06.28.10.38.59;	author miller;	state Exp;
branches;
next	1.716;

1.716
date	2025.06.28.10.36.14;	author miller;	state Exp;
branches;
next	1.715;

1.715
date	2025.06.28.10.35.06;	author miller;	state Exp;
branches;
next	1.714;

1.714
date	2025.06.28.05.49.45;	author miller;	state Exp;
branches;
next	1.713;

1.713
date	2025.06.28.05.47.06;	author miller;	state Exp;
branches;
next	1.712;

1.712
date	2025.06.28.05.42.50;	author miller;	state Exp;
branches;
next	1.711;

1.711
date	2025.06.28.05.40.56;	author miller;	state Exp;
branches;
next	1.710;

1.710
date	2025.06.28.05.40.21;	author miller;	state Exp;
branches;
next	1.709;

1.709
date	2025.06.28.05.30.01;	author miller;	state Exp;
branches;
next	1.708;

1.708
date	2025.06.27.12.48.13;	author miller;	state Exp;
branches;
next	1.707;

1.707
date	2025.06.27.12.32.14;	author miller;	state Exp;
branches;
next	1.706;

1.706
date	2025.06.27.12.25.27;	author miller;	state Exp;
branches;
next	1.705;

1.705
date	2025.06.27.12.22.55;	author miller;	state Exp;
branches;
next	1.704;

1.704
date	2025.06.27.08.28.10;	author miller;	state Exp;
branches;
next	1.703;

1.703
date	2025.06.27.08.19.05;	author miller;	state Exp;
branches;
next	1.702;

1.702
date	2025.06.27.08.14.12;	author miller;	state Exp;
branches;
next	1.701;

1.701
date	2025.06.27.08.08.16;	author miller;	state Exp;
branches;
next	1.700;

1.700
date	2025.06.27.06.11.01;	author miller;	state Exp;
branches;
next	1.699;

1.699
date	2025.06.26.10.16.22;	author miller;	state Exp;
branches;
next	1.698;

1.698
date	2025.06.26.10.08.25;	author miller;	state Exp;
branches;
next	1.697;

1.697
date	2025.06.25.23.49.25;	author miller;	state Exp;
branches;
next	1.696;

1.696
date	2025.06.23.20.51.04;	author miller;	state Exp;
branches;
next	1.695;

1.695
date	2025.06.23.20.42.22;	author miller;	state Exp;
branches;
next	1.694;

1.694
date	2025.06.23.20.39.48;	author miller;	state Exp;
branches;
next	1.693;

1.693
date	2025.06.23.20.34.47;	author miller;	state Exp;
branches;
next	1.692;

1.692
date	2025.06.23.19.14.54;	author miller;	state Exp;
branches;
next	1.691;

1.691
date	2025.06.23.18.37.26;	author miller;	state Exp;
branches;
next	1.690;

1.690
date	2025.06.23.17.36.41;	author miller;	state Exp;
branches;
next	1.689;

1.689
date	2025.06.23.17.24.09;	author miller;	state Exp;
branches;
next	1.688;

1.688
date	2025.06.20.08.33.01;	author miller;	state Exp;
branches;
next	1.687;

1.687
date	2025.06.20.08.23.27;	author miller;	state Exp;
branches;
next	1.686;

1.686
date	2025.06.20.08.15.37;	author miller;	state Exp;
branches;
next	1.685;

1.685
date	2025.06.20.07.58.42;	author miller;	state Exp;
branches;
next	1.684;

1.684
date	2025.06.18.16.13.08;	author miller;	state Exp;
branches;
next	1.683;

1.683
date	2025.06.17.17.55.38;	author miller;	state Exp;
branches;
next	1.682;

1.682
date	2025.06.17.17.55.23;	author miller;	state Exp;
branches;
next	1.681;

1.681
date	2025.06.17.17.52.15;	author miller;	state Exp;
branches;
next	1.680;

1.680
date	2025.06.17.17.48.47;	author miller;	state Exp;
branches;
next	1.679;

1.679
date	2025.06.17.17.43.19;	author miller;	state Exp;
branches;
next	1.678;

1.678
date	2025.06.17.17.38.38;	author miller;	state Exp;
branches;
next	1.677;

1.677
date	2025.06.17.16.56.50;	author miller;	state Exp;
branches;
next	1.676;

1.676
date	2025.06.17.16.54.06;	author miller;	state Exp;
branches;
next	1.675;

1.675
date	2025.06.17.15.49.27;	author miller;	state Exp;
branches;
next	1.674;

1.674
date	2025.06.11.12.28.03;	author miller;	state Exp;
branches;
next	1.673;

1.673
date	2025.06.11.12.17.27;	author miller;	state Exp;
branches;
next	1.672;

1.672
date	2025.06.11.12.03.40;	author miller;	state Exp;
branches;
next	1.671;

1.671
date	2025.06.11.11.54.52;	author miller;	state Exp;
branches;
next	1.670;

1.670
date	2025.06.11.11.49.35;	author miller;	state Exp;
branches;
next	1.669;

1.669
date	2025.06.11.11.45.35;	author miller;	state Exp;
branches;
next	1.668;

1.668
date	2025.06.11.11.41.36;	author miller;	state Exp;
branches;
next	1.667;

1.667
date	2025.06.11.11.36.15;	author miller;	state Exp;
branches;
next	1.666;

1.666
date	2025.06.11.11.34.56;	author miller;	state Exp;
branches;
next	1.665;

1.665
date	2025.06.11.09.25.17;	author miller;	state Exp;
branches;
next	1.664;

1.664
date	2025.06.11.09.19.59;	author miller;	state Exp;
branches;
next	1.663;

1.663
date	2025.06.11.09.14.34;	author miller;	state Exp;
branches;
next	1.662;

1.662
date	2025.06.11.09.06.38;	author miller;	state Exp;
branches;
next	1.661;

1.661
date	2025.06.10.12.19.06;	author miller;	state Exp;
branches;
next	1.660;

1.660
date	2025.06.10.12.08.37;	author miller;	state Exp;
branches;
next	1.659;

1.659
date	2025.06.10.12.03.14;	author miller;	state Exp;
branches;
next	1.658;

1.658
date	2025.06.10.09.10.35;	author miller;	state Exp;
branches;
next	1.657;

1.657
date	2025.06.10.08.57.13;	author miller;	state Exp;
branches;
next	1.656;

1.656
date	2025.06.10.08.52.16;	author miller;	state Exp;
branches;
next	1.655;

1.655
date	2025.06.10.08.46.45;	author miller;	state Exp;
branches;
next	1.654;

1.654
date	2025.06.10.08.45.31;	author miller;	state Exp;
branches;
next	1.653;

1.653
date	2025.06.10.08.41.54;	author miller;	state Exp;
branches;
next	1.652;

1.652
date	2025.06.10.08.38.19;	author miller;	state Exp;
branches;
next	1.651;

1.651
date	2025.06.10.08.36.34;	author miller;	state Exp;
branches;
next	1.650;

1.650
date	2025.06.10.08.35.46;	author miller;	state Exp;
branches;
next	1.649;

1.649
date	2025.06.10.06.20.48;	author miller;	state Exp;
branches;
next	1.648;

1.648
date	2025.06.10.06.18.22;	author miller;	state Exp;
branches;
next	1.647;

1.647
date	2025.06.10.06.14.09;	author miller;	state Exp;
branches;
next	1.646;

1.646
date	2025.06.10.05.57.42;	author miller;	state Exp;
branches;
next	1.645;

1.645
date	2025.06.10.05.51.58;	author miller;	state Exp;
branches;
next	1.644;

1.644
date	2025.06.10.05.29.35;	author miller;	state Exp;
branches;
next	1.643;

1.643
date	2025.06.10.05.27.27;	author miller;	state Exp;
branches;
next	1.642;

1.642
date	2025.06.10.05.19.18;	author miller;	state Exp;
branches;
next	1.641;

1.641
date	2025.06.10.05.12.02;	author miller;	state Exp;
branches;
next	1.640;

1.640
date	2025.06.09.15.00.37;	author miller;	state Exp;
branches;
next	1.639;

1.639
date	2025.06.09.14.57.22;	author miller;	state Exp;
branches;
next	1.638;

1.638
date	2025.06.09.14.52.43;	author miller;	state Exp;
branches;
next	1.637;

1.637
date	2025.06.09.14.47.48;	author miller;	state Exp;
branches;
next	1.636;

1.636
date	2025.06.09.14.05.59;	author miller;	state Exp;
branches;
next	1.635;

1.635
date	2025.06.09.13.58.49;	author miller;	state Exp;
branches;
next	1.634;

1.634
date	2025.06.09.13.58.17;	author miller;	state Exp;
branches;
next	1.633;

1.633
date	2025.06.09.13.48.26;	author miller;	state Exp;
branches;
next	1.632;

1.632
date	2025.06.09.13.04.23;	author miller;	state Exp;
branches;
next	1.631;

1.631
date	2025.06.09.12.59.20;	author miller;	state Exp;
branches;
next	1.630;

1.630
date	2025.06.09.10.08.51;	author miller;	state Exp;
branches;
next	1.629;

1.629
date	2025.06.09.10.02.11;	author miller;	state Exp;
branches;
next	1.628;

1.628
date	2025.06.09.09.47.08;	author miller;	state Exp;
branches;
next	1.627;

1.627
date	2025.06.06.16.02.27;	author miller;	state Exp;
branches;
next	1.626;

1.626
date	2025.06.06.15.47.14;	author miller;	state Exp;
branches;
next	1.625;

1.625
date	2025.06.06.15.34.56;	author miller;	state Exp;
branches;
next	1.624;

1.624
date	2025.06.06.15.34.38;	author miller;	state Exp;
branches;
next	1.623;

1.623
date	2025.06.06.15.31.04;	author miller;	state Exp;
branches;
next	1.622;

1.622
date	2025.06.06.15.27.32;	author miller;	state Exp;
branches;
next	1.621;

1.621
date	2025.06.06.15.21.35;	author miller;	state Exp;
branches;
next	1.620;

1.620
date	2025.06.06.15.20.45;	author miller;	state Exp;
branches;
next	1.619;

1.619
date	2025.06.06.15.19.51;	author miller;	state Exp;
branches;
next	1.618;

1.618
date	2025.06.06.15.14.55;	author miller;	state Exp;
branches;
next	1.617;

1.617
date	2025.06.04.12.59.51;	author miller;	state Exp;
branches;
next	1.616;

1.616
date	2025.06.04.12.57.54;	author miller;	state Exp;
branches;
next	1.615;

1.615
date	2025.06.04.12.44.19;	author miller;	state Exp;
branches;
next	1.614;

1.614
date	2025.06.04.09.44.57;	author miller;	state Exp;
branches;
next	1.613;

1.613
date	2025.05.31.04.41.15;	author miller;	state Exp;
branches;
next	1.612;

1.612
date	2025.05.29.17.02.52;	author miller;	state Exp;
branches;
next	1.611;

1.611
date	2025.05.29.16.47.50;	author miller;	state Exp;
branches;
next	1.610;

1.610
date	2025.05.29.16.38.20;	author miller;	state Exp;
branches;
next	1.609;

1.609
date	2025.05.29.15.41.12;	author miller;	state Exp;
branches;
next	1.608;

1.608
date	2025.05.27.12.47.56;	author miller;	state Exp;
branches;
next	1.607;

1.607
date	2025.05.27.12.42.02;	author miller;	state Exp;
branches;
next	1.606;

1.606
date	2025.05.27.12.35.16;	author miller;	state Exp;
branches;
next	1.605;

1.605
date	2025.05.27.12.32.31;	author miller;	state Exp;
branches;
next	1.604;

1.604
date	2025.05.27.12.24.23;	author miller;	state Exp;
branches;
next	1.603;

1.603
date	2025.05.27.12.11.05;	author miller;	state Exp;
branches;
next	1.602;

1.602
date	2025.05.27.12.06.45;	author miller;	state Exp;
branches;
next	1.601;

1.601
date	2025.05.27.11.58.17;	author miller;	state Exp;
branches;
next	1.600;

1.600
date	2025.05.27.11.54.47;	author miller;	state Exp;
branches;
next	1.599;

1.599
date	2025.05.27.11.52.46;	author miller;	state Exp;
branches;
next	1.598;

1.598
date	2025.05.26.13.18.27;	author miller;	state Exp;
branches;
next	1.597;

1.597
date	2025.05.26.13.14.40;	author miller;	state Exp;
branches;
next	1.596;

1.596
date	2025.05.26.13.06.47;	author miller;	state Exp;
branches;
next	1.595;

1.595
date	2025.05.26.13.01.56;	author miller;	state Exp;
branches;
next	1.594;

1.594
date	2025.05.26.13.00.19;	author miller;	state Exp;
branches;
next	1.593;

1.593
date	2025.05.26.12.42.25;	author miller;	state Exp;
branches;
next	1.592;

1.592
date	2025.05.26.12.39.24;	author miller;	state Exp;
branches;
next	1.591;

1.591
date	2025.05.26.10.00.27;	author miller;	state Exp;
branches;
next	1.590;

1.590
date	2025.05.26.10.00.07;	author miller;	state Exp;
branches;
next	1.589;

1.589
date	2025.05.26.09.59.03;	author miller;	state Exp;
branches;
next	1.588;

1.588
date	2025.05.17.07.29.02;	author miller;	state Exp;
branches;
next	1.587;

1.587
date	2025.05.17.06.33.25;	author miller;	state Exp;
branches;
next	1.586;

1.586
date	2025.05.17.06.16.16;	author miller;	state Exp;
branches;
next	1.585;

1.585
date	2025.05.17.06.12.19;	author miller;	state Exp;
branches;
next	1.584;

1.584
date	2025.05.17.06.02.36;	author miller;	state Exp;
branches;
next	1.583;

1.583
date	2025.05.17.05.43.48;	author miller;	state Exp;
branches;
next	1.582;

1.582
date	2025.05.17.05.38.34;	author miller;	state Exp;
branches;
next	1.581;

1.581
date	2025.05.17.05.26.11;	author miller;	state Exp;
branches;
next	1.580;

1.580
date	2025.05.17.05.10.40;	author miller;	state Exp;
branches;
next	1.579;

1.579
date	2025.05.17.05.08.41;	author miller;	state Exp;
branches;
next	1.578;

1.578
date	2025.05.16.16.01.52;	author miller;	state Exp;
branches;
next	1.577;

1.577
date	2025.05.16.15.55.42;	author miller;	state Exp;
branches;
next	1.576;

1.576
date	2025.05.16.15.34.09;	author miller;	state Exp;
branches;
next	1.575;

1.575
date	2025.05.16.15.14.00;	author miller;	state Exp;
branches;
next	1.574;

1.574
date	2025.05.16.15.11.28;	author miller;	state Exp;
branches;
next	1.573;

1.573
date	2025.05.15.12.25.02;	author miller;	state Exp;
branches;
next	1.572;

1.572
date	2025.05.15.12.16.37;	author miller;	state Exp;
branches;
next	1.571;

1.571
date	2025.05.15.12.10.22;	author miller;	state Exp;
branches;
next	1.570;

1.570
date	2025.05.15.11.59.03;	author miller;	state Exp;
branches;
next	1.569;

1.569
date	2025.05.15.11.49.44;	author miller;	state Exp;
branches;
next	1.568;

1.568
date	2025.05.15.11.49.28;	author miller;	state Exp;
branches;
next	1.567;

1.567
date	2025.05.15.11.36.51;	author miller;	state Exp;
branches;
next	1.566;

1.566
date	2025.05.15.11.29.51;	author miller;	state Exp;
branches;
next	1.565;

1.565
date	2025.05.15.11.25.36;	author miller;	state Exp;
branches;
next	1.564;

1.564
date	2025.05.15.11.18.54;	author miller;	state Exp;
branches;
next	1.563;

1.563
date	2025.05.15.11.15.50;	author miller;	state Exp;
branches;
next	1.562;

1.562
date	2025.05.15.11.13.29;	author miller;	state Exp;
branches;
next	1.561;

1.561
date	2025.05.15.09.07.13;	author miller;	state Exp;
branches;
next	1.560;

1.560
date	2025.05.15.09.04.10;	author miller;	state Exp;
branches;
next	1.559;

1.559
date	2025.05.15.09.01.07;	author miller;	state Exp;
branches;
next	1.558;

1.558
date	2025.05.15.08.59.36;	author miller;	state Exp;
branches;
next	1.557;

1.557
date	2025.05.15.08.55.45;	author miller;	state Exp;
branches;
next	1.556;

1.556
date	2025.05.15.08.53.49;	author miller;	state Exp;
branches;
next	1.555;

1.555
date	2025.05.15.08.52.38;	author miller;	state Exp;
branches;
next	1.554;

1.554
date	2025.05.15.08.48.08;	author miller;	state Exp;
branches;
next	1.553;

1.553
date	2025.05.15.08.40.32;	author miller;	state Exp;
branches;
next	1.552;

1.552
date	2025.05.15.08.34.43;	author miller;	state Exp;
branches;
next	1.551;

1.551
date	2025.05.15.08.34.07;	author miller;	state Exp;
branches;
next	1.550;

1.550
date	2025.05.15.08.31.54;	author miller;	state Exp;
branches;
next	1.549;

1.549
date	2025.05.15.08.26.47;	author miller;	state Exp;
branches;
next	1.548;

1.548
date	2025.05.15.08.21.36;	author miller;	state Exp;
branches;
next	1.547;

1.547
date	2025.05.15.08.19.49;	author miller;	state Exp;
branches;
next	1.546;

1.546
date	2025.05.15.08.16.10;	author miller;	state Exp;
branches;
next	1.545;

1.545
date	2025.05.14.12.21.58;	author miller;	state Exp;
branches;
next	1.544;

1.544
date	2025.05.14.12.19.50;	author miller;	state Exp;
branches;
next	1.543;

1.543
date	2025.05.14.11.46.39;	author miller;	state Exp;
branches;
next	1.542;

1.542
date	2025.05.14.11.29.42;	author miller;	state Exp;
branches;
next	1.541;

1.541
date	2025.05.13.15.21.43;	author miller;	state Exp;
branches;
next	1.540;

1.540
date	2025.05.12.12.08.21;	author miller;	state Exp;
branches;
next	1.539;

1.539
date	2025.05.12.11.59.27;	author miller;	state Exp;
branches;
next	1.538;

1.538
date	2025.05.12.11.51.22;	author miller;	state Exp;
branches;
next	1.537;

1.537
date	2025.05.12.11.50.45;	author miller;	state Exp;
branches;
next	1.536;

1.536
date	2025.05.12.11.50.21;	author miller;	state Exp;
branches;
next	1.535;

1.535
date	2025.05.12.11.44.23;	author miller;	state Exp;
branches;
next	1.534;

1.534
date	2025.05.12.11.42.17;	author miller;	state Exp;
branches;
next	1.533;

1.533
date	2025.05.12.11.41.23;	author miller;	state Exp;
branches;
next	1.532;

1.532
date	2025.05.12.11.38.51;	author miller;	state Exp;
branches;
next	1.531;

1.531
date	2025.05.12.11.31.57;	author miller;	state Exp;
branches;
next	1.530;

1.530
date	2025.05.12.11.29.05;	author miller;	state Exp;
branches;
next	1.529;

1.529
date	2025.05.12.10.20.56;	author miller;	state Exp;
branches;
next	1.528;

1.528
date	2025.05.12.10.17.34;	author miller;	state Exp;
branches;
next	1.527;

1.527
date	2025.05.12.10.14.57;	author miller;	state Exp;
branches;
next	1.526;

1.526
date	2025.05.12.10.13.28;	author miller;	state Exp;
branches;
next	1.525;

1.525
date	2025.05.12.10.11.51;	author miller;	state Exp;
branches;
next	1.524;

1.524
date	2025.05.12.10.09.27;	author miller;	state Exp;
branches;
next	1.523;

1.523
date	2025.05.12.09.24.26;	author miller;	state Exp;
branches;
next	1.522;

1.522
date	2025.05.12.09.19.24;	author miller;	state Exp;
branches;
next	1.521;

1.521
date	2025.05.12.09.11.29;	author miller;	state Exp;
branches;
next	1.520;

1.520
date	2025.05.12.09.06.18;	author miller;	state Exp;
branches;
next	1.519;

1.519
date	2025.05.12.08.58.15;	author miller;	state Exp;
branches;
next	1.518;

1.518
date	2025.05.12.08.47.21;	author miller;	state Exp;
branches;
next	1.517;

1.517
date	2025.05.12.08.43.33;	author miller;	state Exp;
branches;
next	1.516;

1.516
date	2025.05.12.08.41.51;	author miller;	state Exp;
branches;
next	1.515;

1.515
date	2025.05.12.08.39.58;	author miller;	state Exp;
branches;
next	1.514;

1.514
date	2025.05.12.08.38.35;	author miller;	state Exp;
branches;
next	1.513;

1.513
date	2025.05.12.08.37.52;	author miller;	state Exp;
branches;
next	1.512;

1.512
date	2025.05.12.08.08.58;	author miller;	state Exp;
branches;
next	1.511;

1.511
date	2025.05.12.08.06.21;	author miller;	state Exp;
branches;
next	1.510;

1.510
date	2025.05.12.07.55.45;	author miller;	state Exp;
branches;
next	1.509;

1.509
date	2025.05.12.07.55.06;	author miller;	state Exp;
branches;
next	1.508;

1.508
date	2025.05.09.13.51.51;	author miller;	state Exp;
branches;
next	1.507;

1.507
date	2025.05.09.13.28.54;	author miller;	state Exp;
branches;
next	1.506;

1.506
date	2025.05.09.13.21.46;	author miller;	state Exp;
branches;
next	1.505;

1.505
date	2025.05.09.13.19.43;	author miller;	state Exp;
branches;
next	1.504;

1.504
date	2025.05.09.13.14.14;	author miller;	state Exp;
branches;
next	1.503;

1.503
date	2025.05.09.08.21.42;	author miller;	state Exp;
branches;
next	1.502;

1.502
date	2025.05.09.08.20.44;	author miller;	state Exp;
branches;
next	1.501;

1.501
date	2025.05.09.08.05.01;	author miller;	state Exp;
branches;
next	1.500;

1.500
date	2025.05.09.08.03.11;	author miller;	state Exp;
branches;
next	1.499;

1.499
date	2025.05.09.07.54.16;	author miller;	state Exp;
branches;
next	1.498;

1.498
date	2025.05.09.07.47.26;	author miller;	state Exp;
branches;
next	1.497;

1.497
date	2025.05.09.07.45.14;	author miller;	state Exp;
branches;
next	1.496;

1.496
date	2025.05.09.07.40.44;	author miller;	state Exp;
branches;
next	1.495;

1.495
date	2025.05.09.07.36.43;	author miller;	state Exp;
branches;
next	1.494;

1.494
date	2025.05.09.07.29.52;	author miller;	state Exp;
branches;
next	1.493;

1.493
date	2025.05.09.07.26.55;	author miller;	state Exp;
branches;
next	1.492;

1.492
date	2025.05.09.07.21.33;	author miller;	state Exp;
branches;
next	1.491;

1.491
date	2025.05.09.05.56.40;	author miller;	state Exp;
branches;
next	1.490;

1.490
date	2025.05.09.05.34.06;	author miller;	state Exp;
branches;
next	1.489;

1.489
date	2025.05.09.05.31.24;	author miller;	state Exp;
branches;
next	1.488;

1.488
date	2025.05.09.05.26.57;	author miller;	state Exp;
branches;
next	1.487;

1.487
date	2025.05.08.14.42.33;	author miller;	state Exp;
branches;
next	1.486;

1.486
date	2025.05.08.14.41.20;	author miller;	state Exp;
branches;
next	1.485;

1.485
date	2025.05.08.14.29.49;	author miller;	state Exp;
branches;
next	1.484;

1.484
date	2025.05.08.12.31.47;	author miller;	state Exp;
branches;
next	1.483;

1.483
date	2025.05.08.12.30.38;	author miller;	state Exp;
branches;
next	1.482;

1.482
date	2025.05.08.11.58.52;	author miller;	state Exp;
branches;
next	1.481;

1.481
date	2025.05.08.11.54.13;	author miller;	state Exp;
branches;
next	1.480;

1.480
date	2025.05.08.11.52.33;	author miller;	state Exp;
branches;
next	1.479;

1.479
date	2025.05.08.11.15.51;	author miller;	state Exp;
branches;
next	1.478;

1.478
date	2025.05.07.14.09.29;	author miller;	state Exp;
branches;
next	1.477;

1.477
date	2025.05.07.14.05.24;	author miller;	state Exp;
branches;
next	1.476;

1.476
date	2025.05.07.13.59.11;	author miller;	state Exp;
branches;
next	1.475;

1.475
date	2025.05.07.13.50.51;	author miller;	state Exp;
branches;
next	1.474;

1.474
date	2025.05.07.13.40.50;	author miller;	state Exp;
branches;
next	1.473;

1.473
date	2025.05.07.13.23.07;	author miller;	state Exp;
branches;
next	1.472;

1.472
date	2025.05.07.13.15.23;	author miller;	state Exp;
branches;
next	1.471;

1.471
date	2025.05.07.13.12.47;	author miller;	state Exp;
branches;
next	1.470;

1.470
date	2025.05.07.13.12.01;	author miller;	state Exp;
branches;
next	1.469;

1.469
date	2025.05.07.13.08.50;	author miller;	state Exp;
branches;
next	1.468;

1.468
date	2025.05.07.08.02.41;	author miller;	state Exp;
branches;
next	1.467;

1.467
date	2025.05.07.07.49.59;	author miller;	state Exp;
branches;
next	1.466;

1.466
date	2025.05.07.07.48.43;	author miller;	state Exp;
branches;
next	1.465;

1.465
date	2025.05.07.07.46.53;	author miller;	state Exp;
branches;
next	1.464;

1.464
date	2025.05.07.07.43.24;	author miller;	state Exp;
branches;
next	1.463;

1.463
date	2025.05.07.07.40.50;	author miller;	state Exp;
branches;
next	1.462;

1.462
date	2025.05.07.07.35.52;	author miller;	state Exp;
branches;
next	1.461;

1.461
date	2025.05.07.07.21.54;	author miller;	state Exp;
branches;
next	1.460;

1.460
date	2025.05.07.07.14.47;	author miller;	state Exp;
branches;
next	1.459;

1.459
date	2025.05.07.07.06.12;	author miller;	state Exp;
branches;
next	1.458;

1.458
date	2025.05.07.07.01.53;	author miller;	state Exp;
branches;
next	1.457;

1.457
date	2025.05.07.06.55.13;	author miller;	state Exp;
branches;
next	1.456;

1.456
date	2025.05.07.06.31.18;	author miller;	state Exp;
branches;
next	1.455;

1.455
date	2025.05.07.06.23.40;	author miller;	state Exp;
branches;
next	1.454;

1.454
date	2025.05.06.12.26.27;	author miller;	state Exp;
branches;
next	1.453;

1.453
date	2025.05.06.12.18.39;	author miller;	state Exp;
branches;
next	1.452;

1.452
date	2025.05.06.12.09.27;	author miller;	state Exp;
branches;
next	1.451;

1.451
date	2025.05.06.12.06.33;	author miller;	state Exp;
branches;
next	1.450;

1.450
date	2025.05.06.11.57.40;	author miller;	state Exp;
branches;
next	1.449;

1.449
date	2025.05.06.11.52.37;	author miller;	state Exp;
branches;
next	1.448;

1.448
date	2025.05.06.11.47.16;	author miller;	state Exp;
branches;
next	1.447;

1.447
date	2025.05.06.11.42.31;	author miller;	state Exp;
branches;
next	1.446;

1.446
date	2025.05.06.11.42.00;	author miller;	state Exp;
branches;
next	1.445;

1.445
date	2025.05.05.12.17.11;	author miller;	state Exp;
branches;
next	1.444;

1.444
date	2025.05.05.12.03.34;	author miller;	state Exp;
branches;
next	1.443;

1.443
date	2025.05.05.11.36.29;	author miller;	state Exp;
branches;
next	1.442;

1.442
date	2025.05.05.11.34.27;	author miller;	state Exp;
branches;
next	1.441;

1.441
date	2025.05.05.11.33.33;	author miller;	state Exp;
branches;
next	1.440;

1.440
date	2025.05.05.10.58.47;	author miller;	state Exp;
branches;
next	1.439;

1.439
date	2025.05.05.10.53.40;	author miller;	state Exp;
branches;
next	1.438;

1.438
date	2025.05.05.10.05.47;	author miller;	state Exp;
branches;
next	1.437;

1.437
date	2025.05.05.10.02.30;	author miller;	state Exp;
branches;
next	1.436;

1.436
date	2025.05.05.08.44.07;	author miller;	state Exp;
branches;
next	1.435;

1.435
date	2025.05.04.17.24.29;	author miller;	state Exp;
branches;
next	1.434;

1.434
date	2025.05.04.17.21.46;	author miller;	state Exp;
branches;
next	1.433;

1.433
date	2025.05.04.17.19.28;	author miller;	state Exp;
branches;
next	1.432;

1.432
date	2025.05.04.17.14.46;	author miller;	state Exp;
branches;
next	1.431;

1.431
date	2025.05.04.17.04.36;	author miller;	state Exp;
branches;
next	1.430;

1.430
date	2025.05.04.17.01.21;	author miller;	state Exp;
branches;
next	1.429;

1.429
date	2025.05.04.16.50.57;	author miller;	state Exp;
branches;
next	1.428;

1.428
date	2025.05.04.16.44.11;	author miller;	state Exp;
branches;
next	1.427;

1.427
date	2025.05.04.16.36.49;	author miller;	state Exp;
branches;
next	1.426;

1.426
date	2025.05.04.16.34.25;	author miller;	state Exp;
branches;
next	1.425;

1.425
date	2025.05.04.16.32.03;	author miller;	state Exp;
branches;
next	1.424;

1.424
date	2025.05.04.16.31.21;	author miller;	state Exp;
branches;
next	1.423;

1.423
date	2025.05.02.08.12.07;	author miller;	state Exp;
branches;
next	1.422;

1.422
date	2025.05.01.15.11.39;	author miller;	state Exp;
branches;
next	1.421;

1.421
date	2025.05.01.15.01.57;	author miller;	state Exp;
branches;
next	1.420;

1.420
date	2025.05.01.14.20.24;	author miller;	state Exp;
branches;
next	1.419;

1.419
date	2025.05.01.14.19.15;	author miller;	state Exp;
branches;
next	1.418;

1.418
date	2025.05.01.14.10.47;	author miller;	state Exp;
branches;
next	1.417;

1.417
date	2025.05.01.14.03.46;	author miller;	state Exp;
branches;
next	1.416;

1.416
date	2025.04.30.14.47.30;	author miller;	state Exp;
branches;
next	1.415;

1.415
date	2025.04.30.14.43.52;	author miller;	state Exp;
branches;
next	1.414;

1.414
date	2025.04.30.14.33.28;	author miller;	state Exp;
branches;
next	1.413;

1.413
date	2025.04.30.14.27.08;	author miller;	state Exp;
branches;
next	1.412;

1.412
date	2025.04.30.14.20.03;	author miller;	state Exp;
branches;
next	1.411;

1.411
date	2025.04.30.14.19.21;	author miller;	state Exp;
branches;
next	1.410;

1.410
date	2025.04.30.14.04.16;	author miller;	state Exp;
branches;
next	1.409;

1.409
date	2025.04.30.13.50.12;	author miller;	state Exp;
branches;
next	1.408;

1.408
date	2025.04.29.12.33.05;	author miller;	state Exp;
branches;
next	1.407;

1.407
date	2025.04.29.12.28.59;	author miller;	state Exp;
branches;
next	1.406;

1.406
date	2025.04.29.12.26.40;	author miller;	state Exp;
branches;
next	1.405;

1.405
date	2025.04.29.12.23.24;	author miller;	state Exp;
branches;
next	1.404;

1.404
date	2025.04.29.12.08.27;	author miller;	state Exp;
branches;
next	1.403;

1.403
date	2025.04.29.12.04.02;	author miller;	state Exp;
branches;
next	1.402;

1.402
date	2025.04.29.11.51.25;	author miller;	state Exp;
branches;
next	1.401;

1.401
date	2025.04.29.11.34.29;	author miller;	state Exp;
branches;
next	1.400;

1.400
date	2025.04.28.11.02.17;	author miller;	state Exp;
branches;
next	1.399;

1.399
date	2025.04.28.11.01.38;	author miller;	state Exp;
branches;
next	1.398;

1.398
date	2025.04.28.10.57.53;	author miller;	state Exp;
branches;
next	1.397;

1.397
date	2025.04.28.10.55.58;	author miller;	state Exp;
branches;
next	1.396;

1.396
date	2025.04.28.07.39.05;	author miller;	state Exp;
branches;
next	1.395;

1.395
date	2025.04.28.07.34.41;	author miller;	state Exp;
branches;
next	1.394;

1.394
date	2025.04.28.07.19.35;	author miller;	state Exp;
branches;
next	1.393;

1.393
date	2025.04.28.07.17.10;	author miller;	state Exp;
branches;
next	1.392;

1.392
date	2025.04.27.17.32.45;	author miller;	state Exp;
branches;
next	1.391;

1.391
date	2025.04.26.15.38.27;	author miller;	state Exp;
branches;
next	1.390;

1.390
date	2025.04.26.15.33.59;	author miller;	state Exp;
branches;
next	1.389;

1.389
date	2025.04.26.15.32.42;	author miller;	state Exp;
branches;
next	1.388;

1.388
date	2025.04.26.15.20.20;	author miller;	state Exp;
branches;
next	1.387;

1.387
date	2025.04.25.08.28.52;	author miller;	state Exp;
branches;
next	1.386;

1.386
date	2025.04.25.08.25.50;	author miller;	state Exp;
branches;
next	1.385;

1.385
date	2025.04.25.08.24.21;	author miller;	state Exp;
branches;
next	1.384;

1.384
date	2025.04.25.07.51.48;	author miller;	state Exp;
branches;
next	1.383;

1.383
date	2025.04.25.07.46.31;	author miller;	state Exp;
branches;
next	1.382;

1.382
date	2025.04.25.07.46.05;	author miller;	state Exp;
branches;
next	1.381;

1.381
date	2025.04.24.08.55.03;	author miller;	state Exp;
branches;
next	1.380;

1.380
date	2025.04.24.08.45.24;	author miller;	state Exp;
branches;
next	1.379;

1.379
date	2025.04.24.08.40.02;	author miller;	state Exp;
branches;
next	1.378;

1.378
date	2025.04.23.14.59.45;	author miller;	state Exp;
branches;
next	1.377;

1.377
date	2025.04.23.14.56.34;	author miller;	state Exp;
branches;
next	1.376;

1.376
date	2025.04.23.14.55.23;	author miller;	state Exp;
branches;
next	1.375;

1.375
date	2025.04.23.14.55.00;	author miller;	state Exp;
branches;
next	1.374;

1.374
date	2025.04.23.14.40.02;	author miller;	state Exp;
branches;
next	1.373;

1.373
date	2025.04.23.14.37.38;	author miller;	state Exp;
branches;
next	1.372;

1.372
date	2025.04.23.14.31.36;	author miller;	state Exp;
branches;
next	1.371;

1.371
date	2025.04.23.14.14.10;	author miller;	state Exp;
branches;
next	1.370;

1.370
date	2025.04.23.14.04.21;	author miller;	state Exp;
branches;
next	1.369;

1.369
date	2025.04.23.14.03.25;	author miller;	state Exp;
branches;
next	1.368;

1.368
date	2025.04.23.13.54.17;	author miller;	state Exp;
branches;
next	1.367;

1.367
date	2025.04.23.13.49.16;	author miller;	state Exp;
branches;
next	1.366;

1.366
date	2025.04.23.13.46.05;	author miller;	state Exp;
branches;
next	1.365;

1.365
date	2025.04.23.13.39.40;	author miller;	state Exp;
branches;
next	1.364;

1.364
date	2025.04.23.13.32.19;	author miller;	state Exp;
branches;
next	1.363;

1.363
date	2025.04.22.08.46.50;	author miller;	state Exp;
branches;
next	1.362;

1.362
date	2025.04.22.08.46.13;	author miller;	state Exp;
branches;
next	1.361;

1.361
date	2025.04.22.08.43.19;	author miller;	state Exp;
branches;
next	1.360;

1.360
date	2025.04.22.08.36.06;	author miller;	state Exp;
branches;
next	1.359;

1.359
date	2025.04.22.08.25.15;	author miller;	state Exp;
branches;
next	1.358;

1.358
date	2025.04.22.08.17.12;	author miller;	state Exp;
branches;
next	1.357;

1.357
date	2025.04.22.07.56.05;	author miller;	state Exp;
branches;
next	1.356;

1.356
date	2025.04.22.07.51.54;	author miller;	state Exp;
branches;
next	1.355;

1.355
date	2025.04.22.07.34.07;	author miller;	state Exp;
branches;
next	1.354;

1.354
date	2025.04.22.07.18.33;	author miller;	state Exp;
branches;
next	1.353;

1.353
date	2025.04.22.07.16.46;	author miller;	state Exp;
branches;
next	1.352;

1.352
date	2025.04.22.07.13.26;	author miller;	state Exp;
branches;
next	1.351;

1.351
date	2025.04.22.07.12.36;	author miller;	state Exp;
branches;
next	1.350;

1.350
date	2025.04.22.07.03.33;	author miller;	state Exp;
branches;
next	1.349;

1.349
date	2025.04.22.06.59.25;	author miller;	state Exp;
branches;
next	1.348;

1.348
date	2025.04.22.06.47.06;	author miller;	state Exp;
branches;
next	1.347;

1.347
date	2025.04.22.06.46.06;	author miller;	state Exp;
branches;
next	1.346;

1.346
date	2025.04.22.06.43.57;	author miller;	state Exp;
branches;
next	1.345;

1.345
date	2025.04.22.06.37.51;	author miller;	state Exp;
branches;
next	1.344;

1.344
date	2025.04.22.06.29.10;	author miller;	state Exp;
branches;
next	1.343;

1.343
date	2025.04.22.06.22.39;	author miller;	state Exp;
branches;
next	1.342;

1.342
date	2025.04.22.06.06.10;	author miller;	state Exp;
branches;
next	1.341;

1.341
date	2025.04.21.15.46.45;	author miller;	state Exp;
branches;
next	1.340;

1.340
date	2025.04.21.15.41.14;	author miller;	state Exp;
branches;
next	1.339;

1.339
date	2025.04.21.15.38.23;	author miller;	state Exp;
branches;
next	1.338;

1.338
date	2025.04.21.15.35.43;	author miller;	state Exp;
branches;
next	1.337;

1.337
date	2025.04.21.15.12.53;	author miller;	state Exp;
branches;
next	1.336;

1.336
date	2025.04.21.15.09.06;	author miller;	state Exp;
branches;
next	1.335;

1.335
date	2025.04.21.15.07.30;	author miller;	state Exp;
branches;
next	1.334;

1.334
date	2025.04.21.15.02.21;	author miller;	state Exp;
branches;
next	1.333;

1.333
date	2025.04.21.14.13.39;	author miller;	state Exp;
branches;
next	1.332;

1.332
date	2025.04.21.14.12.05;	author miller;	state Exp;
branches;
next	1.331;

1.331
date	2025.04.21.14.05.01;	author miller;	state Exp;
branches;
next	1.330;

1.330
date	2025.04.21.13.57.07;	author miller;	state Exp;
branches;
next	1.329;

1.329
date	2025.04.21.13.51.57;	author miller;	state Exp;
branches;
next	1.328;

1.328
date	2025.04.21.13.28.55;	author miller;	state Exp;
branches;
next	1.327;

1.327
date	2025.04.21.11.15.15;	author miller;	state Exp;
branches;
next	1.326;

1.326
date	2025.04.21.11.03.17;	author miller;	state Exp;
branches;
next	1.325;

1.325
date	2025.04.21.10.24.09;	author miller;	state Exp;
branches;
next	1.324;

1.324
date	2025.04.21.10.08.51;	author miller;	state Exp;
branches;
next	1.323;

1.323
date	2025.04.21.10.02.40;	author miller;	state Exp;
branches;
next	1.322;

1.322
date	2025.04.21.10.00.51;	author miller;	state Exp;
branches;
next	1.321;

1.321
date	2025.04.21.09.41.03;	author miller;	state Exp;
branches;
next	1.320;

1.320
date	2025.04.21.09.34.40;	author miller;	state Exp;
branches;
next	1.319;

1.319
date	2025.04.19.15.38.11;	author miller;	state Exp;
branches;
next	1.318;

1.318
date	2025.04.19.15.32.19;	author miller;	state Exp;
branches;
next	1.317;

1.317
date	2025.04.19.15.20.07;	author miller;	state Exp;
branches;
next	1.316;

1.316
date	2025.04.19.15.16.25;	author miller;	state Exp;
branches;
next	1.315;

1.315
date	2025.04.19.15.10.09;	author miller;	state Exp;
branches;
next	1.314;

1.314
date	2025.04.19.15.09.27;	author miller;	state Exp;
branches;
next	1.313;

1.313
date	2025.04.19.15.06.00;	author miller;	state Exp;
branches;
next	1.312;

1.312
date	2025.04.18.10.57.56;	author miller;	state Exp;
branches;
next	1.311;

1.311
date	2025.04.18.08.37.55;	author miller;	state Exp;
branches;
next	1.310;

1.310
date	2025.04.18.08.28.03;	author miller;	state Exp;
branches;
next	1.309;

1.309
date	2025.04.17.07.39.24;	author miller;	state Exp;
branches;
next	1.308;

1.308
date	2025.04.17.07.37.44;	author miller;	state Exp;
branches;
next	1.307;

1.307
date	2025.04.17.07.36.05;	author miller;	state Exp;
branches;
next	1.306;

1.306
date	2025.04.17.07.33.00;	author miller;	state Exp;
branches;
next	1.305;

1.305
date	2025.04.17.07.28.39;	author miller;	state Exp;
branches;
next	1.304;

1.304
date	2025.04.17.07.22.46;	author miller;	state Exp;
branches;
next	1.303;

1.303
date	2025.04.17.07.15.04;	author miller;	state Exp;
branches;
next	1.302;

1.302
date	2025.04.17.07.05.37;	author miller;	state Exp;
branches;
next	1.301;

1.301
date	2025.04.17.07.04.38;	author miller;	state Exp;
branches;
next	1.300;

1.300
date	2025.04.17.07.02.08;	author miller;	state Exp;
branches;
next	1.299;

1.299
date	2025.04.17.06.59.15;	author miller;	state Exp;
branches;
next	1.298;

1.298
date	2025.04.17.06.57.59;	author miller;	state Exp;
branches;
next	1.297;

1.297
date	2025.04.17.06.55.24;	author miller;	state Exp;
branches;
next	1.296;

1.296
date	2025.04.17.06.53.55;	author miller;	state Exp;
branches;
next	1.295;

1.295
date	2025.04.17.06.52.45;	author miller;	state Exp;
branches;
next	1.294;

1.294
date	2025.04.17.06.51.34;	author miller;	state Exp;
branches;
next	1.293;

1.293
date	2025.04.17.06.50.40;	author miller;	state Exp;
branches;
next	1.292;

1.292
date	2025.04.15.15.08.31;	author miller;	state Exp;
branches;
next	1.291;

1.291
date	2025.04.15.14.44.26;	author miller;	state Exp;
branches;
next	1.290;

1.290
date	2025.04.15.14.43.26;	author miller;	state Exp;
branches;
next	1.289;

1.289
date	2025.04.15.14.36.05;	author miller;	state Exp;
branches;
next	1.288;

1.288
date	2025.04.15.14.02.47;	author miller;	state Exp;
branches;
next	1.287;

1.287
date	2025.04.15.13.55.22;	author miller;	state Exp;
branches;
next	1.286;

1.286
date	2025.04.15.13.48.31;	author miller;	state Exp;
branches;
next	1.285;

1.285
date	2025.04.15.13.31.30;	author miller;	state Exp;
branches;
next	1.284;

1.284
date	2025.04.15.13.24.25;	author miller;	state Exp;
branches;
next	1.283;

1.283
date	2025.04.14.12.09.18;	author miller;	state Exp;
branches;
next	1.282;

1.282
date	2025.04.14.12.06.43;	author miller;	state Exp;
branches;
next	1.281;

1.281
date	2025.04.14.12.04.01;	author miller;	state Exp;
branches;
next	1.280;

1.280
date	2025.04.14.11.59.05;	author miller;	state Exp;
branches;
next	1.279;

1.279
date	2025.04.14.11.56.52;	author miller;	state Exp;
branches;
next	1.278;

1.278
date	2025.04.14.11.40.09;	author miller;	state Exp;
branches;
next	1.277;

1.277
date	2025.04.14.11.35.21;	author miller;	state Exp;
branches;
next	1.276;

1.276
date	2025.04.14.11.23.14;	author miller;	state Exp;
branches;
next	1.275;

1.275
date	2025.04.14.11.19.34;	author miller;	state Exp;
branches;
next	1.274;

1.274
date	2025.04.14.11.11.12;	author miller;	state Exp;
branches;
next	1.273;

1.273
date	2025.04.14.11.08.57;	author miller;	state Exp;
branches;
next	1.272;

1.272
date	2025.04.14.11.02.43;	author miller;	state Exp;
branches;
next	1.271;

1.271
date	2025.04.14.10.56.11;	author miller;	state Exp;
branches;
next	1.270;

1.270
date	2025.04.14.10.54.12;	author miller;	state Exp;
branches;
next	1.269;

1.269
date	2025.04.14.10.52.53;	author miller;	state Exp;
branches;
next	1.268;

1.268
date	2025.04.14.10.46.55;	author miller;	state Exp;
branches;
next	1.267;

1.267
date	2025.04.14.10.43.08;	author miller;	state Exp;
branches;
next	1.266;

1.266
date	2025.04.14.10.37.22;	author miller;	state Exp;
branches;
next	1.265;

1.265
date	2025.04.14.10.33.49;	author miller;	state Exp;
branches;
next	1.264;

1.264
date	2025.04.14.10.31.13;	author miller;	state Exp;
branches;
next	1.263;

1.263
date	2025.04.14.10.27.44;	author miller;	state Exp;
branches;
next	1.262;

1.262
date	2025.04.14.10.20.14;	author miller;	state Exp;
branches;
next	1.261;

1.261
date	2025.04.14.10.18.20;	author miller;	state Exp;
branches;
next	1.260;

1.260
date	2025.04.14.09.50.32;	author miller;	state Exp;
branches;
next	1.259;

1.259
date	2025.04.14.09.32.37;	author miller;	state Exp;
branches;
next	1.258;

1.258
date	2025.04.14.09.28.00;	author miller;	state Exp;
branches;
next	1.257;

1.257
date	2025.04.13.15.28.28;	author miller;	state Exp;
branches;
next	1.256;

1.256
date	2025.04.13.15.23.24;	author miller;	state Exp;
branches;
next	1.255;

1.255
date	2025.04.09.13.53.51;	author miller;	state Exp;
branches;
next	1.254;

1.254
date	2025.04.09.13.51.00;	author miller;	state Exp;
branches;
next	1.253;

1.253
date	2025.04.09.13.47.07;	author miller;	state Exp;
branches;
next	1.252;

1.252
date	2025.04.09.13.43.17;	author miller;	state Exp;
branches;
next	1.251;

1.251
date	2025.04.09.13.41.58;	author miller;	state Exp;
branches;
next	1.250;

1.250
date	2025.04.09.13.41.05;	author miller;	state Exp;
branches;
next	1.249;

1.249
date	2025.04.09.13.38.42;	author miller;	state Exp;
branches;
next	1.248;

1.248
date	2025.04.09.13.28.58;	author miller;	state Exp;
branches;
next	1.247;

1.247
date	2025.04.09.13.20.24;	author miller;	state Exp;
branches;
next	1.246;

1.246
date	2025.04.08.09.31.05;	author miller;	state Exp;
branches;
next	1.245;

1.245
date	2025.04.08.09.19.28;	author miller;	state Exp;
branches;
next	1.244;

1.244
date	2025.04.08.08.47.59;	author miller;	state Exp;
branches;
next	1.243;

1.243
date	2025.04.08.08.45.20;	author miller;	state Exp;
branches;
next	1.242;

1.242
date	2025.04.08.08.43.32;	author miller;	state Exp;
branches;
next	1.241;

1.241
date	2025.04.08.08.33.21;	author miller;	state Exp;
branches;
next	1.240;

1.240
date	2025.04.08.08.28.27;	author miller;	state Exp;
branches;
next	1.239;

1.239
date	2025.04.08.06.49.08;	author miller;	state Exp;
branches;
next	1.238;

1.238
date	2025.04.08.06.45.31;	author miller;	state Exp;
branches;
next	1.237;

1.237
date	2025.04.08.06.38.17;	author miller;	state Exp;
branches;
next	1.236;

1.236
date	2025.04.08.06.34.46;	author miller;	state Exp;
branches;
next	1.235;

1.235
date	2025.04.07.12.04.19;	author miller;	state Exp;
branches;
next	1.234;

1.234
date	2025.04.07.11.58.13;	author miller;	state Exp;
branches;
next	1.233;

1.233
date	2025.04.07.11.50.04;	author miller;	state Exp;
branches;
next	1.232;

1.232
date	2025.04.07.11.44.21;	author miller;	state Exp;
branches;
next	1.231;

1.231
date	2025.04.07.11.37.12;	author miller;	state Exp;
branches;
next	1.230;

1.230
date	2025.04.07.11.19.22;	author miller;	state Exp;
branches;
next	1.229;

1.229
date	2025.04.07.11.15.58;	author miller;	state Exp;
branches;
next	1.228;

1.228
date	2025.04.07.11.13.18;	author miller;	state Exp;
branches;
next	1.227;

1.227
date	2025.04.01.12.01.51;	author miller;	state Exp;
branches;
next	1.226;

1.226
date	2025.04.01.12.00.21;	author miller;	state Exp;
branches;
next	1.225;

1.225
date	2025.04.01.11.28.25;	author miller;	state Exp;
branches;
next	1.224;

1.224
date	2025.04.01.08.34.36;	author miller;	state Exp;
branches;
next	1.223;

1.223
date	2025.04.01.08.24.15;	author miller;	state Exp;
branches;
next	1.222;

1.222
date	2025.04.01.07.54.21;	author miller;	state Exp;
branches;
next	1.221;

1.221
date	2025.04.01.07.37.10;	author miller;	state Exp;
branches;
next	1.220;

1.220
date	2025.04.01.07.32.45;	author miller;	state Exp;
branches;
next	1.219;

1.219
date	2025.03.31.12.33.56;	author miller;	state Exp;
branches;
next	1.218;

1.218
date	2025.03.31.12.30.41;	author miller;	state Exp;
branches;
next	1.217;

1.217
date	2025.03.31.12.28.12;	author miller;	state Exp;
branches;
next	1.216;

1.216
date	2025.03.31.12.18.56;	author miller;	state Exp;
branches;
next	1.215;

1.215
date	2025.03.31.11.57.20;	author miller;	state Exp;
branches;
next	1.214;

1.214
date	2025.03.31.11.54.45;	author miller;	state Exp;
branches;
next	1.213;

1.213
date	2025.03.31.11.34.32;	author miller;	state Exp;
branches;
next	1.212;

1.212
date	2025.03.31.11.22.55;	author miller;	state Exp;
branches;
next	1.211;

1.211
date	2025.03.31.11.15.37;	author miller;	state Exp;
branches;
next	1.210;

1.210
date	2025.03.28.04.19.00;	author miller;	state Exp;
branches;
next	1.209;

1.209
date	2025.03.28.04.15.15;	author miller;	state Exp;
branches;
next	1.208;

1.208
date	2025.03.28.04.11.54;	author miller;	state Exp;
branches;
next	1.207;

1.207
date	2025.03.28.04.10.18;	author miller;	state Exp;
branches;
next	1.206;

1.206
date	2025.03.28.04.05.00;	author miller;	state Exp;
branches;
next	1.205;

1.205
date	2025.03.28.03.59.02;	author miller;	state Exp;
branches;
next	1.204;

1.204
date	2025.03.28.03.54.26;	author miller;	state Exp;
branches;
next	1.203;

1.203
date	2025.03.28.03.31.51;	author miller;	state Exp;
branches;
next	1.202;

1.202
date	2025.03.28.03.25.19;	author miller;	state Exp;
branches;
next	1.201;

1.201
date	2025.03.28.03.12.36;	author miller;	state Exp;
branches;
next	1.200;

1.200
date	2025.03.28.03.05.29;	author miller;	state Exp;
branches;
next	1.199;

1.199
date	2025.03.25.12.11.53;	author miller;	state Exp;
branches;
next	1.198;

1.198
date	2025.03.25.12.02.52;	author miller;	state Exp;
branches;
next	1.197;

1.197
date	2025.03.25.11.57.54;	author miller;	state Exp;
branches;
next	1.196;

1.196
date	2025.03.24.16.12.11;	author miller;	state Exp;
branches;
next	1.195;

1.195
date	2025.03.24.16.08.20;	author miller;	state Exp;
branches;
next	1.194;

1.194
date	2025.03.24.13.37.35;	author miller;	state Exp;
branches;
next	1.193;

1.193
date	2025.03.24.13.34.41;	author miller;	state Exp;
branches;
next	1.192;

1.192
date	2025.03.24.13.32.13;	author miller;	state Exp;
branches;
next	1.191;

1.191
date	2025.03.24.13.13.26;	author miller;	state Exp;
branches;
next	1.190;

1.190
date	2025.03.24.13.01.49;	author miller;	state Exp;
branches;
next	1.189;

1.189
date	2025.03.24.12.42.37;	author miller;	state Exp;
branches;
next	1.188;

1.188
date	2025.03.24.12.41.01;	author miller;	state Exp;
branches;
next	1.187;

1.187
date	2025.03.21.08.36.23;	author miller;	state Exp;
branches;
next	1.186;

1.186
date	2025.03.21.08.32.28;	author miller;	state Exp;
branches;
next	1.185;

1.185
date	2025.03.21.08.30.54;	author miller;	state Exp;
branches;
next	1.184;

1.184
date	2025.03.20.11.41.44;	author miller;	state Exp;
branches;
next	1.183;

1.183
date	2025.03.20.11.35.53;	author miller;	state Exp;
branches;
next	1.182;

1.182
date	2025.03.20.11.32.31;	author miller;	state Exp;
branches;
next	1.181;

1.181
date	2025.03.20.11.21.51;	author miller;	state Exp;
branches;
next	1.180;

1.180
date	2025.03.20.11.16.35;	author miller;	state Exp;
branches;
next	1.179;

1.179
date	2025.03.20.10.10.22;	author miller;	state Exp;
branches;
next	1.178;

1.178
date	2025.03.20.09.37.00;	author miller;	state Exp;
branches;
next	1.177;

1.177
date	2025.03.20.09.32.26;	author miller;	state Exp;
branches;
next	1.176;

1.176
date	2025.03.20.09.23.27;	author miller;	state Exp;
branches;
next	1.175;

1.175
date	2025.03.20.06.54.04;	author miller;	state Exp;
branches;
next	1.174;

1.174
date	2025.03.20.06.48.45;	author miller;	state Exp;
branches;
next	1.173;

1.173
date	2025.03.20.06.33.54;	author miller;	state Exp;
branches;
next	1.172;

1.172
date	2025.03.20.06.29.16;	author miller;	state Exp;
branches;
next	1.171;

1.171
date	2025.03.20.06.25.54;	author miller;	state Exp;
branches;
next	1.170;

1.170
date	2025.03.20.06.11.55;	author miller;	state Exp;
branches;
next	1.169;

1.169
date	2025.03.19.14.45.03;	author miller;	state Exp;
branches;
next	1.168;

1.168
date	2025.03.19.14.34.34;	author miller;	state Exp;
branches;
next	1.167;

1.167
date	2025.03.19.13.43.23;	author miller;	state Exp;
branches;
next	1.166;

1.166
date	2025.03.18.09.59.19;	author miller;	state Exp;
branches;
next	1.165;

1.165
date	2025.03.18.09.57.32;	author miller;	state Exp;
branches;
next	1.164;

1.164
date	2025.03.18.09.21.23;	author miller;	state Exp;
branches;
next	1.163;

1.163
date	2025.03.18.08.58.32;	author miller;	state Exp;
branches;
next	1.162;

1.162
date	2025.03.18.08.48.38;	author miller;	state Exp;
branches;
next	1.161;

1.161
date	2025.03.18.08.46.47;	author miller;	state Exp;
branches;
next	1.160;

1.160
date	2025.03.18.08.33.03;	author miller;	state Exp;
branches;
next	1.159;

1.159
date	2025.03.18.08.22.23;	author miller;	state Exp;
branches;
next	1.158;

1.158
date	2025.03.18.08.20.47;	author miller;	state Exp;
branches;
next	1.157;

1.157
date	2025.03.17.12.26.34;	author miller;	state Exp;
branches;
next	1.156;

1.156
date	2025.03.17.12.22.22;	author miller;	state Exp;
branches;
next	1.155;

1.155
date	2025.03.16.08.29.31;	author miller;	state Exp;
branches;
next	1.154;

1.154
date	2025.03.16.08.23.52;	author miller;	state Exp;
branches;
next	1.153;

1.153
date	2025.03.16.08.17.41;	author miller;	state Exp;
branches;
next	1.152;

1.152
date	2025.03.16.08.11.26;	author miller;	state Exp;
branches;
next	1.151;

1.151
date	2025.03.16.08.04.56;	author miller;	state Exp;
branches;
next	1.150;

1.150
date	2025.03.13.15.05.54;	author miller;	state Exp;
branches;
next	1.149;

1.149
date	2025.03.13.15.01.11;	author miller;	state Exp;
branches;
next	1.148;

1.148
date	2025.03.13.14.56.08;	author miller;	state Exp;
branches;
next	1.147;

1.147
date	2025.03.13.14.53.13;	author miller;	state Exp;
branches;
next	1.146;

1.146
date	2025.03.13.13.44.13;	author miller;	state Exp;
branches;
next	1.145;

1.145
date	2025.03.13.09.21.42;	author miller;	state Exp;
branches;
next	1.144;

1.144
date	2025.03.13.09.19.47;	author miller;	state Exp;
branches;
next	1.143;

1.143
date	2025.03.13.09.16.43;	author miller;	state Exp;
branches;
next	1.142;

1.142
date	2025.03.13.09.08.23;	author miller;	state Exp;
branches;
next	1.141;

1.141
date	2025.03.13.09.05.15;	author miller;	state Exp;
branches;
next	1.140;

1.140
date	2025.03.13.08.38.51;	author miller;	state Exp;
branches;
next	1.139;

1.139
date	2025.03.07.08.19.34;	author miller;	state Exp;
branches;
next	1.138;

1.138
date	2025.03.06.15.50.51;	author miller;	state Exp;
branches;
next	1.137;

1.137
date	2025.03.04.10.01.13;	author miller;	state Exp;
branches;
next	1.136;

1.136
date	2025.03.04.09.51.39;	author miller;	state Exp;
branches;
next	1.135;

1.135
date	2025.03.04.09.34.19;	author miller;	state Exp;
branches;
next	1.134;

1.134
date	2025.03.04.09.20.58;	author miller;	state Exp;
branches;
next	1.133;

1.133
date	2025.03.04.09.09.12;	author miller;	state Exp;
branches;
next	1.132;

1.132
date	2025.03.04.09.06.07;	author miller;	state Exp;
branches;
next	1.131;

1.131
date	2025.03.04.07.45.27;	author miller;	state Exp;
branches;
next	1.130;

1.130
date	2025.03.04.07.41.39;	author miller;	state Exp;
branches;
next	1.129;

1.129
date	2025.03.04.07.39.35;	author miller;	state Exp;
branches;
next	1.128;

1.128
date	2025.03.04.07.36.06;	author miller;	state Exp;
branches;
next	1.127;

1.127
date	2025.03.04.07.32.55;	author miller;	state Exp;
branches;
next	1.126;

1.126
date	2025.03.04.07.25.44;	author miller;	state Exp;
branches;
next	1.125;

1.125
date	2025.03.03.07.59.57;	author miller;	state Exp;
branches;
next	1.124;

1.124
date	2025.02.27.08.16.47;	author miller;	state Exp;
branches;
next	1.123;

1.123
date	2025.02.27.07.58.35;	author miller;	state Exp;
branches;
next	1.122;

1.122
date	2025.02.27.07.54.02;	author miller;	state Exp;
branches;
next	1.121;

1.121
date	2025.02.27.07.46.26;	author miller;	state Exp;
branches;
next	1.120;

1.120
date	2025.02.27.07.43.52;	author miller;	state Exp;
branches;
next	1.119;

1.119
date	2025.02.26.13.35.16;	author miller;	state Exp;
branches;
next	1.118;

1.118
date	2025.02.26.13.15.33;	author miller;	state Exp;
branches;
next	1.117;

1.117
date	2025.02.26.13.09.35;	author miller;	state Exp;
branches;
next	1.116;

1.116
date	2025.02.26.13.00.11;	author miller;	state Exp;
branches;
next	1.115;

1.115
date	2025.02.26.07.04.13;	author miller;	state Exp;
branches;
next	1.114;

1.114
date	2025.02.26.07.01.45;	author miller;	state Exp;
branches;
next	1.113;

1.113
date	2025.02.26.06.58.11;	author miller;	state Exp;
branches;
next	1.112;

1.112
date	2025.02.26.06.56.36;	author miller;	state Exp;
branches;
next	1.111;

1.111
date	2025.02.26.06.50.23;	author miller;	state Exp;
branches;
next	1.110;

1.110
date	2025.02.26.06.47.54;	author miller;	state Exp;
branches;
next	1.109;

1.109
date	2025.02.26.06.44.16;	author miller;	state Exp;
branches;
next	1.108;

1.108
date	2025.02.26.06.41.47;	author miller;	state Exp;
branches;
next	1.107;

1.107
date	2025.02.26.06.39.31;	author miller;	state Exp;
branches;
next	1.106;

1.106
date	2025.02.26.06.27.23;	author miller;	state Exp;
branches;
next	1.105;

1.105
date	2025.02.26.05.42.48;	author miller;	state Exp;
branches;
next	1.104;

1.104
date	2025.02.25.15.11.38;	author miller;	state Exp;
branches;
next	1.103;

1.103
date	2025.02.25.15.06.14;	author miller;	state Exp;
branches;
next	1.102;

1.102
date	2025.02.25.15.01.41;	author miller;	state Exp;
branches;
next	1.101;

1.101
date	2025.02.25.14.59.18;	author miller;	state Exp;
branches;
next	1.100;

1.100
date	2025.02.25.12.37.03;	author miller;	state Exp;
branches;
next	1.99;

1.99
date	2025.02.25.12.25.23;	author miller;	state Exp;
branches;
next	1.98;

1.98
date	2025.02.25.12.05.20;	author miller;	state Exp;
branches;
next	1.97;

1.97
date	2025.02.25.11.53.22;	author miller;	state Exp;
branches;
next	1.96;

1.96
date	2025.02.25.11.21.42;	author miller;	state Exp;
branches;
next	1.95;

1.95
date	2025.02.25.03.52.40;	author miller;	state Exp;
branches;
next	1.94;

1.94
date	2025.02.24.19.40.18;	author miller;	state Exp;
branches;
next	1.93;

1.93
date	2025.02.24.19.34.16;	author miller;	state Exp;
branches;
next	1.92;

1.92
date	2025.02.24.19.32.22;	author miller;	state Exp;
branches;
next	1.91;

1.91
date	2025.02.24.19.25.37;	author miller;	state Exp;
branches;
next	1.90;

1.90
date	2025.02.24.19.01.32;	author miller;	state Exp;
branches;
next	1.89;

1.89
date	2025.02.24.18.58.53;	author miller;	state Exp;
branches;
next	1.88;

1.88
date	2025.02.24.18.57.10;	author miller;	state Exp;
branches;
next	1.87;

1.87
date	2025.02.24.18.56.02;	author miller;	state Exp;
branches;
next	1.86;

1.86
date	2025.02.24.18.55.01;	author miller;	state Exp;
branches;
next	1.85;

1.85
date	2025.02.24.18.53.42;	author miller;	state Exp;
branches;
next	1.84;

1.84
date	2025.02.24.18.50.40;	author miller;	state Exp;
branches;
next	1.83;

1.83
date	2025.02.24.18.42.15;	author miller;	state Exp;
branches;
next	1.82;

1.82
date	2025.02.24.18.25.18;	author miller;	state Exp;
branches;
next	1.81;

1.81
date	2025.02.24.18.16.14;	author miller;	state Exp;
branches;
next	1.80;

1.80
date	2025.02.24.18.11.14;	author miller;	state Exp;
branches;
next	1.79;

1.79
date	2025.02.24.18.08.37;	author miller;	state Exp;
branches;
next	1.78;

1.78
date	2025.02.24.12.55.13;	author miller;	state Exp;
branches;
next	1.77;

1.77
date	2025.02.24.12.41.59;	author miller;	state Exp;
branches;
next	1.76;

1.76
date	2025.02.24.12.39.45;	author miller;	state Exp;
branches;
next	1.75;

1.75
date	2025.02.17.11.46.40;	author miller;	state Exp;
branches;
next	1.74;

1.74
date	2025.02.17.11.41.42;	author miller;	state Exp;
branches;
next	1.73;

1.73
date	2025.02.17.11.32.02;	author miller;	state Exp;
branches;
next	1.72;

1.72
date	2025.02.17.11.29.28;	author miller;	state Exp;
branches;
next	1.71;

1.71
date	2025.02.17.11.27.25;	author miller;	state Exp;
branches;
next	1.70;

1.70
date	2025.02.17.09.57.49;	author miller;	state Exp;
branches;
next	1.69;

1.69
date	2025.02.17.08.07.15;	author miller;	state Exp;
branches;
next	1.68;

1.68
date	2025.02.17.08.02.17;	author miller;	state Exp;
branches;
next	1.67;

1.67
date	2025.02.17.07.58.47;	author miller;	state Exp;
branches;
next	1.66;

1.66
date	2025.02.17.07.56.42;	author miller;	state Exp;
branches;
next	1.65;

1.65
date	2025.02.17.07.16.55;	author miller;	state Exp;
branches;
next	1.64;

1.64
date	2025.02.10.03.19.26;	author miller;	state Exp;
branches;
next	1.63;

1.63
date	2025.02.10.03.10.18;	author miller;	state Exp;
branches;
next	1.62;

1.62
date	2025.02.10.03.07.22;	author miller;	state Exp;
branches;
next	1.61;

1.61
date	2025.02.09.16.58.43;	author miller;	state Exp;
branches;
next	1.60;

1.60
date	2025.02.06.12.19.11;	author miller;	state Exp;
branches;
next	1.59;

1.59
date	2025.02.06.12.12.55;	author miller;	state Exp;
branches;
next	1.58;

1.58
date	2025.02.06.12.11.16;	author miller;	state Exp;
branches;
next	1.57;

1.57
date	2025.02.06.12.09.35;	author miller;	state Exp;
branches;
next	1.56;

1.56
date	2025.02.03.04.45.47;	author miller;	state Exp;
branches;
next	1.55;

1.55
date	2025.02.03.04.44.33;	author miller;	state Exp;
branches;
next	1.54;

1.54
date	2025.02.03.04.40.37;	author miller;	state Exp;
branches;
next	1.53;

1.53
date	2025.02.03.04.29.26;	author miller;	state Exp;
branches;
next	1.52;

1.52
date	2025.02.02.18.10.30;	author miller;	state Exp;
branches;
next	1.51;

1.51
date	2025.02.02.18.02.28;	author miller;	state Exp;
branches;
next	1.50;

1.50
date	2025.02.02.17.27.32;	author miller;	state Exp;
branches;
next	1.49;

1.49
date	2025.02.02.17.26.19;	author miller;	state Exp;
branches;
next	1.48;

1.48
date	2025.02.02.17.23.01;	author miller;	state Exp;
branches;
next	1.47;

1.47
date	2025.02.02.17.07.56;	author miller;	state Exp;
branches;
next	1.46;

1.46
date	2025.02.02.16.56.00;	author miller;	state Exp;
branches;
next	1.45;

1.45
date	2025.02.02.16.53.07;	author miller;	state Exp;
branches;
next	1.44;

1.44
date	2025.02.02.16.46.29;	author miller;	state Exp;
branches;
next	1.43;

1.43
date	2025.02.02.16.38.56;	author miller;	state Exp;
branches;
next	1.42;

1.42
date	2025.02.02.16.35.57;	author miller;	state Exp;
branches;
next	1.41;

1.41
date	2025.02.02.14.49.37;	author miller;	state Exp;
branches;
next	1.40;

1.40
date	2025.02.02.14.33.38;	author miller;	state Exp;
branches;
next	1.39;

1.39
date	2025.02.02.14.20.32;	author miller;	state Exp;
branches;
next	1.38;

1.38
date	2025.01.31.18.08.12;	author miller;	state Exp;
branches;
next	1.37;

1.37
date	2025.01.25.05.52.55;	author miller;	state Exp;
branches;
next	1.36;

1.36
date	2025.01.25.05.43.21;	author miller;	state Exp;
branches;
next	1.35;

1.35
date	2025.01.25.05.41.15;	author miller;	state Exp;
branches;
next	1.34;

1.34
date	2025.01.25.05.31.00;	author miller;	state Exp;
branches;
next	1.33;

1.33
date	2025.01.25.05.20.40;	author miller;	state Exp;
branches;
next	1.32;

1.32
date	2025.01.25.05.12.01;	author miller;	state Exp;
branches;
next	1.31;

1.31
date	2025.01.25.05.09.29;	author miller;	state Exp;
branches;
next	1.30;

1.30
date	2025.01.25.05.08.01;	author miller;	state Exp;
branches;
next	1.29;

1.29
date	2025.01.25.05.04.25;	author miller;	state Exp;
branches;
next	1.28;

1.28
date	2025.01.25.05.03.38;	author miller;	state Exp;
branches;
next	1.27;

1.27
date	2025.01.25.05.00.54;	author miller;	state Exp;
branches;
next	1.26;

1.26
date	2025.01.25.04.59.37;	author miller;	state Exp;
branches;
next	1.25;

1.25
date	2025.01.25.04.57.55;	author miller;	state Exp;
branches;
next	1.24;

1.24
date	2025.01.25.04.52.56;	author miller;	state Exp;
branches;
next	1.23;

1.23
date	2025.01.25.04.46.43;	author miller;	state Exp;
branches;
next	1.22;

1.22
date	2025.01.25.04.44.55;	author miller;	state Exp;
branches;
next	1.21;

1.21
date	2025.01.25.04.42.46;	author miller;	state Exp;
branches;
next	1.20;

1.20
date	2025.01.25.04.39.53;	author miller;	state Exp;
branches;
next	1.19;

1.19
date	2025.01.25.04.38.58;	author miller;	state Exp;
branches;
next	1.18;

1.18
date	2025.01.25.04.34.06;	author miller;	state Exp;
branches;
next	1.17;

1.17
date	2025.01.25.04.29.56;	author miller;	state Exp;
branches;
next	1.16;

1.16
date	2025.01.21.16.19.03;	author miller;	state Exp;
branches;
next	1.15;

1.15
date	2025.01.21.16.05.59;	author miller;	state Exp;
branches;
next	1.14;

1.14
date	2025.01.21.15.56.59;	author miller;	state Exp;
branches;
next	1.13;

1.13
date	2025.01.20.12.57.05;	author miller;	state Exp;
branches;
next	1.12;

1.12
date	2025.01.15.05.52.12;	author miller;	state Exp;
branches;
next	1.11;

1.11
date	2025.01.15.05.43.47;	author miller;	state Exp;
branches;
next	1.10;

1.10
date	2025.01.15.04.43.02;	author miller;	state Exp;
branches;
next	1.9;

1.9
date	2025.01.15.04.17.03;	author miller;	state Exp;
branches;
next	1.8;

1.8
date	2025.01.14.15.10.25;	author miller;	state Exp;
branches;
next	1.7;

1.7
date	2025.01.14.15.08.11;	author miller;	state Exp;
branches;
next	1.6;

1.6
date	2025.01.14.15.02.09;	author miller;	state Exp;
branches;
next	1.5;

1.5
date	2025.01.14.14.54.20;	author miller;	state Exp;
branches;
next	1.4;

1.4
date	2025.01.14.14.52.04;	author miller;	state Exp;
branches;
next	1.3;

1.3
date	2025.01.14.14.49.20;	author miller;	state Exp;
branches;
next	1.2;

1.2
date	2025.01.14.14.47.31;	author miller;	state Exp;
branches;
next	1.1;

1.1
date	2025.01.14.14.40.52;	author miller;	state Exp;
branches;
next	;

1.748.1.1
date	2025.08.21.08.27.17;	author miller;	state Exp;
branches;
next	1.748.1.2;

1.748.1.2
date	2025.08.21.08.31.47;	author miller;	state Exp;
branches;
next	1.748.1.3;

1.748.1.3
date	2025.08.21.09.31.04;	author miller;	state Exp;
branches;
next	1.748.1.4;

1.748.1.4
date	2025.08.21.11.51.06;	author miller;	state Exp;
branches;
next	;

1.749.1.1
date	2025.08.21.08.08.36;	author miller;	state Exp;
branches;
next	;

1.749.2.1
date	2025.08.21.08.09.57;	author miller;	state Exp;
branches;
next	;


desc
@@


1.761
log
@*** empty log message ***
@
text
@#!KAMAILIO
#
# Kamailio SIP Server v5.5 - default configuration script
#     - web: https://www.kamailio.org
#     - git: https://github.com/kamailio/kamailio
#
# Direct your questions about this file to: <sr-users@@lists.kamailio.org>
#
# Refer to the Core CookBook at https://www.kamailio.org/wiki/
# for an explanation of possible statements, functions and parameters.
#
# Note: the comments can be:
#     - lines starting with #, but not the pre-processor directives,
#       which start with #!, like #!define, #!ifdef, #!endif, #!else, #!trydef,
#       #!subst, #!substdef, ...
#     - lines starting with //
#     - blocks enclosed in between /* */
# Note: the config performs symmetric SIP signaling
#     - it sends the reply to the source address of the request
#     - remove the use of force_rport() for asymmetric SIP signaling
#
# Several features can be enabled using '#!define WITH_FEATURE' directives:
#
# *** To run in debug mode:
#     - define WITH_DEBUG
#     - debug level increased to 3, logs still sent to syslog
#     - debugger module loaded with cfgtrace enabled
#
# *** To enable mysql:
#!define WITH_MYSQL
#
# *** To enable authentication execute:
#     - enable mysql
#     - define WITH_AUTH
#     - add users using 'kamctl' or 'kamcli'
#
# *** To enable IP authentication execute:
#     - enable mysql
#     - enable authentication
#     - define WITH_IPAUTH
#     - add IP addresses with group id '1' to 'address' table
#
# *** To enable persistent user location execute:
#     - enable mysql
#!define WITH_USRLOCDB
#
# *** To enable presence server execute:
#     - enable mysql
#     - define WITH_PRESENCE
#     - if modified headers or body in config must be used by presence handling:
#		- define WITH_MSGREBUILD
#
# *** To enable nat traversal execute:
#!define WITH_NAT
#     - option for NAT SIP OPTIONS keepalives: WITH_NATSIPPING
#     - install RTPProxy: http://www.rtpproxy.org
#     - start RTPProxy:
#        rtpproxy -l _your_public_ip_ -s udp:localhost:7722
#
# *** To use RTPEngine (instead of RTPProxy) for nat traversal execute:
#!define WITH_RTPENGINE
#     - install RTPEngine: https://github.com/sipwise/rtpengine
#     - start RTPEngine:
#        rtpengine --listen-ng=127.0.0.1:2223 ...
#
# *** To enable PSTN gateway routing execute:
#     - define WITH_PSTN
#     - set the value of pstn.gw_ip
#     - check route[PSTN] for regexp routing condition
#
# *** To enable database aliases lookup execute:
#     - enable mysql
#     - define WITH_ALIASDB
#
# *** To enable speed dial lookup execute:
#     - enable mysql
#     - define WITH_SPEEDDIAL
#
# *** To enable multi-domain support execute:
#     - enable mysql
#     - define WITH_MULTIDOMAIN
#
# *** To enable TLS support execute:
#     - adjust CFGDIR/tls.cfg as needed
#     - define WITH_TLS
#
# *** To enable JSONRPC over HTTP(S) support execute:
#     - define WITH_JSONRPC
#     - adjust event_route[xhttp:request] for access policy
#
# *** To enable anti-flood detection execute:
#     - adjust pike and htable=>ipban settings as needed (default is
#       block if more than 16 requests in 2 seconds and ban for 300 seconds)
#     - define WITH_ANTIFLOOD
#
# *** To block 3XX redirect replies execute:
#     - define WITH_BLOCK3XX
#
# *** To block 401 and 407 authentication replies execute:
#     - define WITH_BLOCK401407
#
# *** To enable VoiceMail routing execute:
#     - define WITH_VOICEMAIL
#     - set the value of voicemail.srv_ip
#     - adjust the value of voicemail.srv_port
#
# *** To enhance accounting execute:
#     - enable mysql
#     - define WITH_ACCDB
#     - add following columns to database
#!ifdef ACCDB_COMMENT
  ALTER TABLE acc ADD COLUMN src_user VARCHAR(64) NOT NULL DEFAULT '';
  ALTER TABLE acc ADD COLUMN src_domain VARCHAR(128) NOT NULL DEFAULT '';
  ALTER TABLE acc ADD COLUMN src_ip varchar(64) NOT NULL default '';
  ALTER TABLE acc ADD COLUMN dst_ouser VARCHAR(64) NOT NULL DEFAULT '';
  ALTER TABLE acc ADD COLUMN dst_user VARCHAR(64) NOT NULL DEFAULT '';
  ALTER TABLE acc ADD COLUMN dst_domain VARCHAR(128) NOT NULL DEFAULT '';
  ALTER TABLE missed_calls ADD COLUMN src_user VARCHAR(64) NOT NULL DEFAULT '';
  ALTER TABLE missed_calls ADD COLUMN src_domain VARCHAR(128) NOT NULL DEFAULT '';
  ALTER TABLE missed_calls ADD COLUMN src_ip varchar(64) NOT NULL default '';
  ALTER TABLE missed_calls ADD COLUMN dst_ouser VARCHAR(64) NOT NULL DEFAULT '';
  ALTER TABLE missed_calls ADD COLUMN dst_user VARCHAR(64) NOT NULL DEFAULT '';
  ALTER TABLE missed_calls ADD COLUMN dst_domain VARCHAR(128) NOT NULL DEFAULT '';
#!endif

####### Include Local Config If Exists #########
import_file "kamailio-local.cfg"

####### Defined Values #########

# *** Value defines - IDs used later in config
#!ifdef WITH_DEBUG
#!define DBGLEVEL 3
#!else
#!define DBGLEVEL 2
#!endif

#!ifdef WITH_MYSQL
# - database URL - used to connect to database server by modules such
#       as: auth_db, acc, usrloc, a.s.o.
#!trydef DBURL "mysql://kamailio:kamailiorw@@localhost/kamailio"
#!endif

#!ifdef WITH_MULTIDOMAIN
# - the value for 'use_domain' parameters
#!define MULTIDOMAIN 1
#!else
#!define MULTIDOMAIN 0
#!endif

# - flags
#   FLT_ - per transaction (message) flags
#!define FLT_ACC 1
#!define FLT_ACCMISSED 2
#!define FLT_ACCFAILED 3
#!define FLT_NATS 5

#	FLB_ - per branch flags
#!define FLB_NATB 6
#!define FLB_NATSIPPING 7

####### Global Parameters #########

/* LOG Levels: 3=DBG, 2=INFO, 1=NOTICE, 0=WARN, -1=ERR, ... */
debug=DBGLEVEL

/* set to 'yes' to print log messages to terminal or use '-E' cli option */
log_stderror=no

memdbg=5
memlog=5

log_facility=LOG_LOCAL0
log_prefix="{$mt $hdr(CSeq) $ci} "

/* number of SIP routing processes for each UDP socket
 * - value inherited by tcp_children and sctp_children when not set explicitely */
children=8

/* uncomment the next line to disable TCP (default on) */
# disable_tcp=yes

/* number of SIP routing processes for all TCP/TLS sockets */
# tcp_children=8

/* uncomment the next line to disable the auto discovery of local aliases
 * based on reverse DNS on IPs (default on) */
# auto_aliases=no

/* add local domain aliases - it can be set many times */
# alias="sip.mydomain.com"

/* listen sockets - if none set, Kamailio binds to all local IP addresses
 * - basic prototype (full prototype can be found in Wiki - Core Cookbook):
 *      listen=[proto]:[localip]:[lport] advertise [publicip]:[pport]
 * - it can be set many times to add more sockets to listen to */
# listen=udp:0.0.0.0:5060
listen=udp:10.0.5.5:5060 advertise 163.22.22.61:5060
listen=tcp:10.0.5.5:5060 advertise 163.22.22.61:5060

/* life time of TCP connection when there is no traffic
 * - a bit higher than registration expires to cope with UA behind NAT */
#tcp_connection_lifetime=3605
tcp_connection_lifetime=7210
/* upper limit for TCP connections (it includes the TLS connections) */
tcp_max_connections=2048

#!ifdef WITH_JSONRPC
tcp_accept_no_cl=yes
#!endif

#!ifdef WITH_TLS
enable_tls=yes

/* upper limit for TLS connections */
tls_max_connections=2048
#!endif

/* set it to yes to enable sctp and load sctp.so module */
enable_sctp=no

####### Custom Parameters #########

/* These parameters can be modified runtime via RPC interface
 * - see the documentation of 'cfg_rpc' module.
 *
 * Format: group.id = value 'desc' description
 * Access: $sel(cfg_get.group.id) or @@cfg_get.group.id */

#!ifdef WITH_PSTN
/* PSTN GW Routing
 *
 * - pstn.gw_ip: valid IP or hostname as string value, example:
 * pstn.gw_ip = "10.0.0.101" desc "My PSTN GW Address"
 *
 * - by default is empty to avoid misrouting */
pstn.gw_ip = "" desc "PSTN GW Address"
pstn.gw_port = "" desc "PSTN GW Port"
#!endif

#!ifdef WITH_VOICEMAIL
/* VoiceMail Routing on offline, busy or no answer
 *
 * - by default Voicemail server IP is empty to avoid misrouting */
voicemail.srv_ip = "" desc "VoiceMail IP Address"
voicemail.srv_port = "5060" desc "VoiceMail Port"
#!endif

####### Modules Section ########

/* set paths to location of modules */
# mpath="/usr/lib/x86_64-linux-gnu/kamailio/modules/"

#!ifdef WITH_MYSQL
loadmodule "db_mysql.so"
#!endif

#!ifdef WITH_JSONRPC
loadmodule "xhttp.so"
#!endif
loadmodule "jsonrpcs.so"
loadmodule "kex.so"
loadmodule "corex.so"
loadmodule "tm.so"
loadmodule "tmx.so"
loadmodule "sl.so"
loadmodule "rr.so"
loadmodule "pv.so"
loadmodule "maxfwd.so"
loadmodule "usrloc.so"
loadmodule "registrar.so"
loadmodule "textops.so"
loadmodule "textopsx.so"
loadmodule "siputils.so"
loadmodule "xlog.so"
loadmodule "sanity.so"
loadmodule "ctl.so"
loadmodule "cfg_rpc.so"
loadmodule "acc.so"
loadmodule "counters.so"

loadmodule "sqlops.so"
loadmodule "dialog.so"
loadmodule "timer.so"
loadmodule "rtimer.so"
loadmodule "uac.so"
loadmodule "exec.so"
loadmodule "sdpops.so"
loadmodule "htable.so"
loadmodule "nat_traversal.so"
#!ifdef WITH_AUTH
loadmodule "auth.so"
loadmodule "auth_db.so"
#!ifdef WITH_IPAUTH
loadmodule "permissions.so"
#!endif
#!endif

#!ifdef WITH_ALIASDB
loadmodule "alias_db.so"
#!endif

#!ifdef WITH_SPEEDDIAL
loadmodule "speeddial.so"
#!endif

#!ifdef WITH_MULTIDOMAIN
loadmodule "domain.so"
#!endif

#!ifdef WITH_PRESENCE
loadmodule "presence.so"
loadmodule "presence_xml.so"
#!endif

#!ifdef WITH_NAT
loadmodule "nathelper.so"
#!ifdef WITH_RTPENGINE
loadmodule "rtpengine.so"
#!else
loadmodule "rtpproxy.so"
#!endif
#!endif

#!ifdef WITH_TLS
loadmodule "tls.so"
#!endif

#!ifdef WITH_ANTIFLOOD
loadmodule "htable.so"
loadmodule "pike.so"
#!endif

#!ifdef WITH_DEBUG
loadmodule "debugger.so"
#!endif

# ----------------- setting module-specific parameters ---------------

# ----- jsonrpcs params -----
modparam("jsonrpcs", "pretty_format", 1)
/* set the path to RPC fifo control file */
# modparam("jsonrpcs", "fifo_name", "/run/kamailio/kamailio_rpc.fifo")
/* set the path to RPC unix socket control file */
# modparam("jsonrpcs", "dgram_socket", "/run/kamailio/kamailio_rpc.sock")
#!ifdef WITH_JSONRPC
modparam("jsonrpcs", "transport", 7)
#!endif

# ----- ctl params -----
/* set the path to RPC unix socket control file */
modparam("ctl", "binrpc", "/var/run/kamailio/kamailio_ctl")

# ----- sanity params -----
modparam("sanity", "autodrop", 0)

# ----- tm params -----
# auto-discard branches from previous serial forking leg
modparam("tm", "failure_reply_mode", 3)
# default retransmission timeout: 30sec
modparam("tm", "fr_timer", 30000)
# default invite retransmission timeout after 1xx: 120sec
modparam("tm", "fr_inv_timer", 120000)
modparam("tm", "local_ack_mode", 0)

# ----- rr params -----
# set next param to 1 to add value to ;lr param (helps with some UAs)
modparam("rr", "enable_full_lr", 0)
# do not append from tag to the RR (no need for this script)
modparam("rr", "append_fromtag", 1)

# ----- registrar params -----
modparam("registrar", "method_filtering", 1)
/* uncomment the next line to disable parallel forking via location */
# modparam("registrar", "append_branches", 0)
/* uncomment the next line not to allow more than 10 contacts per AOR */
# modparam("registrar", "max_contacts", 10)
/* max value for expires of registrations */
modparam("registrar", "max_expires", 3600)
/* set it to 1 to enable GRUU */
modparam("registrar", "gruu_enabled", 0)
/* set it to 0 to disable Path handling */
modparam("registrar", "use_path", 1)
/* save Path even if not listed in Supported header */
modparam("registrar", "path_mode", 0)

# ----- acc params -----
/* what special events should be accounted ? */
modparam("acc", "early_media", 0)
modparam("acc", "report_ack", 0)
modparam("acc", "report_cancels", 0)
/* by default ww do not adjust the direct of the sequential requests.
 * if you enable this parameter, be sure the enable "append_fromtag"
 * in "rr" module */
modparam("acc", "detect_direction", 0)
/* account triggers (flags) */
modparam("acc", "log_flag", FLT_ACC)
modparam("acc", "log_missed_flag", FLT_ACCMISSED)
modparam("acc", "log_extra",
	"src_user=$fU;src_domain=$fd;src_ip=$si;"
	"dst_ouser=$tU;dst_user=$rU;dst_domain=$rd")
modparam("acc", "failed_transaction_flag", FLT_ACCFAILED)
/* enhanced DB accounting */
#!ifdef WITH_ACCDB
modparam("acc", "db_flag", FLT_ACC)
modparam("acc", "db_missed_flag", FLT_ACCMISSED)
modparam("acc", "db_url", DBURL)
modparam("acc", "db_extra",
	"src_user=$fU;src_domain=$fd;src_ip=$si;"
	"dst_ouser=$tU;dst_user=$rU;dst_domain=$rd")
#!endif

# ----- usrloc params -----
modparam("usrloc", "timer_interval", 60)
modparam("usrloc", "timer_procs", 1)
modparam("usrloc", "use_domain", MULTIDOMAIN)
/* enable DB persistency for location entries */
#!ifdef WITH_USRLOCDB
modparam("usrloc", "db_url", DBURL)
modparam("usrloc", "db_mode", 2)
modparam("usrloc", "db_insert_update", 1)
#!endif

# ----- auth_db params -----
#!ifdef WITH_AUTH
modparam("auth_db", "db_url", DBURL)
modparam("auth_db", "calculate_ha1", yes)
modparam("auth_db", "password_column", "password")
modparam("auth_db", "load_credentials", "")
modparam("auth_db", "use_domain", MULTIDOMAIN)

# ----- permissions params -----
#!ifdef WITH_IPAUTH
modparam("permissions", "db_url", DBURL)
modparam("permissions", "load_backends", 1)
#!endif

#!endif

# ----- alias_db params -----
#!ifdef WITH_ALIASDB
modparam("alias_db", "db_url", DBURL)
modparam("alias_db", "use_domain", MULTIDOMAIN)
#!endif

# ----- speeddial params -----
#!ifdef WITH_SPEEDDIAL
modparam("speeddial", "db_url", DBURL)
modparam("speeddial", "use_domain", MULTIDOMAIN)
#!endif

# ----- domain params -----
#!ifdef WITH_MULTIDOMAIN
modparam("domain", "db_url", DBURL)
/* register callback to match myself condition with domains list */
modparam("domain", "register_myself", 1)
#!endif

#!ifdef WITH_PRESENCE
# ----- presence params -----
modparam("presence", "db_url", DBURL)

# ----- presence_xml params -----
modparam("presence_xml", "db_url", DBURL)
modparam("presence_xml", "force_active", 1)
#!endif

#!ifdef WITH_NAT


#!ifdef WITH_RTPENGINE
# ----- rtpengine params -----
modparam("rtpengine", "db_url" , DBURL)
modparam("rtpengine", "table_name", "rtpengine")
modparam("rtpengine", "setid_avp", "$avp(setid)")
modparam("rtpengine", "rtpengine_disable_tout", 3)
modparam("rtpengine", "mos_A_label_pv", "$avp(mos_A_label)")
modparam("rtpengine", "mos_average_packetloss_A_pv", "$avp(mos_average_packetloss_A)")
modparam("rtpengine", "mos_average_jitter_A_pv", "$avp(mos_average_jitter_A)")
modparam("rtpengine", "mos_average_roundtrip_A_pv", "$avp(mos_average_roundtrip_A)")
modparam("rtpengine", "mos_average_A_pv", "$avp(mos_average_A)")
modparam("rtpengine", "mos_min_A_pv", "$avp(mos_min_A)")
modparam("rtpengine", "mos_min_jitter_A_pv", "$avp(mos_min_jitter_A)")
modparam("rtpengine", "mos_max_A_pv", "$avp(mos_max_A)")

modparam("rtpengine", "mos_B_label_pv", "$avp(mos_B_label)")
modparam("rtpengine", "mos_average_packetloss_B_pv", "$avp(mos_average_packetloss_B)")
modparam("rtpengine", "mos_average_jitter_B_pv", "$avp(mos_average_jitter_B)")
modparam("rtpengine", "mos_average_roundtrip_B_pv", "$avp(mos_average_roundtrip_B)")
modparam("rtpengine", "mos_average_B_pv", "$avp(mos_average_B)")
modparam("rtpengine", "mos_min_B_pv", "$avp(mos_min_B)")
modparam("rtpengine", "mos_min_jitter_B_pv", "$avp(mos_min_jitter_B)")
modparam("rtpengine", "mos_max_B_pv", "$avp(mos_max_B)")

modparam("rtpengine", "mos_max_pv", "$avp(mos_max)")
modparam("rtpengine", "mos_average_pv", "$avp(mos_average)")
modparam("rtpengine", "mos_min_pv", "$avp(mos_min)")

modparam("rtpengine", "mos_average_packetloss_pv", "$avp(mos_average_packetloss)")
modparam("rtpengine", "mos_average_jitter_pv", "$avp(mos_average_jitter)")
modparam("rtpengine", "mos_average_roundtrip_pv", "$avp(mos_average_roundtrip)")
modparam("rtpengine", "mos_average_samples_pv", "$avp(mos_average_samples)")

modparam("rtpengine", "mos_min_pv", "$avp(mos_min)")
modparam("rtpengine", "mos_min_at_pv", "$avp(mos_min_at)")
modparam("rtpengine", "mos_min_packetloss_pv", "$avp(mos_min_packetloss)")
modparam("rtpengine", "mos_min_jitter_pv", "$avp(mos_min_jitter)")
modparam("rtpengine", "mos_min_roundtrip_pv", "$avp(mos_min_roundtrip)")

modparam("rtpengine", "mos_max_pv", "$avp(mos_max)")
modparam("rtpengine", "mos_max_at_pv", "$avp(mos_max_at)")
modparam("rtpengine", "mos_max_packetloss_pv", "$avp(mos_max_packetloss)")
modparam("rtpengine", "mos_max_jitter_pv", "$avp(mos_max_jitter)")
modparam("rtpengine", "mos_max_roundtrip_pv", "$avp(mos_max_roundtrip)")

#!else
# ----- rtpproxy params -----
modparam("rtpproxy", "rtpproxy_sock", "udp:127.0.0.1:7722")
#!endif
# ----- nathelper params -----
modparam("nathelper", "natping_interval", 30)
modparam("nathelper", "ping_nated_only", 1)
modparam("nathelper", "sipping_bflag", FLB_NATSIPPING)
modparam("nathelper", "sipping_from", "sip:pinger@@kamailio.org")

# params needed for NAT traversal in other modules
modparam("nathelper|registrar", "received_avp", "$avp(RECEIVED)")
modparam("usrloc", "nat_bflag", FLB_NATB)
#!endif

#!ifdef WITH_TLS
# ----- tls params -----
modparam("tls", "config", "/etc/kamailio/tls.cfg")
#!endif

#!ifdef WITH_ANTIFLOOD
# ----- pike params -----
modparam("pike", "sampling_time_unit", 2)
modparam("pike", "reqs_density_per_unit", 16)
modparam("pike", "remove_latency", 4)

# ----- htable params -----
/* ip ban htable with autoexpire after 5 minutes */
modparam("htable", "htable", "ipban=>size=8;autoexpire=300;")
#!endif

#!ifdef WITH_DEBUG
# ----- debugger params -----
modparam("debugger", "cfgtrace", 1)
modparam("debugger", "log_level_name", "exec")
#!endif

# --------dlg params-------
modparam("dialog", "enable_stats", 1)
modparam("dialog", "db_url", DBURL)
modparam("dialog", "db_mode", 1)
modparam("dialog", "dlg_flag", 4)
modparam("dialog", "profiles_with_value", "concurrent_calls")
modparam("dialog", "vars_table_name", "dialog_vars")
modparam("dialog", "vars_key_column", "dialog_key")
modparam("dialog", "vars_value_column", "dialog_value")
modparam("dialog", "default_timeout", 3600)
##modparam("dialog", "keep_proxy_rr", 3)
##modparam("dialog", "ka_timer", 10)
##modparam("dialog", "send_bye", 1)
modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
modparam("rtimer", "exec", "timer=ta;route=SendINVITE")

modparam("sqlops", "connect_mode", 1)
modparam("sqlops","sqlcon","cb=>mysql://kamailio:kamailiorw@@localhost/kamailio")
modparam("htable", "htable", "health=>size=4;autoexpire=0;")
modparam("htable", "htable", "dialog_track=>size=10;autoexpire=0;")
modparam("htable", "htable", "rtpnode=>size=8;autoexpire=0;")
##modparam("timer", "declare_timer", "tmr1=SendINVITE,10000,,enable");
modparam("pv", "shvset", "test=i:0")

modparam("pv", "varset", "id=i:0")
modparam("pv", "varset", "flag=s:miller")
loadmodule "statistics.so"
modparam("statistics", "variable", "counter/no_reset")
####### Routing Logic ########


/* Main SIP request routing logic
 * - processing of any incoming SIP request starts with this route
 * - note: this is the same as route { ... } */
request_route {
       //	$avp(setid)=1;
	 //   xlog("L_INFO", "Your IN\n"); 
	# per request initial checks
/*	if (registered("location")) {
		if($shv(test)==0){
			 xlog("L_INFO", "Your IN\n"); 
			route(TEST);
			$shv(test)=1;
		}
	}*/
	route(REQINIT);
/*	if(dlg_set_timeout("3600"))
        {
                 xlog("L_INFO", "TIME_OUT1 \n");
        }*/
	if (is_method("INVITE") && ( $var(flag) != $ci )) {
                $var(flag)=$ci;
		 xlog("L_INFO", "Your FU is $fU \n");
		 exec_avp("/etc/kamailio/select_usr.sh $fU rtp_id", "$avp(rtp_id)");
		exec_avp("/etc/kamailio/select_usr.sh $fU counter", "$avp(counter)");	
	//	xlog("L_INFO", "Your sender1 username is   $du and $avp(counter)\n");
	//	  xlog("L_INFO", "Your FU is $avp(rtp_id) \n");
		if($avp(rtp_id)!=$null && $avp(rtp_id)!="NULL")
			exec_avp("/etc/kamailio/true.sh  $avp(counter) $avp(rtp_id)", "$avp(six)");
		if($avp(counter)== $null || $avp(counter)== "NULL"){
			$avp(setid)=0;
			$sht(rtpnode=>$ci)=0;
			 exec_avp("echo msg=0> /etc/kamailio/counter.sh", "$avp(counter)");
	//		xlog("L_INFO", "Your set_id is   $avp(setid)\n");
          //      	xlog("L_INFO", "Your sender0000000 username is   $ru and $avp(counter)\n");
		}
		else if($avp(counter) < 3){
			$avp(setid)=$(avp(counter){s.int});
			$sht(rtpnode=>$ci)=$avp(setid);
			exec_avp("echo msg=$avp(setid)> /etc/kamailio/counter.sh", "$avp(counter)");
	//		xlog("L_INFO", "Your set_id is   $avp(setid)\n");
          //              xlog("L_INFO", "Your sender11111111 username is   $fU and $avp(counter)\n");
		}else if($avp(six)!="false"){
			    $avp(setid)=$(avp(six){s.int});
			     $sht(rtpnode=>$ci)=$(avp(setid){s.int});
			    exec_avp("echo msg=$avp(setid)> /etc/kamailio/counter.sh", "$avp(counter)");
            //            xlog("L_INFO", "Your set_id is   $avp(setid)\n");
          //              xlog("L_INFO", "Your sender666666 username is   $fU and $avp(counter)\n");
			}
		else{
			exec_avp("/etc/kamailio/select_usr.sh $fU rtp_id", "$avp(rtp_id)");
			$avp(setid)=$(avp(rtp_id){s.int});
			   $sht(rtpnode=>$ci)=$(avp(setid){s.int}); 
			exec_avp("echo msg=$avp(setid)> /etc/kamailio/counter.sh", "$avp(counter)");
		//	xlog("L_INFO", "Your set_id is   $avp(setid)\n");
              //          xlog("L_INFO", "Your sender22222222 username is   $fU and $avp(counter)\n");
		}
//                exec_avp("/etc/kamailio/test.sh ", "$avp(data)");
          //      xlog("L_INFO", "Your return is $var(flag) and  $var(counter)\n");
		  xlog("L_INFO", "Your RTPengine_id is   $sht(rtpnode=>$ci)\n");
                //$avp(setid)=$(avp(data){s.int});
	//	$var(id)=$(avp(data){s.int});
         //       xlog("L_INFO", "Your set_id is   $avp(setid)\n");
       // 	 xlog("L_INFO", "Your sender username is   $fU and $avp(counter)\n");
	 }
	# NAT detection
	route(NATDETECT);

	# CANCEL processing
	if (is_method("CANCEL")) {
		if (t_check_trans()) {
			route(RELAY);
		}
		exit;
	}

	# handle retransmissions
	if (!is_method("ACK")) {
		if(t_precheck_trans()) {
			t_check_trans();
			exit;
		}
		t_check_trans();
	}

	# handle requests within SIP dialogs
	route(WITHINDLG);
	
	### only initial requests (no To tag)

	# authentication
	route(AUTH);

	# record routing for dialog forming requests (in case they are routed)
	# - remove preloaded route headers
	remove_hf("Route");
	if (is_method("INVITE|SUBSCRIBE")) {
		record_route();
	}

	# account only INVITEs
	if (is_method("INVITE")) {
		 $avp(mos_A_label)="Aleg_label";
                 $avp(mos_B_label)="Bleg_label";
		setflag(FLT_ACC); # do accounting
		dlg_manage();
		xlog("L_INFO"," INVITE processing \n");
		if (has_body("application/sdp")) {
        		rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
        	}	
	//$dlg_var(via)=$hdr(Via);
		//xlog("L_INFO","$hdr(Via)\n");
	}
	# dispatch requests to foreign domains
	route(SIPOUT);

	### requests for my local domains

	# handle presence related requests
	route(PRESENCE);

	# handle registrations
	route(REGISTRAR);

	if ($rU==$null) {
		# request with no Username in RURI
		sl_send_reply("484","Address Incomplete");
		exit;
	}

	# dispatch destinations to PSTN
	route(PSTN);

	# user location service
	route(LOCATION);
}
event_route[dialog:end]{
/*			   exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                        xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                        $avp(setid)=$(avp(data2){s.int});
		  $avp(mos_A_label)="Aleg_label";
                        $avp(mos_B_label)="Bleg_label";
                        rtpengine_query();
	//		rtpengine_delete();
			  xlog("L_INFO", " mos avg $avp(mos_average) \n ");
                        xlog("L_INFO", " mos max $avp(mos_max) \n ");
                        xlog("L_INFO", " mos min $avp(mos_min)  \n ");

                        xlog("L_INFO", "mos_average_packetloss_pv $avp(mos_average_packetloss)  \n");
                        xlog("L_INFO", "mos_average_jitter_pv $avp(mos_average_jitter)  \n ");
                        xlog("L_INFO", "mos_average_roundtrip_pv $avp(mos_average_roundtrip) \n ");
                        xlog("L_INFO", "mos_average_samples_pv $avp(mos_average_samples) \n ");
	  xlog( "mos_A_label_pv $avp(mos_A_label) \n ");
                        xlog("L_INFO", "mos_average_packetloss_A_pv $avp(mos_average_packetloss_A) \n ");
                        xlog("L_INFO", "mos_average_jitter_A_pv $avp(mos_average_jitter_A) \n ");
                        xlog("L_INFO", "mos_average_roundtrip_A_pv $avp(mos_average_roundtrip_A) \n ");
                        xlog("L_INFO", "mos_average_A_pv $avp(mos_average_A) \n ");


                 xlog( "mos_B_label_pv $avp(mos_B_label) \n ");
                        xlog("L_INFO", "mos_average_packetloss_B_pv $avp(mos_average_packetloss_B) \n ");
                        xlog("L_INFO", "mos_average_jitter_B_pv $avp(mos_average_jitter_B) \n ");
                        xlog("L_INFO", "mos_average_roundtrip_B_pv $avp(mos_average_roundtrip_B) \n ");
                        xlog("L_INFO", "mos_average_B_pv $avp(mos_average_B) \n ");
*/	$sht(dialog_track=>$ci)=$null;
	
}
route[3725]{
	 sql_query("cb", "SELECT username,contact,expires FROM
				 location WHERE
				 username='john' ORDER BY expires DESC LIMIT 1
				", "ra");
 if ($dbr(ra=>rows) > 0) {
            # 將第一列第一欄 contact 放入 $var(ct)
            $var(ct) = $(dbr(ra=>[0,1]));
            xlog("L_INFO", "Found contact for 1001: $var(ct)\n");
        }else {
            xlog("L_INFO", "No contact found for 1001\n");
        }
        sql_result_free("ra");
 $uac_req(method)="INVITE";
    $uac_req(callid)=$(mb{s.md5}); 
    $uac_req(ruri)="sip:john@@163.22.22.61";  
    $uac_req(turi)="sip:john@@163.22.22.61";
    $uac_req(furi)="sip:ken@@163.22.22.61" ;  
      $uac_req(hdrs)="Contact: <"+$var(ct) +">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
   // $uac_req(body)=$var(body2);
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 INVITE\r\n$uac_req(hdrs)", "");  
}
route[SendINVITE]{
//sht_print();
	 sql_query("cb", "SELECT  url  FROM
                                  rtpengine  
                                ", "rb");
     //   xlog("rtp url  = $(dbr(rb=>[0,0]))\n");
//	 xlog("rtp url1  = $(dbr(rb=>[1,0]))\n");
//	 xlog("rtp url2  = $(dbr(rb=>[2,0]))\n");
 /*       $avp(rtpurl)= $(dbr(rb=>[0,0]));
	 $avp(rtpurl1)= $(dbr(rb=>[1,0]));
	 $avp(rtpurl2)= $(dbr(rb=>[2,0]));
         exec_avp("python3 rtpcmd.py $avp(rtpurl)","$avp(health)");
          exec_avp("python3 rtpcmd.py $avp(rtpurl1)","$avp(health1)");
	 exec_avp("python3 rtpcmd.py $avp(rtpurl2)","$avp(health2)");
	 xlog("$avp(health)\n");  
           xlog("$avp(health1)\n");  
	   xlog("$avp(health2)\n");  
	$sht(health=>0)=$avp(health);
	$sht(health=>1)=$avp(health1);
 	$sht(health=>2)=$avp(health2);	*/
	sht_iterator_start("i1", "dialog_track"); 
	 while(sht_iterator_next("i1")) {
	  //      xlog("h1[$shtitkey(i1)] is: $shtitval(i1)\n");
if( $shtitval(i1) == 1 || $shtitval(i1) == 2){
		 xlog("L_INFO","Timer time out ~~~~~~~~~~~~\n");
		    //  exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                     //   xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                     //   $avp(setid)=$(avp(data2){s.int});
                //  $avp(mos_A_label)="Aleg_label";
                  //      $avp(mos_B_label)="Bleg_label";
//	                  xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
		//	rtpengine_query();
        //              rtpengine_delete();
                  //        xlog("L_INFO", " mos avg $avp(mos_average) \n ");
                   //     xlog("L_INFO", " mos max $avp(mos_max) \n ");
                    //    xlog("L_INFO", " mos min $avp(mos_min)  \n ");
        sql_query("cb", "SELECT 
				d.callid,d.from_uri, 
				d.from_tag,d.to_tag,
				d.to_uri,d.caller_contact, 
				d.callee_contact,
				d.caller_cseq,
				MAX(CASE WHEN v.dialog_key = 'sdp' THEN v.dialog_value END) AS sdp,
				MAX(CASE WHEN v.dialog_key = 'via' THEN v.dialog_value END) AS via
			FROM dialog d 
			LEFT JOIN dialog_vars v 
			ON d.hash_id = v.hash_id 
			 WHERE callid='$shtitkey(i1)'
			GROUP BY
				d.callid,d.from_uri, 
        	                d.from_tag,d.to_tag,
                	        d.to_uri,d.caller_contact,
                        	d.callee_contact,d.caller_cseq
			", "ra");
//	xlog("number of rows in table domain: $dbr(ra=>rows)\n");
if($dbr(ra=>rows)>0)
{
    $var(i) = 0;
    while($var(i)<$dbr(ra=>cols))
    {
  //      xlog("--- SCRIPT: column[$var(i)] = $dbr(ra=>colname[$var(i)])\n");
        $var(i) = $var(i) + 1;
    }
    $var(i) = 0;
    while($var(i)<$dbr(ra=>rows))
    {
        $var(j) = 0;
        while($var(j)<$dbr(ra=>cols))
        {
          //  xlog("[$var(i),$var(j)] = $(dbr(ra=>[$var(i),$var(j)]))\n");
            $var(j) = $var(j) + 1;
        }
        $var(i) = $var(i) + 1;
    }
       	  // xlog("dlg(callid) = $(dbr(ra=>[0,0]))\n");
	$avp(callid) = $(dbr(ra=>[0,0]));
	  // xlog("dlg(from_uri) = $(dbr(ra=>[0,1]))\n");
	$avp(from_uri) = $(dbr(ra=>[0,1]));
	// xlog("dlg(from_contact) =$(dbr(ra=>[0,5]))\n");
	$avp(from_contact) =$(dbr(ra=>[0,5])); 
	 // xlog("dlg(from_tag) = $(dbr(ra=>[0,2]))\n");
	$avp(from_tag) = $(dbr(ra=>[0,2]));
	  // xlog("dlg(to_uri) = $(dbr(ra=>[0,4]))\n");
	$avp(to_uri) = $(dbr(ra=>[0,4]));
	  // xlog("dlg(to_contact) =$(dbr(ra=>[0,6]))\n");
	$avp(to_contact) =$(dbr(ra=>[0,6]));
	  // xlog("dlg(to_tag) = $(dbr(ra=>[0,3]))\n");
	$avp(to_tag) = $(dbr(ra=>[0,3]));
	$avp(cseq)= $(dbr(ra=>[0,7]));
	 $avp(via)= $(dbr(ra=>[0,8]));
   	 sql_result_free("rb");
}	
	sql_result_free("ra");
//	 xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
	// xlog("L_ERR","$dlg_var(sdp)\n");
	// xlog("L_ERR","$dlg_var(via)\n");
//	dlg_bye("all");
    $uac_req(method)="INVITE";
    $uac_req(ruri)=$avp(to_contact);
    $uac_req(furi)="<"+$avp(from_uri)+">;tag="+$avp(from_tag);
    $uac_req(turi)="<"+$avp(to_uri)+">;tag="+$avp(to_tag);
    //$uac_req(hdrs)="Via: "+$dlg_var(via);
   $uac_req(hdrs)="Contact: <"+$avp(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
    $uac_req(callid)=$avp(callid);
 $avp(cseq)= $(avp(cseq){s.int})+1;
    //append_hf("CSeq: 2 INVITE\r\n");
   // $uac_req(body)=$avp(sdp);
   // t_relay();
       $uac_req(evroute)=1;
	setsflag(2); 	
   // uac_req_send(); //To: $uac_req(turi)\r\n Via: $dlg_var(via)\r\n
  // 	xlog("L_ERR"," $uac_req(furi)\n");
//	xlog("L_ERR"," $uac_req(turi)\n");
//	xlog("Request Method: $rm\n");
	t_use_uac_headers();
  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $avp(cseq) INVITE\r\n$uac_req(hdrs)", "");

//   $uac_req(ruri)=$avp(from_contact);
  //  $uac_req(turi)="<"+$avp(from_uri)+">;tag="+$avp(from_tag);
   // $uac_req(furi)="<"+$avp(to_uri)+">;tag="+$avp(to_tag);
//        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","UAC: 1\r\nVia: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
	    //    xlog("L_ERR"," $uac_req(furi)\n");
//	 uac_req_send();
	    $sht(dialog_track=>$avp(callid)) = 2;
	}
}
sht_iterator_end("i1"); 
	exit;
}
event_route[uac:reply] {
    xlog("L_ERR","received reply code is: $uac_req(evcode)\n");
}
route[TEST] {
    //timer_enable("tmr1", "0");
    $uac_req(method)="INVITE";
    $uac_req(callid)=$dlg(callid); 
if($sht(dialog_track=>$dlg(callid))==3){
    $uac_req(method)="INVITE";
    $uac_req(ruri)=$dlg(to_contact);  
    $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
    $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);   
     //  $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nContent-Type: application/sdp\r\n";
      $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
    $uac_req(body)=$var(body2);
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq1) INVITE\r\n$uac_req(hdrs)", "$var(body2)");    
 $sht(dialog_track=>$dlg(callid)) = 4;
  		//	 $avp(setid)= $sht(rtpnode=>$ci);
                      //  xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
	       // rtpengine_delete();
}else{
    $uac_req(ruri)=$dlg(from_contact);	
    $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
    $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
    $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
 	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) INVITE\r\n$uac_req(hdrs)", "");
	 $sht(dialog_track=>$dlg(callid)) = 3;
	}    

   // $uac_req(body)=$dlg_var(sdp);
//	 xlog("L_INFO","SEND REINVITE \n");
 return;
}
event_route [tm:local-request] {
//	$avp(setid)=2;
//	t_use_uac_headers();
             setbflag(2); 
//	remove_hf_value2("From.tag");
//	remove_hf("From");
//  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
  //  xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
}
/*event_route[tm:local-response] {
    xlog("tm:local-response replied locally\n");
}*/
# Wrapper for relaying requests
route[RELAY] {

	# enable additional event routes for forwarded requests
	# - serial forking, RTP relaying handling, a.s.o.
	if (is_method("INVITE|BYE|SUBSCRIBE|UPDATE")) {
		if(!t_is_set("branch_route")) { 	t_on_branch("MANAGE_BRANCH"); }
		$var(ct)=$dlg(from_contact);
		$var(rport)=$(var(ct){uri.port});
		$dlg_var(via)=$hdr(Via) +"="+$var(rport);
	//	xlog("L_ERR","$dlg(from_contact)------$var(rport)\n");
	}
	if (is_method("INVITE|SUBSCRIBE|UPDATE")) {
		if(!t_is_set("onreply_route")) t_on_reply("MANAGE_REPLY");
	}
	if (is_method("INVITE")) {
		if(!t_is_set("failure_route")) t_on_failure("MANAGE_FAILURE");
		
	}
// 			 exec_msg("echo -e '$var(mbu)' > /etc/kamailio/sip_message.txt");
		 // xlog("L_ERR","------------MBU: $shv(test)\n");
    /*		if($shv(test) != 0){
    	  		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
			// xlog("L_ERR","This is SDP Body: $avp(body)\n");
				$avp(body)=$avp(body)+"|";
				$avp(body)=$(avp(body){re.subst,/\|/\r\n/g});
			  xlog("L_ERR","------------BODY: $avp(body)\n");
				$dlg_var(sdp)=$avp(body);
		 }*/
		   //xlog("L_ERR","------------MBU:\n");	
	if (!t_relay()) {
		sl_reply_error();
	}
	exit;
}

# Per SIP request initial checks
route[REQINIT] {
	# no connect for sending replies
	set_reply_no_connect();
	# enforce symmetric signaling
	# - send back replies to the source address of request
	force_rport();

#!ifdef WITH_ANTIFLOOD
	# flood detection from same IP and traffic ban for a while
	# be sure you exclude checking trusted peers, such as pstn gateways
	# - local host excluded (e.g., loop to self)
	if(src_ip!=myself) {
		if($sht(ipban=>$si)!=$null) {
			# ip is already blocked
			xdbg("request from blocked IP - $rm from $fu (IP:$si:$sp)\n");
			exit;
		}
		if (!pike_check_req()) {
			xlog("L_ALERT","ALERT: pike blocking $rm from $fu (IP:$si:$sp)\n");
			$sht(ipban=>$si) = 1;
			exit;
		}
	}
#!endif
	if($ua =~ "friendly|scanner|sipcli|sipvicious|VaxSIPUserAgent") {
		# silent drop for scanners - uncomment next line if want to reply
		# sl_send_reply("200", "OK");
		exit;
	}

	if (!mf_process_maxfwd_header("10")) {
		sl_send_reply("483","Too Many Hops");
		exit;
	}

	if(is_method("OPTIONS") && uri==myself && $rU==$null) {
		sl_send_reply("200","Keepalive");
		exit;
	}

	if(!sanity_check("17895", "7")) {
		xlog("Malformed SIP request from $si:$sp\n");
		exit;
	}
}

# Handle requests within SIP dialogs
route[WITHINDLG] {
	if (has_body("application/sdp")) {
	  xlog("L_INFO", ">>> Final outgoing SDP (in branch):\n");
	}
	if (!has_totag()) return;
/*	 if(dlg_set_timeout("180"))
	{ 
		 xlog("L_INFO", "TIME_OUT \n");
	}*/
	# sequential request withing a dialog should
	# take the path determined by record-routing
	if (loose_route()) {
		route(DLGURI);
		if (is_method("BYE")) {
	//		exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
		//	xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
		//	$avp(setid)=$(avp(data2){s.int});
		 $avp(setid)= $sht(rtpnode=>$ci);
	          xlog("L_INFO", "$ci --------------- $sht(rtpnode=>$ci)\r\n ");
	  xlog("L_INFO", "ID --------------- $avp(setid)\r\n ");
			setflag(FLT_ACC); # do accounting ...
			setflag(FLT_ACCFAILED); # ... even if the transaction fails
			$avp(mos_A_label)="Aleg_label";
			$avp(mos_B_label)="Bleg_label";
			rtpengine_query();
		//	rtpengine_delete();
//			if(rtpengine_query_v("jp", "$var(rdata)")) {
 //				   xinfo("rtpengine query response: $var(rdata)\n");
//			}	###5.6.x
			xlog("L_INFO", " rtpstats - $rtpstat\r\n ");
			append_hf("X-RTP-Statistics: $rtpstat\r\n");
			

			 if($avp(mos_average_A)>$avp(mos_average_B)){
				 $avp(mos_average_now)=$avp(mos_average_A);
				$avp(mos_average_roundtrip_now)=$avp(mos_average_roundtrip_A);
			}else if($avp(mos_average_A)>$avp(mos_average_B)){
				 $avp(mos_average_now)=$avp(mos_average_B);
				  $avp(mos_average_roundtrip_now)=$avp(mos_average_roundtrip_B);
			}else{
				   $avp(mos_average_now)=$avp(mos_average_A);
				 $avp(mos_average_roundtrip_now)=$avp(mos_average_roundtrip_A);
			}
			xlog("L_INFO", " ====================  delete RTPengine \n");
			rtpengine_delete();
			 $avp(username)=$(dlg(from_uri){uri.user});
			  xlog("L_INFO", " ==================== $avp(username)\n");
			#### 判斷rtpengine 是否為目前最佳
			exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  rtp_id","$avp(rtp_id)" );
			exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  rtp_id2","$avp(rtp_id2)" );
		if($avp(mos_average)!=$null){
			 xlog("L_INFO", " MOS no NULL\n");
			if($avp(rtp_id)=="NULL"){
				 xlog("L_INFO", " CASE 1\n");
				exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $avp(username) ");
                	        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $avp(username) ");
            	             	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $avp(username) ");
			} if($avp(rtp_id)!="NULL" && $avp(rtp_id2)=="NULL"){
				 xlog("L_INFO", " CASE 2\n");
				 exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  mos_avg_pv","$avp(mos_avg)" );
				 exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  mos_average_roundtrip_pv","$avp(mos_rtt)" );	
				  xlog("L_INFO", " $avp(mos_avg) and $avp(mos_rtt)\n");
				if($avp(rtp_id)!=$avp(setid)){
				     if($avp(mos_average_now) >= $avp(mos_avg)){
					  exec_avp("/etc/kamailio/switch.sh  $avp(username) 2");
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $avp(username) ");
                                	exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $avp(username) ");
                                	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $avp(username) ");	
				     }else{
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(setid) $avp(username) ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $avp(username) ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $avp(username) ");
					}
					
				}else{
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $avp(username) ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $avp(username) ");
				}
			}
			 if($avp(rtp_id)!="NULL" && $avp(rtp_id2)!="NULL"){
				 xlog("L_INFO", " CASE 3\n");
				 exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  mos_avg_pv","$avp(mos_avg)" );
				exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  mos_avg_pv2","$avp(mos_avg2)" );
				   xlog("L_INFO", " $avp(mos_avg) and $avp(mos_avg2) and $avp(mos_average_now) \n");
				 	if($avp(rtp_id)==$avp(setid)){
						  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $avp(username) ");
                                                  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $avp(username) ");
						if($avp(mos_average_now) < $avp(mos_avg2)){
							##互換
							  xlog("L_INFO","change\n");
							 exec_avp("/etc/kamailio/switch.sh  $avp(username) 1 ");
                                                }
					}else if($avp(rtp_id2)==$avp(setid)){
						  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $avp(username) ");
                                                  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $avp(username) ");
						if($avp(mos_average_now) > $avp(mos_avg)){
							##互換
							   xlog("L_INFO","change\n");
							  exec_avp("/etc/kamailio/switch.sh  $avp(username) 1 ");
						}
					}else{
						if($avp(mos_average_now) >= $avp(mos_avg)){
							     exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $avp(username) ");
							     exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $avp(username) ");
                                                  	     exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $avp(username) ");
						}else if($avp(mos_average_now) >= $avp(mos_avg2)){
							exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(setid) $avp(username) "); 
							exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $avp(username) ");
                                                  	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $avp(username) ");
						}else{
							  xlog("L_INFO","no change\n");
						}
					}
					
				}		
			### counter 增加  
			xlog("L_INFO","FROM URI .... $dlg(from_uri)\n");
			exec_avp("/etc/kamailio/select_usr.sh $avp(username) counter", "$avp(counter2)");
                	if($avp(counter2)=="NULL"){ 
				exec_avp("/etc/kamailio/update_usr.sh  counter 1 $avp(username) ");
			}else{
			 	 $avp(counter2)=$(avp(counter2){s.int})+1;
				 exec_avp("/etc/kamailio/update_usr.sh  counter $avp(counter2) $avp(username) ");	
			}
		}
		//exec_avp("/etc/kamailio/update_usr.sh  counter $avp(setid)+1 $fU ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_avg_pv $avp(mos_average) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_jitter_pv $avp(mos_average_jitter) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_packetloss_pv $avp(mos_average_packetloss) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_roundtrip_pv $avp(mos_average_roundtrip) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_samples_pv $avp(mos_average_samples) ");

		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_pv $avp(mos_min) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_packetloss_pv $avp(mos_min_packetloss) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_roundtrip_pv $avp(mos_min_roundtrip) ");
		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_jitter_pv $avp(mos_min_jitter) ");

		//	exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_pv $avp(mos_max) ");
                 //       exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_packetloss_pv $avp(mos_max_packetloss) ");
                  //      exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_roundtrip_pv $avp(mos_max_roundtrip) ");
                    //    exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_jitter_pv $avp(mos_max_jitter) ");
			xlog("L_INFO", " mos avg $avp(mos_average) \n ");
			xlog("L_INFO", " mos max $avp(mos_max) \n ");
			xlog("L_INFO", " mos min $avp(mos_min)  \n ");

			xlog("L_INFO", "mos_average_packetloss_pv $avp(mos_average_packetloss)  \n");
			xlog("L_INFO", "mos_average_jitter_pv $avp(mos_average_jitter)  \n ");
			xlog("L_INFO", "mos_average_roundtrip_pv $avp(mos_average_roundtrip) \n ");
			xlog("L_INFO", "mos_average_samples_pv $avp(mos_average_samples) \n ");

			xlog("L_INFO", "mos_min_pv $avp(mos_min) \n ");
			xlog("L_INFO", "mos_min_at_pv $avp(mos_min_at) \n ");
			xlog("L_INFO", "mos_min_packetloss_pv $avp(mos_min_packetloss) \n ");
			xlog("L_INFO", "mos_min_jitter_pv $avp(mos_min_jitter) \n ");
			xlog("L_INFO", "mos_min_roundtrip_pv $avp(mos_min_roundtrip) \n ");

			xlog("L_INFO", "mos_max_pv $avp(mos_max) \n ");
			xlog("L_INFO", "mos_max_at_pv $avp(mos_max_at) \n ");
			xlog("L_INFO", "mos_max_packetloss_pv $avp(mos_max_packetloss) \n ");
			xlog("L_INFO", "mos_max_jitter_pv $avp(mos_max_jitter) \n ");
			xlog("L_INFO", "mos_max_roundtrip_pv $avp(mos_max_roundtrip) \n\n ");
	
		 xlog( "L_INFO", "mos_A_label_pv $avp(mos_A_label) \n ");
			xlog("L_INFO", "mos_average_packetloss_A_pv $avp(mos_average_packetloss_A) \n ");
			xlog("L_INFO", "mos_average_jitter_A_pv $avp(mos_average_jitter_A) \n ");
			xlog("L_INFO", "mos_average_roundtrip_A_pv $avp(mos_average_roundtrip_A) \n ");
			xlog("L_INFO", "mos_average_A_pv $avp(mos_average_A) \n ");
			 xlog("L_INFO", "mos_min_A_pv  $avp(mos_min_A) \n ");		
			xlog("L_INFO", "mos_max_A_pv  $avp(mos_max_A) \n "); 
			xlog("L_INFO", "mos_min_jitter_A_pv  $avp(mos_min_jitter_A) \n "); 
		 xlog( "L_INFO", "mos_B_label_pv $avp(mos_B_label) \n\n ");
			xlog("L_INFO", "mos_average_packetloss_B_pv $avp(mos_average_packetloss_B) \n ");
			xlog("L_INFO", "mos_average_jitter_B_pv $avp(mos_average_jitter_B) \n ");
			xlog("L_INFO", "mos_average_roundtrip_B_pv $avp(mos_average_roundtrip_B) \n ");
			xlog("L_INFO", "mos_average_B_pv $avp(mos_average_B) \n ");
			xlog("L_INFO", "mos_min_B_pv  $avp(mos_min_B) \n "); 
			  xlog("L_INFO", "mos_max_B_pv  $avp(mos_max_B) \n "); 
                        xlog("L_INFO", "mos_min_jitter_B_pv  $avp(mos_min_jitter_B) \n "); 
		      $sht(rtpnode=>$ci)=$null;
		} else if ( is_method("ACK") ) {
			# ACK is forwarded statelessly
			 $sht(dialog_track=>$dlg(callid)) = 1;
			route(NATMANAGE);
		} else if ( is_method("NOTIFY") ) {
			# Add Record-Route for in-dialog NOTIFY as per RFC 6665.
			record_route();
		}
		xlog("L_INFO","stage --------- $sht(dialog_track=>$dlg(callid))");
//		if( $sht(dialog_track=>$dlg(callid))== 5){
		//	xlog("L_INFO","Send BYE");
	//		dlg_bye("all");
 //		}else{
			route(RELAY);
//		}
//		  $sht(dialog_track=>$ci)=$null;
		exit;
	}

	if (is_method("SUBSCRIBE") && uri == myself) {
		# in-dialog subscribe requests
		route(PRESENCE);
		exit;
	}
	if ( is_method("ACK") ) {
		if ( t_check_trans() ) {
			# no loose-route, but stateful ACK;
			# must be an ACK after a 487
			# or e.g. 404 from upstream server
			route(RELAY);
			exit;
		} else {
			# ACK without matching transaction ... ignore and discard
			exit;
		}
	}
	sl_send_reply("404","Not here");
	exit;
}

# Handle SIP registrations
route[REGISTRAR] {
	xlog("L_INFO", "Register  $fu \n ");
	if (!is_method("REGISTER")) return;

	if(isflagset(FLT_NATS)) {
		setbflag(FLB_NATB);
#!ifdef WITH_NATSIPPING
		# do SIP NAT pinging
		setbflag(FLB_NATSIPPING);
#!endif
	}
	if (!save("location")) {
		sl_reply_error();
	}
	exit;
}

# User location service
route[LOCATION] {

#!ifdef WITH_SPEEDDIAL
	# search for short dialing - 2-digit extension
	if($rU=~"^[0-9][0-9]$") {
		if(sd_lookup("speed_dial")) {
			route(SIPOUT);
		}
	}
#!endif

#!ifdef WITH_ALIASDB
	# search in DB-based aliases
	if(alias_db_lookup("dbaliases")) {
		route(SIPOUT);
	}
#!endif

	$avp(oexten) = $rU;
	if (!lookup("location")) {
		$var(rc) = $rc;
		route(TOVOICEMAIL);
		t_newtran();
		switch ($var(rc)) {
			case -1:
			case -3:
				send_reply("404", "Not Found");
				exit;
			case -2:
				send_reply("405", "Method Not Allowed");
				exit;
		}
	}

	# when routing via usrloc, log the missed calls also
	if (is_method("INVITE")) {
		setflag(FLT_ACCMISSED);
	}

	route(RELAY);
	exit;
}

# Presence server processing
route[PRESENCE] {
	if(!is_method("PUBLISH|SUBSCRIBE")) return;

	if(is_method("SUBSCRIBE") && $hdr(Event)=="message-summary") {
		route(TOVOICEMAIL);
		# returns here if no voicemail server is configured
		sl_send_reply("404", "No voicemail service");
		exit;
	}

#!ifdef WITH_PRESENCE
#!ifdef WITH_MSGREBUILD
	# apply changes in case the request headers or body were modified
	msg_apply_changes();
#!endif
	if (!t_newtran()) {
		sl_reply_error();
		exit;
	}

	if(is_method("PUBLISH")) {
		handle_publish();
		t_release();
	} else if(is_method("SUBSCRIBE")) {
		handle_subscribe();
		t_release();
	}
	exit;
#!endif

	# if presence enabled, this part will not be executed
	if (is_method("PUBLISH") || $rU==$null) {
		sl_send_reply("404", "Not here");
		exit;
	}
	return;
}

# IP authorization and user authentication
route[AUTH] {
#!ifdef WITH_AUTH

#!ifdef WITH_IPAUTH
	if((!is_method("REGISTER")) && allow_source_address()) {
		# source IP allowed
		return;
	}
#!endif

	if (is_method("REGISTER") || from_uri==myself) {
		# authenticate requests
		if (!auth_check("$fd", "subscriber", "1")) {
			auth_challenge("$fd", "0");
			exit;
		}
		# user authenticated - remove auth header
		if(!is_method("REGISTER|PUBLISH"))
			consume_credentials();
	}
	# if caller is not local subscriber, then check if it calls
	# a local destination, otherwise deny, not an open relay here
	if (from_uri!=myself && uri!=myself) {
		sl_send_reply("403","Not relaying");
		exit;
	}

#!else

	# authentication not enabled - do not relay at all to foreign networks
	if(uri!=myself) {
		sl_send_reply("403","Not relaying");
		exit;
	}

#!endif
	return;
}

# Caller NAT detection
route[NATDETECT] {
#!ifdef WITH_NAT
	if (nat_uac_test("55")) {
		xlog("L_INFO","NAT___\n");
		if (is_method("REGISTER")) {
			fix_nated_register();
		} else {
			if(is_first_hop()) {
				set_contact_alias();
			}
		}
		setflag(FLT_NATS);
	}
#!endif
	return;
}

# RTPProxy control and signaling updates for NAT traversal
route[NATMANAGE] {
#!ifdef WITH_NAT
	if (is_request()) {
		if(has_totag()) {
			if(check_route_param("nat=yes")) {
				setbflag(FLB_NATB);
			}
		}
	}
	if (!(isflagset(FLT_NATS) || isbflagset(FLB_NATB))) return;

#!ifdef WITH_RTPENGINE
		 xlog("L_INFO","RTPENGINE IN \n");
	if(nat_uac_test("8")) {
		//set_rtpengine_set("2");
		rtpengine_manage("generate-RTCP=on  SIP-source-address replace-origin replace-session-connection label=Aleg_label");	
	//sdp_get("$avp(sdp)");
		xlog("L_INFO","SDP2-1: $rb \n");
	//if( $avp(sdp) != $null){
	//	$dlg_var(sdp)=$avp(sdp);
	//	xlog("L_INFO","SDP: $dlg_var(sdp) \n");
	//		}
	} else {
	//	 sdp_get("$avp(sdp)");
          //      xlog("L_INFO","SDP2-1: $avp(sdp) \n");
		rtpengine_manage("generate-RTCP=on replace-origin replace-session-connection  label=Bleg_label");
	//	sdp_get("$avp(sdp)");
        	xlog("L_INFO","SDP2-2: $rb \n");
	//	if( $avp(sdp) != $null){
          //      	$dlg_var(sdp)=$avp(sdp);
        //        	xlog("L_INFO","SDP2-1: $dlg_var(sdp) \n");
          //              }
		//set_rtpengine_set("2");
	//	rtpengine_manage("generate-RTCP=on replace-origin replace-session-connection  label=Aleg_label label=Bleg_label");
	}
#!else
	if(nat_uac_test("8")) {
		rtpproxy_manage("co");
	} else {
		rtpproxy_manage("cor");
	}
#!endif

	if (is_request()) {
		if (!has_totag()) {
		//	xlog("L_ERR","NAT YES________\n");
			if(t_is_branch_route()) {
				add_rr_param(";nat=yes");
			}
		}
	}
	if (is_reply()) {
		if(isbflagset(FLB_NATB)) {
			if(is_first_hop())
				set_contact_alias();
		}
	}
	if(isbflagset(FLB_NATB)) {
		# no connect message in a dialog involving NAT traversal
		if (is_request()) {
			if(has_totag()) {
		//		xlog("L_ERR","RE_INVITE________\n");
				set_forward_no_connect();
			}
		}
	}
#!endif
//xlog("L_WARN","NAT MANAGE_____________________________\n");	
	return;
}

# URI update for dialog requests
route[DLGURI] {
#!ifdef WITH_NAT
	if(!isdsturiset()) {
		handle_ruri_alias();
	}
#!endif
	return;
}

# Routing to foreign domains
route[SIPOUT] {
	if (uri==myself) return;

	append_hf("P-Hint: outbound\r\n");
	route(RELAY);
	exit;
}

# PSTN GW routing
route[PSTN] {
#!ifdef WITH_PSTN
	# check if PSTN GW IP is defined
	if (strempty($sel(cfg_get.pstn.gw_ip))) {
		xlog("SCRIPT: PSTN routing enabled but pstn.gw_ip not defined\n");
		return;
	}

	# route to PSTN dialed numbers starting with '+' or '00'
	#     (international format)
	# - update the condition to match your dialing rules for PSTN routing
	if(!($rU=~"^(\+|00)[1-9][0-9]{3,20}$")) return;

	# only local users allowed to call
	if(from_uri!=myself) {
		sl_send_reply("403", "Not Allowed");
		exit;
	}

	# normalize target number for pstn gateway
	# - convert leading 00 to +
	if (starts_with("$rU", "00")) {
		strip(2);
		prefix("+");
	}

	if (strempty($sel(cfg_get.pstn.gw_port))) {
		$ru = "sip:" + $rU + "@@" + $sel(cfg_get.pstn.gw_ip);
	} else {
		$ru = "sip:" + $rU + "@@" + $sel(cfg_get.pstn.gw_ip) + ":"
					+ $sel(cfg_get.pstn.gw_port);
	}

	route(RELAY);
	exit;
#!endif

	return;
}

# JSONRPC over HTTP(S) routing
#!ifdef WITH_JSONRPC
event_route[xhttp:request] {
	set_reply_close();
	set_reply_no_connect();
	if(src_ip!=127.0.0.1) {
		xhttp_reply("403", "Forbidden", "text/html",
				"<html><body>Not allowed from $si</body></html>");
		exit;
	}
	if ($hu =~ "^/RPC") {
		jsonrpc_dispatch();
		exit;
	}

	xhttp_reply("200", "OK", "text/html",
				"<html><body>Wrong URL $hu</body></html>");
    exit;
}
#!endif

# Routing to voicemail server
route[TOVOICEMAIL] {
#!ifdef WITH_VOICEMAIL
	if(!is_method("INVITE|SUBSCRIBE")) return;

	# check if VoiceMail server IP is defined
	if (strempty($sel(cfg_get.voicemail.srv_ip))) {
		xlog("SCRIPT: VoiceMail routing enabled but IP not defined\n");
		return;
	}
	if(is_method("INVITE")) {
		if($avp(oexten)==$null) return;

		$ru = "sip:" + $avp(oexten) + "@@" + $sel(cfg_get.voicemail.srv_ip)
				+ ":" + $sel(cfg_get.voicemail.srv_port);
	} else {
		if($rU==$null) return;

		$ru = "sip:" + $rU + "@@" + $sel(cfg_get.voicemail.srv_ip)
				+ ":" + $sel(cfg_get.voicemail.srv_port);
	}
	route(RELAY);
	exit;
#!endif

	return;
}

# Manage outgoing branches
branch_route[MANAGE_BRANCH] {
	xdbg("new branch [$T_branch_idx] to $ru\n");
//	$dlg_var(via)=$hdr(Via);
  //	  xlog("L_INFO","$hdr(Via)\n");
//	route(NATMANAGE);
//	xlog("L_ERR","$mbu\n");
	//$var(mbu)=$mbu;
//	xlog("L_ERR","$(var(mbu){s.len}) and $cl\n");
       // xlog("L_INFO","SIP Message Body: $var(mbu)\n");
/*	if(is_method("INVITE")&& $shv(test)!=1) {
		exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");	
		$shv(test)=1;
		xlog("L_ERR"," After  CMD  $var(mbu)\n");
	}*/
}
route[RTPnode2]{
		 $avp(username)=$(dlg(from_uri){uri.user});
		exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  rtp_id","$avp(rtp_id)" );
                 exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  rtp_id2","$avp(rtp_id2)" );
		if($avp(rtp_id2)=="NULL"){
		  exec_avp("/etc/kamailio/true.sh 6   $sht(rtpnode=>$ci)", "$avp(random)");
		 $avp(setid)=$(avp(random){s.int});
		}else if($avp(rtp_id2)==$sht(rtpnode=>$ci)){
			
			$avp(setid)=$(avp(rtp_id){s.int});
		}else{
			 $avp(setid)=$(avp(rtp_id2){s.int});
		}
}
# Manage incoming replies
reply_route { 		
	//	xlog("$var(health) \n");
		//   xlog("L_ERR","rtp_id2 is $avp(rtp_id2) and setid is $avp(setid)\n");
//		   xlog("L_INFO"," RTPengine ID_______ $sht(rtpnode=>$ci)\n");
	   /*     if( $sht(dialog_track=>$dlg(callid))== 5 && has_body("application/sdp")){
			  xlog("L_INFO"," $dlg(callid)_______ $sht(dialog_track=>$dlg(callid))\n");
	  $var(cseq2)=$(dlg(from_cseq){s.int})+2;		
	$uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(from_contact);
           $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);  
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");
//        xlog("L_INFO","ACK ANSWER 3 \n");
	$uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(to_contact);
           $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);  
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");      
		$sht(dialog_track=>$dlg(callid))=6;
		}*/
if( $sht(dialog_track=>$dlg(callid))== 4 && has_body("application/sdp")){
               // $sht(rtpnode=>ci)=$avp(setid);
			    $avp(setid)=$sht(rtpnode=>$ci);   
		rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
             //  xlog("L_INFO","階段四\n");
                exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");
            //      xlog("L_ERR"," After 4444  $mbu\n");        
                route(REP);
		$var(cseq)=$(dlg(from_cseq){s.int})+1;
	        $var(cseq2)=$(dlg(from_cseq){s.int})+2;
                 $uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(from_contact);
           $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
	       $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nContent-Type: application/sdp\r\n";
		   //   $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";        
 //  $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq) ACK\r\n$uac_req(hdrs)", "$var(body3)");
  //      xlog("L_INFO","ACK ANSWER 2 \n"); 
                 $uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(to_contact);
           $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");
        xlog("L_INFO","ACK ANSWER 3 \n");
	$sht(dialog_track=>$dlg(callid))= 5;
        }  

	if( $sht(dialog_track=>$dlg(callid))== 3 && has_body("application/sdp")){
                $avp(setid)=$sht(rtpnode=>$ci);   
		//  $avp(setid)=2;
		rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
              //    rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
              //  xlog("L_INFO","階段三\n");
                   exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");   
                //  xlog("L_ERR"," After  33333  $mbu\n");     
               // xlog("L_ERR"," After  CMD  $mbu\n");
                $var(cseq1)=$(dlg(from_cseq){s.int})+2;
                route(REP);
                route(TEST);            
        }

     if( $sht(dialog_track=>$dlg(callid))== 2){
	  // xlog("L_ERR"," IN ___________\n");
	 if(is_method("INVITE") &&  t_check_trans()   ){
	//	 xlog("L_ERR"," INVTTE REPLY _______\n");
	//	  xlog("L_ERR","send REINVITE $dlg(callid)~~~~~~~~~~~~\n");
	route(MOSQUERY);	
//	route(REP);
	}
	  if(status=~"[2][0-9][0-9]") {
  //               if (has_body("application/sdp")){
			route(RTPnode2);     
      //             xlog("L_ERR","rtp_id2 is $avp(rtp_id2) and setid is $avp(setid)\n");
			  $var(cseq0)=$(dlg(from_cseq){s.int})+1;
                 $uac_req(method)="ACK";
          	$uac_req(ruri)=$dlg(to_contact);
           	$uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            	$uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          	$uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         	$uac_req(callid)=$dlg(callid);
          	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "");
//        	xlog("L_INFO","ACK ANSWER 1 \n");
	
		if($var(mos)==1){
  //                 xlog("L_INFO", "ID --------------- $avp(setid)\r\n ");
        		rtpengine_delete();
		  $sht(rtpnode=>$ci)=$(avp(setid){s.int});
		xlog("L_INFO"," RTPengine ID_______switch to  $sht(rtpnode=>$ci)\n");
                      //  $sht(dialog_track=>$dlg(callid)) = 1;
	//	xlog("L_INFO","status 200 ok  \n");
                        $avp(mos_A_label)="Aleg_label";
                        $avp(mos_B_label)="Bleg_label";
		//	$avp(setid)=2;
              //  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
                exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");        
    //            xlog("L_ERR"," After  1111  $mbu\n");
		route(REP);
		
		 $var(cseq0)=$(dlg(from_cseq){s.int})+1;
	         $uac_req(method)="ACK";
  	  $uac_req(ruri)=$dlg(to_contact);
 	   $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
	    $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
  	  $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
   	 $uac_req(callid)=$dlg(callid);
		$var(blackhole)="v=0
o=- 0 0 IN IP4 0.0.0.0
s=-
c=IN IP4 0.0.0.0
t=0 0
m=audio 0 RTP/AVP 0
a=inactive";
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "$var(blackhole)");
//	xlog("L_INFO","ACK ANSWER 1 \n");
	route(TEST);  
		}
//	}
	}
	  	//invite
	  if(is_method("ACK")){
		 xlog("L_INFO","ACK------  \n");
//		remove_hf("CSeq");
//		append_hf("CSeq: 2\r\n");
		}
}
	
                //xlog("L_INFO","status <299 \n");
	if(!sanity_check("17604", "6")) {
		xlog("Malformed SIP response from $si:$sp\n");
		drop;
	}
}
route[REP]{
	   if($sht(dialog_track=>$dlg(callid))== 2){
	  exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
	         $avp(body)=$avp(body)+"|";
                  $avp(body)=$(avp(body){re.subst,/\|/\r\n/g});
  //               xlog("L_ERR","------------BODY2: $avp(body)\n");
		$var(body)=$avp(body);
	}
	else if($sht(dialog_track=>$dlg(callid))== 3){
	     exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body2)");
                 $avp(body2)=$avp(body2)+"|";
                  $avp(body2)=$(avp(body2){re.subst,/\|/\r\n/g});
		$var(body2)=$avp(body2);
//		 xlog("L_ERR","------------BODY3: $avp(body2)\n");
       }else{
               exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body3)");
                 $avp(body3)=$avp(body3)+"|";
                  $avp(body3)=$(avp(body3){re.subst,/\|/\r\n/g});
  //               xlog("L_ERR","------------BODY4: $avp(body3)\n");
                $var(body3)=$avp(body3);
        }      
return ;	
}
route[MOSQUERY]{
 // xlog("L_ERR","send REINVITE $dlg(callid)~~~~~~~~~~~~\n");
                        // exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
            //            if($sht(health=>$sht(rtpnode=>$ci))){
                           xlog("L_INFO", "ID ---------------  $sht(rtpnode=>$ci)\r\n ");
                        $avp(setid)= $sht(rtpnode=>$ci);  
			// $avp(setid)=$(avp(data2){s.int});
                     $avp(mos_A_label)="Aleg_label";
                           $avp(mos_B_label)="Bleg_label";
                           //  xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
                          if( rtpengine_query()){
                        	  xlog("L_INFO", " IS WORK\n");
		
			 xlog("L_INFO", " mos avg $avp(mos_average) mos max $avp(mos_max) mos min $avp(mos_min)  \n ");
                        //  xlog("L_INFO", " mos max $avp(mos_max) \n ");
                        //  xlog("L_INFO", " mos min $avp(mos_min)  \n ");
			  xlog("L_INFO", "mos_average_A_pv $avp(mos_average_A) \n ");
			  xlog("L_INFO", "mos_average_B_pv $avp(mos_average_B) \n "); 
			exec_avp(" awk -v x='4.4' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
		//	xlog("L_INFO"," switch ------ $avp(switch) \n");
			$var(mos)=$avp(switch);
			} 			
			else{
				  $var(mos)=1;
				     xlog("L_INFO", " IS NOT  WORK\n");
			}
			    xlog("L_INFO"," switch ------ $var(mos) \n");
}
# Manage incoming replies in transaction context
onreply_route[MANAGE_REPLY] {
	xdbg("incoming reply\n");
		 xlog("L_INFO","incoming reply \n");
	if(status=~"[12][0-9][0-9]") {
		  if (has_body("application/sdp")){
		//	$sht(dialog_track=>$dlg(callid)) = 1;
                        xlog("L_INFO", "儲存成功呼叫 $ci 到 hash 表\n");
			 $avp(mos_A_label)="Aleg_label";
                        $avp(mos_B_label)="Bleg_label";
        		rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
        	}
		xlog("L_INFO","status <299 \n");
	//	route(NATMANAGE);
	}
}

# Manage failure routing cases
failure_route[MANAGE_FAILURE] {
	route(NATMANAGE);

	if (t_is_canceled()) exit;

#!ifdef WITH_BLOCK3XX
	# block call redirect based on 3xx replies.
	if (t_check_status("3[0-9][0-9]")) {
		t_reply("404","Not found");
		exit;
	}
#!endif

#!ifdef WITH_BLOCK401407
	# block call redirect based on 401, 407 replies.
	if (t_check_status("401|407")) {
		t_reply("404","Not found");
		exit;
	}
#!endif

#!ifdef WITH_VOICEMAIL
	# serial forking
	# - route to voicemail on busy or no answer (timeout)
	if (t_check_status("486|408")) {
		$du = $null;
		route(TOVOICEMAIL);
		exit;
	}
#!endif
}
@


1.760
log
@*** empty log message ***
@
text
@d1698 1
a1698 1
                  if (has_body("application/sdp")){
d1744 1
a1744 1
	}
@


1.759
log
@*** empty log message ***
@
text
@d874 1
a874 1
   $uac_req(hdrs)="Contact: <"+$avp(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
d914 1
a914 1
      $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
d925 1
a925 1
    $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
d1639 1
a1639 1
          $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nContent-Type: application/sdp\r\n";
d1658 1
a1658 1
	       $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
d1668 1
a1668 1
          $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nContent-Type: application/sdp\r\n";
d1731 1
a1731 1
  	  $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nContent-Type: application/sdp\r\n";
@


1.758
log
@*** empty log message ***
@
text
@d1731 1
a1731 1
  	  $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
@


1.757
log
@*** empty log message ***
@
text
@d874 1
a874 1
   $uac_req(hdrs)="Contact: <"+$avp(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
d1668 1
a1668 1
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
@


1.756
log
@*** empty log message ***
@
text
@d1647 1
a1647 1
	//	rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1678 2
a1679 1
                  rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
d1721 1
a1721 1
                rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
@


1.755
log
@*** empty log message ***
@
text
@d1652 2
a1653 1
		$var(cseq)=$(dlg(from_cseq){s.int})+2;
d1670 1
a1670 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq) ACK\r\n$uac_req(hdrs)", "");
@


1.754
log
@*** empty log message ***
@
text
@d926 1
a926 1
 	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) INVITE\r\n$uac_req(hdrs)", "$var(body)");
@


1.753
log
@*** empty log message ***
@
text
@d909 1
a909 1
    $uac_req(method)="ACK";
d913 2
a914 2
       $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nContent-Type: application/sdp\r\n";
   //   $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
d916 1
a916 9
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq1) ACK\r\n$uac_req(hdrs)", "$var(body2)");    
   $var(cseq2)=$(dlg(from_cseq){s.int})+1;               
        $uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(from_contact);
           $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);  
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");
d1644 1
a1644 1
/*if( $sht(dialog_track=>$dlg(callid))== 4 && has_body("application/sdp")){
d1653 1
a1653 1
                 $uac_req(method)="INVITE";
d1657 2
a1658 1
		      $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";        
d1661 1
a1661 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq) INVITE\r\n$uac_req(hdrs)", "$var(body3)");
d1663 1
a1663 1
             /*    $uac_req(method)="ACK";
d1670 1
a1670 1
        xlog("L_INFO","ACK ANSWER 3 \n");*/
d1672 1
a1672 1
        }   */
@


1.752
log
@*** empty log message ***
@
text
@d917 8
d1632 1
a1632 1
	        if( $sht(dialog_track=>$dlg(callid))== 5 && has_body("application/sdp")){
d1651 2
a1652 2
		}
if( $sht(dialog_track=>$dlg(callid))== 4 && has_body("application/sdp")){
d1679 1
a1679 1
        }   
@


1.751
log
@*** empty log message ***
@
text
@d916 1
a916 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq1) ACK\r\n$uac_req(hdrs)", "");    
@


1.750
log
@*** empty log message ***
@
text
@d1798 1
a1798 1
			exec_avp(" awk -v x='4.3' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.749
log
@*** empty log message ***
@
text
@d795 1
a795 1
//if( $shtitval(i1) == 1 || $shtitval(i1) == 2){
d896 1
a896 1
//	}
@


1.749.2.1
log
@reinvite 1
@
text
@d1647 1
a1647 1
		rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
@


1.749.1.1
log
@reinvite
@
text
@d1647 1
a1647 1
         	rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
@


1.748
log
@*** empty log message ***
@
text
@d566 1
a566 1
modparam("rtimer", "timer", "name=ta;interval=30;mode=1;")
d909 1
a909 1
    $uac_req(method)="INVITE";
d913 2
a914 1
      $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
d916 1
a916 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq1) INVITE\r\n$uac_req(hdrs)", "$var(body2)");    
d1647 1
a1647 1
		rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
@


1.748.1.1
log
@15sec
@
text
@d566 1
a566 1
modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
d1797 1
a1797 1
			exec_avp(" awk -v x='4.4' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.748.1.2
log
@only one time
@
text
@d795 1
a795 1
if( $shtitval(i1) == 1 || $shtitval(i1) == 2){
d896 1
a896 1
	}
@


1.748.1.3
log
@symmetric
@
text
@d691 1
a691 1
        		rtpengine_offer("generate-RTCP=on symmetric  replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1817 1
a1817 1
        		rtpengine_answer("generate-RTCP=on symmetric  replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.748.1.4
log
@*** empty log message ***
@
text
@d691 1
a691 1
        		rtpengine_offer("symmetric generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1817 1
a1817 1
        		rtpengine_answer("symmetric generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.747
log
@*** empty log message ***
@
text
@d791 2
a792 2
 	$sht(health=>2)=$avp(health2);	
	sht_iterator_start("i1", "dialog_track"); */
@


1.746
log
@*** empty log message ***
@
text
@d780 1
a780 1
        $avp(rtpurl)= $(dbr(rb=>[0,0]));
d792 1
a792 1
	sht_iterator_start("i1", "dialog_track");
@


1.745
log
@*** empty log message ***
@
text
@d1623 1
a1623 1
	        if( $sht(dialog_track=>$dlg(callid))== 5){
@


1.744
log
@*** empty log message ***
@
text
@d777 3
a779 3
        xlog("rtp url  = $(dbr(rb=>[0,0]))\n");
	 xlog("rtp url1  = $(dbr(rb=>[1,0]))\n");
	 xlog("rtp url2  = $(dbr(rb=>[2,0]))\n");
d783 6
a788 6
        // exec_avp("python3 rtpcmd.py $avp(rtpurl)","$avp(health)");
         // exec_avp("python3 rtpcmd.py $avp(rtpurl1)","$avp(health1)");
	// exec_avp("python3 rtpcmd.py $avp(rtpurl2)","$avp(health2)");
	// xlog("$avp(health)\n");  
          // xlog("$avp(health1)\n");  
	  // xlog("$avp(health2)\n");  
a861 9
/*	 sql_query("cb", "SELECT  url  FROM
                                  rtpengine   WHERE
                                 setid=$sht(rtpnode=>$avp(callid));
                                ", "rb");
	xlog("rtp url  = $(dbr(rb=>[0,0]))\n");
	$avp(rtpurl)= $(dbr(rb=>[0,0]));
	 exec_avp("python3 rtpcmd.py $avp(rtpurl)","$avp(health)");
	 xlog("$avp(health)");	
	$var(health)=$avp(health);	  */ 
d1620 1
a1620 1
		xlog("$var(health) \n");
d1803 1
@


1.743
log
@*** empty log message ***
@
text
@d1807 1
a1807 1
			xlog("L_INFO"," switch ------ $avp(switch) \n");
d1813 1
@


1.742
log
@*** empty log message ***
@
text
@d197 3
a199 3
 listen=udp:0.0.0.0:5060
#listen=udp:10.0.5.5:5060 advertise 163.22.22.61:5060
#listen=tcp:10.0.5.5:5060 advertise 163.22.22.61:5060
@


1.741
log
@/
@
text
@d197 3
a199 3
# listen=udp:10.0.0.10:5060
listen=udp:10.0.5.5:5060 advertise 163.22.22.61:5060
listen=tcp:10.0.5.5:5060 advertise 163.22.22.61:5060
@


1.740
log
@*** empty log message ***
@
text
@d1643 1
a1643 4
		$sht(dialog_track=>$dlg(callid))=6;
		}
if( $sht(dialog_track=>$dlg(callid))== 4 && has_body("application/sdp")){
 	  $uac_req(method)="ACK";
d1649 4
a1652 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");		
@


1.739
log
@*** empty log message ***
@
text
@d918 1
a918 1
    $uac_req(method)="UPDATE";
d924 1
a924 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq1) UPDATE\r\n$uac_req(hdrs)", "$var(body2)");    
d1646 7
@


1.738
log
@/
@
text
@d1799 1
a1799 1
			exec_avp(" awk -v x='4.0' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.737
log
@./
@
text
@d1793 1
a1793 1
				} 
d1802 2
a1803 2
			//} 			
		/*	else{
d1805 1
a1805 1
			}*/
@


1.736
log
@*** empty log message ***
@
text
@d1802 2
a1803 2
			}
			else{
d1805 2
a1806 2
			}
//}
@


1.735
log
@/
@
text
@d783 6
a788 6
         exec_avp("python3 rtpcmd.py $avp(rtpurl)","$avp(health)");
          exec_avp("python3 rtpcmd.py $avp(rtpurl1)","$avp(health1)");
	 exec_avp("python3 rtpcmd.py $avp(rtpurl2)","$avp(health2)");
	 xlog("$avp(health)\n");  
           xlog("$avp(health1)\n");  
	   xlog("$avp(health2)\n");  
d1784 1
a1784 1
                        if($sht(health=>$sht(rtpnode=>$ci))){
d1806 1
a1806 1
}
@


1.734
log
@*** empty log message ***
@
text
@d1791 4
a1794 2
                           rtpengine_query();
                           xlog("L_INFO", " mos avg $avp(mos_average) mos max $avp(mos_max) mos min $avp(mos_min)  \n ");
@


1.733
log
@*** empty log message ***
@
text
@d1784 1
d1798 6
a1803 2
xlog("L_INFO"," switch ------ $avp(switch) \n");
$var(mos)=$avp(switch);
@


1.732
log
@*** empty log message ***
@
text
@d571 1
a571 1

d789 3
a791 2
	
	$var(health)=$avp(health);
@


1.731
log
@*** empty log message ***
@
text
@d781 2
a782 2
	 $avp(rtpurl1)= $(dbr(rb=>[0,1]));
	 $avp(rtpurl2)= $(dbr(rb=>[0,2]));
d786 3
a788 3
	 xlog("$avp(health)");  
           xlog("$avp(health1)");  
	   xlog("$avp(health2)");  
@


1.730
log
@add ping rtpengine
@
text
@d778 2
a779 2
	 xlog("rtp url1  = $(dbr(rb=>[0,1]))\n");
	 xlog("rtp url2  = $(dbr(rb=>[0,2]))\n");
@


1.729
log
@*** empty log message ***
@
text
@d861 1
a861 1
	 sql_query("cb", "SELECT  url  FROM
d869 1
a869 1
	$var(health)=$avp(health);	   
@


1.728
log
@*** empty log message ***
@
text
@d774 17
@


1.727
log
@*** empty log message ***
@
text
@d1611 1
a1611 1
		xlog("$var(health) n");
@


1.726
log
@*** empty log message ***
@
text
@d851 2
a852 1
	 xlog("$avp(health)");		   
d1611 1
a1611 1
		
@


1.725
log
@*** empty log message ***
@
text
@d850 1
a850 1
	 exec_avp("kamcmd rtpengine.ping $avp(rtpurl)","$avp(health)");
@


1.724
log
@*** empty log message ***
@
text
@d849 2
a850 1
	 exec_avp("kamcmd rtpengine.ping  $avp(rtpurl)","$avp(health)");
@


1.723
log
@*** empty log message ***
@
text
@d849 3
a851 1
		       sql_result_free("rb");
@


1.722
log
@*** empty log message ***
@
text
@d846 1
a846 1
                                 id=$sht(rtpnode=>$avp(callid));
@


1.721
log
@*** empty log message ***
@
text
@d566 1
a566 1
modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
d849 1
d1774 1
a1774 1
			exec_avp(" awk -v x='4.3' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.720
log
@*** empty log message ***
@
text
@d777 1
a777 1
if( $shtitval(i1) == 1 || $shtitval(i1) == 2){
d882 1
a882 1
	}
@


1.719
log
@*** empty log message ***
@
text
@d844 5
@


1.718
log
@*** empty log message ***
@
text
@d923 1
a923 1
event_route[tm:local-response] {
d925 1
a925 1
}
d1434 1
a1434 1
			xlog("L_ERR","NAT YES________\n");
d1450 1
a1450 1
				xlog("L_ERR","RE_INVITE________\n");
@


1.717
log
@*** empty log message ***
@
text
@d165 1
a165 1
debug=ERRLEVEL
@


1.716
log
@*** empty log message ***
@
text
@d165 1
a165 1
debug=DBGLEVEL
d173 1
a173 1
log_facility=LOG_LOCAL6
@


1.715
log
@*** empty log message ***
@
text
@d173 1
a173 1
log_facility=LOG_LOCAL-1
@


1.714
log
@*** empty log message ***
@
text
@d173 1
a173 1
log_facility=LOG_LOCAL0
@


1.713
log
@*** empty log message ***
@
text
@d1172 1
a1172 1
		 xlog( "L_INFO", ""mos_A_label_pv $avp(mos_A_label) \n ");
d1179 2
a1180 2
			xlog("L_INFO", "mos_min_jitter_A_pv  $avp(mos_min_jitter_A) \n\n "); 
		 xlog( "L_INFO", "mos_B_label_pv $avp(mos_B_label) \n ");
@


1.712
log
@*** empty log message ***
@
text
@d173 1
a173 1
log_facility=LOG_LOCAL2
d936 1
a936 1
		xlog("L_ERR","$dlg(from_contact)------$var(rport)\n");
d1170 1
a1170 1
			xlog("L_INFO", "mos_max_roundtrip_pv $avp(mos_max_roundtrip) \n ");
d1172 1
a1172 1
		 xlog( "mos_A_label_pv $avp(mos_A_label) \n ");
d1179 2
a1180 2
			xlog("L_INFO", "mos_min_jitter_A_pv  $avp(mos_min_jitter_A) \n "); 
		 xlog( "mos_B_label_pv $avp(mos_B_label) \n ");
d1456 1
a1456 1
xlog("L_WARN","NAT MANAGE_____________________________\n");	
d1603 1
a1603 1
		   xlog("L_INFO"," RTPengine ID_______ $sht(rtpnode=>$ci)\n");
d1634 1
a1634 1
        xlog("L_INFO","ACK ANSWER 2 \n"); 
@


1.711
log
@*** empty log message ***
@
text
@d173 1
a173 1
log_facility=LOG_LOCAL0
@


1.710
log
@*** empty log message ***
@
text
@d165 1
a165 1
debug=INFOLEVEL
@


1.709
log
@*** empty log message ***
@
text
@d165 1
a165 1
debug=DBGLEVEL
@


1.708
log
@*** empty log message ***
@
text
@d776 1
a776 1
	        xlog("h1[$shtitkey(i1)] is: $shtitval(i1)\n");
d778 1
a778 1
		 xlog("L_INFO","Timer time out $dlg(callid)~~~~~~~~~~~~\n");
d846 1
a846 1
	 xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
d1199 1
a1199 1
			xlog("L_INFO","Send BYE");
d1754 1
a1754 1
  xlog("L_ERR","send REINVITE $dlg(callid)~~~~~~~~~~~~\n");
d1761 1
a1761 1
                             xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
@


1.707
log
@*** empty log message ***
@
text
@d1619 1
@


1.706
log
@*** empty log message ***
@
text
@d1606 1
a1606 1
	/*  $var(cseq2)=$(dlg(from_cseq){s.int})+2;		
d1613 1
a1613 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");*/
a1617 9
                $avp(setid)=$sht(rtpnode=>$ci);
		 $var(cseq2)=$(dlg(from_cseq){s.int})+1;               
        $uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(from_contact);
           $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);  
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");
d1619 2
a1620 2
	//	rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
  //              xlog("L_INFO","階段四\n");
d1631 1
a1631 1
      /*   $uac_req(callid)=$dlg(callid);
d1633 1
a1633 1
        xlog("L_INFO","ACK ANSWER 2 \n"); */
d1649 1
a1649 1
                xlog("L_INFO","階段三\n");
d1651 1
a1651 1
                  xlog("L_ERR"," After  33333  $mbu\n");     
d1678 1
a1678 1
        	xlog("L_INFO","ACK ANSWER 1 \n");
d1681 1
a1681 1
                   xlog("L_INFO", "ID --------------- $avp(setid)\r\n ");
d1684 1
a1684 1
		xlog("L_INFO"," RTPengine ID_______switch  $sht(rtpnode=>$ci)\n");
@


1.705
log
@*** empty log message ***
@
text
@d1619 1
a1619 1
		 $var(cseq2)=$(dlg(from_cseq){s.int})+2;               
@


1.704
log
@*** empty log message ***
@
text
@d1606 1
a1606 1
	  $var(cseq2)=$(dlg(from_cseq){s.int})+2;		
d1613 1
a1613 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");
d1619 8
d1628 1
a1628 1
		rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1640 1
a1640 1
         $uac_req(callid)=$dlg(callid);
d1642 1
a1642 1
        xlog("L_INFO","ACK ANSWER 2 \n");
d1648 1
a1648 1
         $uac_req(callid)=$dlg(callid);  
@


1.703
log
@*** empty log message ***
@
text
@d1703 1
a1703 1
		$var(blackhole)="\r\nv=0
@


1.702
log
@*** empty log message ***
@
text
@d1703 8
a1710 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "$var(body)");
@


1.701
log
@*** empty log message ***
@
text
@d1671 1
a1671 1
	/*		  $var(cseq0)=$(dlg(from_cseq){s.int})+1;
d1678 1
a1678 1
          	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "");*/
@


1.700
log
@*** empty log message ***
@
text
@d1671 1
a1671 1
			  $var(cseq0)=$(dlg(from_cseq){s.int})+1;
d1678 1
a1678 1
          	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "");
d1703 1
a1703 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "");
@


1.699
log
@*** empty log message ***
@
text
@a774 1
	     xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
d778 1
a778 1
		 xlog("L_ERR","send REINVITE $dlg(callid)~~~~~~~~~~~~\n");
d784 1
a784 1
	                  xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
d808 1
a808 1
	xlog("number of rows in table domain: $dbr(ra=>rows)\n");
d814 1
a814 1
        xlog("--- SCRIPT: column[$var(i)] = $dbr(ra=>colname[$var(i)])\n");
d911 1
a911 1
	 xlog("L_INFO","SEND REINVITE \n");
d1602 2
a1603 2
		   xlog("L_ERR","rtp_id2 is $avp(rtp_id2) and setid is $avp(setid)\n");
		   xlog("L_ERR"," RTPengine ID_______ $sht(rtpnode=>$ci)\n");
d1605 1
a1605 1
			  xlog("L_ERR"," $dlg(callid)_______ $sht(dialog_track=>$dlg(callid))\n");
d1614 1
a1614 1
        xlog("L_INFO","ACK ANSWER 3 \n");
d1621 1
a1621 1
                xlog("L_INFO","階段四\n");
d1685 1
a1685 1
		xlog("L_ERR"," RTPengine ID_______switch  $sht(rtpnode=>$ci)\n");
d1687 1
a1687 1
		xlog("L_INFO","status 200 ok  \n");
d1704 1
a1704 1
	xlog("L_INFO","ACK ANSWER 1 \n");
@


1.698
log
@*** empty log message ***
@
text
@d720 1
a720 1
			   exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
d747 1
a747 1
	$sht(dialog_track=>$ci)=$null;
d780 5
a784 5
		      exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                        xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                        $avp(setid)=$(avp(data2){s.int});
                  $avp(mos_A_label)="Aleg_label";
                        $avp(mos_B_label)="Bleg_label";
d786 1
a786 1
			rtpengine_query();
d788 3
a790 3
                          xlog("L_INFO", " mos avg $avp(mos_average) \n ");
                        xlog("L_INFO", " mos max $avp(mos_max) \n ");
                        xlog("L_INFO", " mos min $avp(mos_min)  \n ");
d824 1
a824 1
            xlog("[$var(i),$var(j)] = $(dbr(ra=>[$var(i),$var(j)]))\n");
d829 1
a829 1
       	   xlog("dlg(callid) = $(dbr(ra=>[0,0]))\n");
d831 1
a831 1
	   xlog("dlg(from_uri) = $(dbr(ra=>[0,1]))\n");
d833 1
a833 1
	 xlog("dlg(from_contact) =$(dbr(ra=>[0,5]))\n");
d835 1
a835 1
	  xlog("dlg(from_tag) = $(dbr(ra=>[0,2]))\n");
d837 1
a837 1
	   xlog("dlg(to_uri) = $(dbr(ra=>[0,4]))\n");
d839 1
a839 1
	   xlog("dlg(to_contact) =$(dbr(ra=>[0,6]))\n");
d841 1
a841 1
	   xlog("dlg(to_tag) = $(dbr(ra=>[0,3]))\n");
d865 3
a867 3
   	xlog("L_ERR"," $uac_req(furi)\n");
	xlog("L_ERR"," $uac_req(turi)\n");
	xlog("Request Method: $rm\n");
d1624 1
a1624 1
                  xlog("L_ERR"," After 4444  $mbu\n");        
d1661 1
a1661 1
	   xlog("L_ERR"," IN ___________\n");
d1663 2
a1664 2
		 xlog("L_ERR"," INVTTE REPLY _______\n");
		  xlog("L_ERR","send REINVITE $dlg(callid)~~~~~~~~~~~~\n");
d1671 1
a1671 1
                   xlog("L_ERR","rtp_id2 is $avp(rtp_id2) and setid is $avp(setid)\n");
d1694 1
a1694 1
                xlog("L_ERR"," After  1111  $mbu\n");
d1729 1
a1729 1
                 xlog("L_ERR","------------BODY2: $avp(body)\n");
d1737 1
a1737 1
		 xlog("L_ERR","------------BODY3: $avp(body2)\n");
d1742 1
a1742 1
                 xlog("L_ERR","------------BODY4: $avp(body3)\n");
@


1.697
log
@*** empty log message ***
@
text
@d778 1
a778 1
if( $shtitval(i1) == 1){
@


1.696
log
@*** empty log message ***
@
text
@d1762 1
a1762 1
			exec_avp(" awk -v x='4.4' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.695
log
@*** empty log message ***
@
text
@d1634 1
a1634 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq) UPDATE\r\n$uac_req(hdrs)", "$var(body3)");
@


1.694
log
@*** empty log message ***
@
text
@d1627 1
a1627 1
                 $uac_req(method)="UPDATE";
@


1.693
log
@*** empty log message ***
@
text
@d1634 1
a1634 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq) INVITE\r\n$uac_req(hdrs)", "$var(body3)");
@


1.692
log
@*** empty log message ***
@
text
@d1627 1
a1627 1
                 $uac_req(method)="INVITE";
@


1.691
log
@*** empty log message ***
@
text
@d1757 3
a1759 3
                           xlog("L_INFO", " mos avg $avp(mos_average) \n ");
                          xlog("L_INFO", " mos max $avp(mos_max) \n ");
                          xlog("L_INFO", " mos min $avp(mos_min)  \n ");
@


1.690
log
@*** empty log message ***
@
text
@d1762 1
a1762 1
			exec_avp(" awk -v x='4.3' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.689
log
@*** empty log message ***
@
text
@d476 1
a476 1

@


1.688
log
@*** empty log message ***
@
text
@d609 1
a609 1
		  xlog("L_INFO", "Your FU is $avp(rtp_id) \n");
d642 1
a642 1
		  xlog("L_INFO", "Your set_id is   $sht(rtpnode=>$ci)\n");
@


1.687
log
@*** empty log message ***
@
text
@d610 1
a610 1
		if($avp(rtp_id)!=$null)
@


1.686
log
@*** empty log message ***
@
text
@d609 2
a610 1
	//	if($avp(rtp_id)!=$null)
@


1.685
log
@*** empty log message ***
@
text
@d609 2
a610 2
		if($avp(rtp_id)!=$null)
			exec_avp("/etc/kamailio/true.sh  counter $avp(rtp_id)", "$avp(six)");
@


1.684
log
@*** empty log message ***
@
text
@d898 3
a900 4
   exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                        xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                        $avp(setid)=$(avp(data2){s.int});
	rtpengine_delete();
d1587 1
d1592 3
d1596 1
a1596 1
			$avp(setid)=$(avp(rtp_id2){s.int});
d1682 2
@


1.683
log
@*** empty log message ***
@
text
@d1615 2
a1616 2
               // $avp(setid)=2;
                $sht(rtpnode=>ci)=$avp(setid);
d1644 2
a1645 1
                  //   $avp(setid)=2;
@


1.682
log
@*** empty log message ***
@
text
@a1598 1
	           route(RTPnode2);	
a1599 1
			$sht(rtpnode=>$ci)=0;
@


1.681
log
@*** empty log message ***
@
text
@d1667 2
d1681 1
@


1.680
log
@*** empty log message ***
@
text
@d1601 1
@


1.679
log
@*** empty log message ***
@
text
@d1677 1
a1677 1
		 $sht(rtpnode=>$ci)=$avp(setid);
@


1.678
log
@*** empty log message ***
@
text
@d1593 1
a1593 1
			$avp(rtp_id2)=$(avp(random){s.int});
d1600 1
a1600 1
		   xlog("L_ERR","rtp_id2 is $avp(rtp_id2)");
@


1.677
log
@*** empty log message ***
@
text
@d1591 3
a1594 1
		$avp(setid)=$(avp(random){s.int});
d1601 1
a1601 1
		   xlog("L_ERR"," $dlg(callid)_______ $sht(dialog_track=>$dlg(callid))\n");
@


1.676
log
@*** empty log message ***
@
text
@a1589 1
		  $sht(rtpnode=>$ci)
@


1.675
log
@*** empty log message ***
@
text
@d589 1
a589 1
	    xlog("L_INFO", "Your IN\n"); 
d608 1
a608 1
		xlog("L_INFO", "Your sender1 username is   $du and $avp(counter)\n");
d615 2
a616 2
			xlog("L_INFO", "Your set_id is   $avp(setid)\n");
                	xlog("L_INFO", "Your sender0000000 username is   $ru and $avp(counter)\n");
d622 2
a623 2
			xlog("L_INFO", "Your set_id is   $avp(setid)\n");
                        xlog("L_INFO", "Your sender11111111 username is   $fU and $avp(counter)\n");
d628 2
a629 2
                        xlog("L_INFO", "Your set_id is   $avp(setid)\n");
                        xlog("L_INFO", "Your sender666666 username is   $fU and $avp(counter)\n");
d636 2
a637 2
			xlog("L_INFO", "Your set_id is   $avp(setid)\n");
                        xlog("L_INFO", "Your sender22222222 username is   $fU and $avp(counter)\n");
d640 1
a640 1
                xlog("L_INFO", "Your return is $var(flag) and  $var(counter)\n");
@


1.674
log
@*** empty log message ***
@
text
@d1589 5
a1593 1
		$avp(setid)=$(avp(rtp_id2){s.int});
d1676 1
d1739 4
a1742 3
                         exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                           xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                           $avp(setid)=$(avp(data2){s.int});
@


1.673
log
@*** empty log message ***
@
text
@d1189 1
a1197 1
		 $sht(rtpnode=>$ci)=$null;
@


1.672
log
@*** empty log message ***
@
text
@d606 1
d609 2
a610 1
		exec_avp("/etc/kamailio/true.sh  counter", "$avp(six)");
@


1.671
log
@*** empty log message ***
@
text
@d1587 1
d1610 2
a1611 1
                rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
@


1.670
log
@*** empty log message ***
@
text
@d544 1
a544 1
modparam("htable", "htable", "ipban=>size=8;autoexpire=3000;")
d573 1
d611 1
a611 1
			$sht(ipban=>$ci)=0;
d618 1
a618 1
			$sht(ipban=>$ci)=$avp(setid);
d624 1
a624 1
			     $sht(ipban=>$ci)=$(avp(setid){s.int});
d632 1
a632 1
			   $sht(ipban=>$ci)=$(avp(setid){s.int}); 
d639 1
a639 1
		  xlog("L_INFO", "Your set_id is   $sht(ipban=>$ci)\n");
d1026 2
a1027 2
		 $avp(setid)= $sht(ipban=>$ci);
	          xlog("L_INFO", "$ci --------------- $sht(ipban=>$ci)\r\n ");
d1195 1
a1195 1
		 $sht(ipban=>$ci)=$null;
@


1.669
log
@*** empty log message ***
@
text
@d623 1
a623 1
			     $sht(ipban=>$ci)=$avp(setid);
d631 2
a632 2
			 $sht(ipban=>$ci)=$avp(setid);
			 exec_avp("echo msg=$avp(setid)> /etc/kamailio/counter.sh", "$avp(counter)");
@


1.668
log
@*** empty log message ***
@
text
@d638 1
@


1.667
log
@*** empty log message ***
@
text
@d1025 1
@


1.666
log
@*** empty log message ***
@
text
@d1197 1
a1197 1
*/ //		}else{
@


1.665
log
@*** empty log message ***
@
text
@d544 1
a544 1
modparam("htable", "htable", "ipban=>size=8;autoexpire=300;")
d610 1
d617 1
d623 1
d631 1
d1021 1
a1021 1
			exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
d1024 1
a1024 1
		// $avp(setid)=2;
d1192 1
a1196 7
/*			$uac_req(method)="BYE";
    $uac_req(callid)=$dlg(callid); 
    $uac_req(ruri)=$dlg(to_contact);  
    $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
    $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);   
      $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\n"; 
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 BYE\r\n$uac_req(hdrs)", ""); 
@


1.664
log
@*** empty log message ***
@
text
@d1018 1
a1018 1
//			xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
d1020 1
a1020 1
		 $avp(setid)=2;
@


1.663
log
@*** empty log message ***
@
text
@d1741 1
a1741 1
			exec_avp(" awk -v x='4.1' -v y='$avp(mos_average)' 'BEGIN { if ( y >= x ) print 0; else print 1; }'", "$avp(switch)");
@


1.662
log
@*** empty log message ***
@
text
@d1583 4
a1586 1

d1589 3
a1591 3
			 $avp(username)=$(dlg(from_uri){uri.user});
			exec_avp("/etc/kamailio/select_usr.sh  $avp(username)  rtp_id2","$avp(rtp_id2)" );
			xlog("L_ERR","rtp_id2 is $avp(rtp_id2)");
@


1.661
log
@*** empty log message ***
@
text
@d1585 4
a1588 1
reply_route {
d1604 1
a1604 1
                $avp(setid)=2;
d1632 1
a1632 1
                     $avp(setid)=2;
d1668 1
a1668 1
			$avp(setid)=2;
@


1.660
log
@*** empty log message ***
@
text
@a1647 1
	if($var(mos)==1){
d1650 11
@


1.659
log
@*** empty log message ***
@
text
@d1648 1
a1648 1
	if($var(mos)==0){
@


1.658
log
@*** empty log message ***
@
text
@d1648 1
a1648 1
	if($var(mos)==false){
d1725 1
a1725 1
			exec_avp(" awk -v x='4.3' -v y='$avp(mos_average)' 'BEGIN { if (x >= y) print 0; else print 1; }'", "$avp(switch)");
@


1.657
log
@*** empty log message ***
@
text
@d1723 3
a1725 1
			 exec_avp(" awk -v x='4.3' -v y='$avp(mos_average)' 'BEGIN { if (x >= y) print 0; else print 1; }'", "$avp(switch)");
@


1.656
log
@*** empty log message ***
@
text
@d1723 1
a1723 1
			 exec_avp(" awk -v x='4.3' -v y='3.5' 'BEGIN { if (x >= y) print 0; else print 1; }'", "$avp(switch)");
@


1.655
log
@*** empty log message ***
@
text
@d1723 1
a1723 1
			 exec_avp("awk -v x='4.3' -v y='3.5' 'BEGIN { if (x <= y) print 'true'; else print 'false'; }' ", "$avp(switch)");
@


1.654
log
@*** empty log message ***
@
text
@d1723 1
a1723 1
			 exec_avp("awk -v x='4.3' -v y=$avp(mos_average) 'BEGIN { if (x <= y) print 'true'; else print 'false'; }' ", "$avp(switch)");
@


1.653
log
@*** empty log message ***
@
text
@d1723 1
a1723 1
			 exec_avp("awk -v x='4.3' -v y='$avp(mos_average)' 'BEGIN { if (x <= y) print 'true'; else print 'false'; }' ", "$avp(switch)");
@


1.652
log
@*** empty log message ***
@
text
@d1724 1
a1724 1
xlog("L_INFO","  $avp(switch) \n");
@


1.651
log
@*** empty log message ***
@
text
@d1723 1
a1723 1
			 exec_avp("awk -v x="4.3" -v y="$avp(mos_average)" 'BEGIN { if (x <= y) print "true"; else print "false"; }'", "$avp(switch)");
@


1.650
log
@*** empty log message ***
@
text
@d1724 2
a1725 1
xlog("L_INFO","  $avp(switch) \n")
@


1.649
log
@*** empty log message ***
@
text
@d1648 1
d1673 1
a1674 1
	  	//
a1679 1
	// route(REP);
d1723 2
@


1.648
log
@*** empty log message ***
@
text
@d1589 2
a1590 1
			$uac_req(method)="ACK";
d1596 1
a1596 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq) ACK\r\n$uac_req(hdrs)", "");
@


1.647
log
@*** empty log message ***
@
text
@d1589 9
d1616 1
a1616 1
                 $uac_req(method)="ACK";
d1623 1
a1623 1
        xlog("L_INFO","ACK ANSWER 3 \n");
@


1.646
log
@*** empty log message ***
@
text
@d1607 1
a1607 1
              /*   $uac_req(method)="ACK";
d1614 1
a1614 1
        xlog("L_INFO","ACK ANSWER 3 \n");*/
@


1.645
log
@*** empty log message ***
@
text
@d1613 1
a1613 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "");
@


1.644
log
@*** empty log message ***
@
text
@d1657 1
a1657 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq0) ACK\r\n$uac_req(hdrs)", "");
@


1.643
log
@*** empty log message ***
@
text
@d1597 1
a1597 1
		$var(cseq)=$(dlg(to_cseq){s.int})+2;
@


1.642
log
@*** empty log message ***
@
text
@d1625 1
a1625 1
                $var(cseq1)=$(dlg(to_cseq){s.int})+2;
d1650 1
a1650 1
		 $var(cseq2)=$(dlg(to_cseq){s.int})+1;
d1657 1
a1657 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: $var(cseq2) ACK\r\n$uac_req(hdrs)", "");
@


1.641
log
@*** empty log message ***
@
text
@d888 1
a888 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 UPDATE\r\n$uac_req(hdrs)", "$var(body2)");    
d899 1
a899 1
 	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$var(body)");
d1597 1
a1597 1
		$var(cseq)=$(dlg(to_cseq){s.int})+1;
d1605 1
a1605 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 INVITE\r\n$uac_req(hdrs)", "$var(body3)");
d1625 1
d1649 2
a1650 2
//		xlog("L_ERR","new  body  $var(body)\n");
        //	route(TEST);  
d1657 1
a1657 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "");
d1666 2
a1667 2
		remove_hf("CSeq");
		append_hf("CSeq: 2\r\n");
@


1.640
log
@*** empty log message ***
@
text
@d1597 1
@


1.639
log
@*** empty log message ***
@
text
@d1633 2
a1634 11
                        exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                          xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                          $avp(setid)=$(avp(data2){s.int});
                    $avp(mos_A_label)="Aleg_label";
                          $avp(mos_B_label)="Bleg_label";
                            xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
                          rtpengine_query();
			  xlog("L_INFO", " mos avg $avp(mos_average) \n ");
                         xlog("L_INFO", " mos max $avp(mos_max) \n ");
                         xlog("L_INFO", " mos min $avp(mos_min)  \n ");
	//	route(REP);
d1698 13
@


1.638
log
@*** empty log message ***
@
text
@a775 1
        		$ci=$shtitkey(i1);
d1632 11
@


1.637
log
@*** empty log message ***
@
text
@a764 10
	   exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
                        xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
                        $avp(setid)=$(avp(data2){s.int});
                  $avp(mos_A_label)="Aleg_label";
                        $avp(mos_B_label)="Bleg_label";
                        rtpengine_query();
        //              rtpengine_delete();
                          xlog("L_INFO", " mos avg $avp(mos_average) \n ");
                        xlog("L_INFO", " mos max $avp(mos_max) \n ");
                        xlog("L_INFO", " mos min $avp(mos_min)  \n ");
d776 3
a778 1
                        rtpengine_query();
@


1.636
log
@*** empty log message ***
@
text
@d765 10
@


1.635
log
@*** empty log message ***
@
text
@d848 1
a848 1
 $avp(cseq)= $avp(cseq)+1;
@


1.634
log
@*** empty log message ***
@
text
@d859 1
a859 1
  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.633
log
@*** empty log message ***
@
text
@d848 1
@


1.632
log
@*** empty log message ***
@
text
@d786 1
d797 1
a797 1
                        	d.callee_contact
d833 1
a833 1
	$avp(sdp)= $(dbr(ra=>[0,7]));
@


1.631
log
@*** empty log message ***
@
text
@d738 1
a738 1
//	$sht(dialog_track=>$ci)=$null;
d1199 1
a1199 1
		  $sht(dialog_track=>$ci)=$null;
@


1.630
log
@*** empty log message ***
@
text
@d1186 1
a1186 1
		if( $sht(dialog_track=>$dlg(callid))== 5){
d1196 1
a1196 1
*/		}else{
d1198 1
a1198 1
		}
@


1.629
log
@update modifty
@
text
@d1601 1
a1601 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$var(body3)");
@


1.628
log
@*** empty log message ***
@
text
@d1594 1
a1594 1
                 $uac_req(method)="ACK";
d1598 2
a1599 1
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
d1601 1
a1601 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "$var(body3)");
d1603 1
a1603 1
                 $uac_req(method)="ACK";
d1610 1
a1610 1
        xlog("L_INFO","ACK ANSWER 3 \n");
@


1.627
log
@*** empty log message ***
@
text
@d1188 1
a1188 1
			dlg_bye("all");
@


1.626
log
@*** empty log message ***
@
text
@d1188 2
a1189 1
			$uac_req(method)="BYE";
d1196 1
a1196 1
		}else{
@


1.625
log
@*** empty log message ***
@
text
@d1193 1
a1193 1
      $uac_req(hdrs)="Contact: <"+$ct+">\r\n"; 
@


1.624
log
@*** empty log message ***
@
text
@d1186 1
a1186 1
		if( $sht(dialog_track=>$dlg(callid))== 4){
@


1.623
log
@*** empty log message ***
@
text
@d738 1
a738 1
	$sht(dialog_track=>$ci)=$null;
d1198 1
@


1.622
log
@*** empty log message ***
@
text
@d1185 1
@


1.621
log
@*** empty log message ***
@
text
@d1185 1
a1185 1
		if( $sht(dialog_track=>$dlg(callid))== 5){
d1189 1
a1189 1
    $uac_req(ruri)=$dlg(from_contact);  
@


1.620
log
@*** empty log message ***
@
text
@d1186 1
a1186 1
			xlog("INFO","Send BYE");
@


1.619
log
@*** empty log message ***
@
text
@d1186 1
a1186 1
			xlog("INFO","Send BYE")
@


1.618
log
@*** empty log message ***
@
text
@d1186 1
@


1.617
log
@*** empty log message ***
@
text
@a1176 7
		 $uac_req(method)="BYE";
    $uac_req(callid)=$dlg(callid); 
    $uac_req(ruri)=$dlg(from_contact);  
    $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
    $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);   
      $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\n"; 
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 BYE\r\n$uac_req(hdrs)", "");   
d1185 11
a1195 1
		route(RELAY);
@


1.616
log
@*** empty log message ***
@
text
@d1179 4
a1182 4
    $uac_req(ruri)=$dlg(to_contact);  
    $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
    $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);   
      $uac_req(hdrs)="Contact: <"+$dlg(to_contact)+">\r\n"; 
@


1.615
log
@*** empty log message ***
@
text
@d1177 7
@


1.614
log
@*** empty log message ***
@
text
@d1575 1
a1575 1
                rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.613
log
@*** empty log message ***
@
text
@d1623 1
a1623 1
                rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.612
log
@*** empty log message ***
@
text
@d1594 1
a1594 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 ACK\r\n$uac_req(hdrs)", "");
@


1.611
log
@*** empty log message ***
@
text
@d879 1
a879 1
    $uac_req(method)="INVITE";
@


1.610
log
@*** empty log message ***
@
text
@d879 1
a879 1
    $uac_req(method)="UPDATE";
@


1.609
log
@*** empty log message ***
@
text
@d771 10
a780 1
		
@


1.608
log
@*** empty log message ***
@
text
@d1170 1
d1676 1
a1676 1
			$sht(dialog_track=>$dlg(callid)) = 1;
@


1.607
log
@*** empty log message ***
@
text
@d1006 1
a1006 1
			xlog("L_INFO", "ID --------------- $avp(data2)\r\n ");
d1009 1
@


1.606
log
@*** empty log message ***
@
text
@d928 1
a928 1
		if($shv(test) != 0){
d935 1
a935 1
		 }
d1549 1
a1549 1
	if(is_method("INVITE")&& $shv(test)!=1) {
d1553 1
a1553 1
	}
@


1.605
log
@*** empty log message ***
@
text
@d1008 1
a1008 1
		 $avp(setid)=2
@


1.604
log
@*** empty log message ***
@
text
@d1007 2
a1008 1
			$avp(setid)=$(avp(data2){s.int});
@


1.603
log
@*** empty log message ***
@
text
@d878 4
a898 4
 	if (t_newtran()) {
    xlog("the transaction has been created\n");
	} 
//xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
@


1.602
log
@*** empty log message ***
@
text
@d876 1
a876 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 INVITE\r\n$uac_req(hdrs)", "$var(body2)");    
@


1.601
log
@*** empty log message ***
@
text
@d839 1
a839 1
    $uac_req(body)=$avp(sdp);
d848 1
a848 1
  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$avp(sdp)");
@


1.600
log
@*** empty log message ***
@
text
@d928 1
a928 1
	/*	if($shv(test) != 0){
d935 1
a935 1
		 }*/
d1548 1
a1548 1
/*	 if(is_method("INVITE")&& $shv(test)!=1) {
d1552 1
a1552 1
	}*/
@


1.599
log
@*** empty log message ***
@
text
@d567 1
a567 1
modparam("rtimer", "exec", "timer=ta;route=3725")
@


1.598
log
@*** empty log message ***
@
text
@d573 1
a573 1
##modparam("timer", "declare_timer", "tmr1=TEST,10000,,enable");
d839 1
a839 1
 //   $uac_req(body)=$avp(sdp);
d843 1
a843 1
    uac_req_send(); //To: $uac_req(turi)\r\n Via: $dlg_var(via)\r\n
d848 1
a848 1
 // t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
d870 1
d883 1
a883 1
 	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
d1623 1
a1623 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "$var(body)");
@


1.597
log
@*** empty log message ***
@
text
@d756 1
a756 1
    $uac_req(ruri)=$var(ct);  
@


1.596
log
@try rfc3725
@
text
@d748 1
a748 1
            $var(ct) = $dbr(ra=>[0,1]);
d756 1
a756 1
    $uac_req(ruri)="sip:john@@118.170.6.147:56419;transport=tcp";  
d759 1
a759 1
      $uac_req(hdrs)="Contact: <sip:john@@118.170.6.147:56419;transport=tcp>\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
@


1.595
log
@*** empty log message ***
@
text
@d748 1
a748 1
            $var(ct) = $dbr(ra=>[0,0]);
@


1.594
log
@*** empty log message ***
@
text
@d750 1
a750 1
        } else {
a752 1

a753 1
    }
@


1.593
log
@*** empty log message ***
@
text
@d742 14
@


1.592
log
@*** empty log message ***
@
text
@d744 1
a744 1
    $uac_req(ruri)="sip:john@@118.170.6.147:54990;transport=tcp";  
d747 1
a747 1
      $uac_req(hdrs)="Contact: <sip:john@@118.170.6.147:54990;transport=tcp>\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n"; 
@


1.591
log
@*** empty log message ***
@
text
@d744 1
a744 1
    $uac_req(ruri)="sip:john@@163.22.22.61";  
@


1.590
log
@*** empty log message ***
@
text
@d746 1
a746 1
    $uac_req(furi)="sip:ken@@163.22.22.61"   
@


1.589
log
@*** empty log message ***
@
text
@d744 1
a744 1
    $uac_req(ruri)="sip:john@@163.22.22.61"  
@


1.588
log
@*** empty log message ***
@
text
@d567 1
a567 1
modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
d740 10
@


1.587
log
@*** empty log message ***
@
text
@d588 1
d821 1
a821 1
    //uac_req_send(); //To: $uac_req(turi)\r\n Via: $dlg_var(via)\r\n
d826 1
a826 1
  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.586
log
@*** empty log message ***
@
text
@d746 1
a746 1
if( $shtitval(i1) == 2){
d1550 1
a1550 1
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "$var(body3)");
d1558 1
a1558 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 ACK\r\n$uac_req(hdrs)", "");
@


1.585
log
@*** empty log message ***
@
text
@d746 1
a746 1
if( $shtitval(i1) == 1){
@


1.584
log
@*** empty log message ***
@
text
@d825 1
a825 1
  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
d852 1
a852 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 INVITE\r\n$uac_req(hdrs)", "$var(body2)");    
d859 1
a859 1
 	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.583
log
@*** empty log message ***
@
text
@d746 1
a746 1
if( $shtitval(i1) == 2){
@


1.582
log
@*** empty log message ***
@
text
@d746 1
a746 1
if( $shtitval(i1) != 2){
@


1.581
log
@*** empty log message ***
@
text
@d1534 3
d1560 1
@


1.580
log
@*** empty log message ***
@
text
@d1534 26
a1559 1
   if( $sht(dialog_track=>$dlg(callid))== 3 && has_body("application/sdp")){
a1609 28
            if( $sht(dialog_track=>$dlg(callid))== 4 && has_body("application/sdp")){
                $avp(setid)=2;
		rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
                xlog("L_INFO","階段四\n");
		exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");
		  xlog("L_ERR"," After 4444  $mbu\n");        
                route(REP);
		 $uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(from_contact);
           $uac_req(turi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(furi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);
          t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "$var(body3)");
        xlog("L_INFO","ACK ANSWER 2 \n");
                //   exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");        
               // xlog("L_ERR"," After  CMD  $mbu\n");
             //   route(REP);
              //  route(TEST);            
        	 $uac_req(method)="ACK";
          $uac_req(ruri)=$dlg(to_contact);
           $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
            $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
          $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n";
         $uac_req(callid)=$dlg(callid);  
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 ACK\r\n$uac_req(hdrs)", "");
        xlog("L_INFO","ACK ANSWER 3 \n");
	}
@


1.579
log
@*** empty log message ***
@
text
@d1558 1
a1558 1
                        rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
d1587 1
a1587 1
//		  rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.578
log
@*** empty log message ***
@
text
@d1534 12
a1545 1
	if( $sht(dialog_track=>$dlg(callid))== 2){
a1583 10
	    if( $sht(dialog_track=>$dlg(callid))== 3 && has_body("application/sdp")){
		     $avp(setid)=2;
//		  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
		xlog("L_INFO","階段三\n");
		   exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");   
		  xlog("L_ERR"," After  33333  $mbu\n");     
               // xlog("L_ERR"," After  CMD  $mbu\n");
                route(REP);
		route(TEST);		
	}
@


1.577
log
@,
@
text
@d1575 1
a1575 1
		  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
d1586 1
a1586 1
		  rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.576
log
@*** empty log message ***
@
text
@a872 1
  //  t_reply("999","hello");
d874 1
a874 1
xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
d1549 1
a1549 1
               // xlog("L_ERR"," After  CMD  $mbu\n");
d1577 2
a1578 1
		   exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");        
d1588 2
a1589 1
		exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");        
d1623 1
a1623 1
                 xlog("L_ERR","------------BODY: $avp(body)\n");
d1631 1
a1631 1
		 xlog("L_ERR","------------BODY: $avp(body2)\n");
d1636 1
a1636 1
                 xlog("L_ERR","------------BODY: $avp(body3)\n");
@


1.575
log
@*** empty log message ***
@
text
@d1563 1
a1563 1
	}
d1575 1
d1585 2
a1586 1
                  rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
d1588 10
d1602 9
a1610 1
        }
d1625 1
a1625 1
	else{
d1630 8
a1637 1
	}             
@


1.574
log
@*** empty log message ***
@
text
@d1602 1
a1602 1
                // xlog("L_ERR","------------BODY: $avp(body)\n");
@


1.573
log
@*** empty log message ***
@
text
@d1598 1
a1598 1
	   if($sht(dialog_track=>$dlg(callid))== 2)
@


1.572
log
@*** empty log message ***
@
text
@d1598 1
a1602 1
	if($sht(dialog_track=>$dlg(callid))== 2)
d1604 8
a1611 3
	else
		$var(body2)=$avp(body);
             return ;	
@


1.571
log
@*** empty log message ***
@
text
@d1574 1
a1574 1
	    if( $sht(dialog_track=>$dlg(callid))== 3){
d1583 1
a1583 1
            if( $sht(dialog_track=>$dlg(callid))== 4){
@


1.570
log
@*** empty log message ***
@
text
@d853 1
d860 1
d862 1
a863 1
 $sht(dialog_track=>$dlg(callid)) = 3;
d1580 1
a1580 2
		route(TEST);
		
d1582 9
@


1.569
log
@add reinvite 3
@
text
@a844 1
   $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
d846 1
a846 1
    if(   $sht(dialog_track=>$avp(callid))==3){
d849 2
a850 1
    $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);    
d857 2
a858 1
 t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.568
log
@*** empty log message ***
@
text
@d1577 2
a1578 1
		route(TEST);	
@


1.567
log
@*** empty log message ***
@
text
@a843 1
    xlog("L_INFO","Sending annoying message");
d845 10
a854 1
    $uac_req(ruri)=$dlg(from_contact);
d857 2
a858 2
    $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
    $uac_req(callid)=$dlg(callid);	
a859 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
d1574 4
d1590 1
d1592 2
@


1.566
log
@*** empty log message ***
@
text
@d852 2
a853 2
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 INVITE\r\n$uac_req(hdrs)", "");
 $sht(dialog_track=>$avp(callid)) = 3;
@


1.565
log
@*** empty log message ***
@
text
@d855 1
a855 1
 exit;
@


1.564
log
@*** empty log message ***
@
text
@d854 1
a854 1

d1540 1
a1540 1
                xlog("L_ERR"," After  CMD  $mbu\n");
d1542 1
a1542 1
		xlog("L_ERR","new  body  $var(body)\n");
d1551 1
d1578 1
a1578 1
                 xlog("L_ERR","------------BODY: $avp(body)\n");
@


1.563
log
@*** empty log message ***
@
text
@d1564 1
@


1.562
log
@*** empty log message ***
@
text
@d851 2
a852 2
    $uac_req(body)=$dlg_var(sdp);
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 3 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.561
log
@*** empty log message ***
@
text
@d852 4
a855 2
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
exit;
d1551 1
d1563 3
@


1.560
log
@*** empty log message ***
@
text
@d1548 1
a1548 1
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "$dlg_var(sdp)");
@


1.559
log
@*** empty log message ***
@
text
@a1536 1
//	 if(is_method("INVITE")&& $shv(test)!=1) {
a1537 1
                $shv(test)=1;
a1540 1
  //      	}		
d1572 1
a1572 1
             exit;	
@


1.558
log
@*** empty log message ***
@
text
@d1542 1
a1542 1
		xlog("L_ERR","$var(body)\n");
@


1.557
log
@*** empty log message ***
@
text
@d1542 1
a1542 1
		xlog("L_ERR","$avp(body)\n");
d1574 1
@


1.556
log
@*** empty log message ***
@
text
@d1541 2
a1542 2
		$avp(body2)=route(REP);
		xlog("L_ERR","$avp(body2)\n");
d1574 1
a1574 1
              return $avp(body);	
@


1.555
log
@*** empty log message ***
@
text
@d1541 2
a1542 2
		route(REP);
		xlog("L_ERR","$dlg_var(sdp)\n");
@


1.554
log
@*** empty log message ***
@
text
@d1574 1
a1574 2
              $dlg_var(sdp)=$avp(body);	
exit;
@


1.553
log
@*** empty log message ***
@
text
@d1537 1
a1537 1
	 if(is_method("INVITE")&& $shv(test)!=1) {
d1543 1
a1543 1
        	}		
@


1.552
log
@*** empty log message ***
@
text
@d1540 1
a1540 1
                xlog("L_ERR"," After  CMD  $var(mbu)\n");
d1542 1
@


1.551
log
@*** empty log message ***
@
text
@d1548 1
a1548 1
  	  $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nContent-Type: application/sdp\r\n"";
@


1.550
log
@*** empty log message ***
@
text
@d1548 1
a1548 1
  	  $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\n";
@


1.549
log
@*** empty log message ***
@
text
@d1544 1
a1544 1
	   /*      $uac_req(method)="ACK";
d1550 2
a1551 2
	  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 ACK\r\n$uac_req(hdrs)", "");
	*/	}
@


1.548
log
@*** empty log message ***
@
text
@d856 1
a856 1
	$avp(setid)=2;
d866 1
a866 1
  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1536 1
a1536 1
                        rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.547
log
@*** empty log message ***
@
text
@a1541 6
		 //   exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
                        // xlog("L_ERR","This is SDP Body: $avp(body)\n");
                                $avp(body)=$avp(body)+"|";
                                $avp(body)=$(avp(body){re.subst,/\|/\r\n/g});
                          xlog("L_ERR","------------BODY: $avp(body)\n");
                                $dlg_var(sdp)=$avp(body);
d1570 5
a1574 1
	exit;
@


1.546
log
@*** empty log message ***
@
text
@d1541 2
a1542 1
		    exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
d1575 1
a1575 5
	xlog("L_INFO","INCOM REP \n");
	  t_on_reply("MANAGE_REPLY");
	 if (!t_relay()) {
                sl_reply_error();
        }
@


1.545
log
@add reinvite to b
@
text
@d816 1
a816 1
    $uac_req(body)=$avp(sdp);
d825 1
a825 1
  t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d893 1
a893 1
		if($shv(test) != 0){
d900 1
a900 1
		}
d1513 1
a1513 1
	 if(is_method("INVITE")&& $shv(test)!=1) {
d1517 1
a1517 1
	}
d1537 12
a1548 1
        	route(TEST);  
@


1.544
log
@*** empty log message ***
@
text
@d851 2
a852 2
    $uac_req(body)=$dlg(sdp);
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.543
log
@*** empty log message ***
@
text
@d846 8
a853 14
    $uac_req(ruri)=$fu;
    $uac_req(furi)="sip:john@@163.22.22.61";
    $uac_req(turi)=$fu;
//  $uac_req(turi)="sip:thisphone";
//   $uac_req(hdrs)="Subject: Hello\r\n";   
//    $uac_req(hdrs)=$uac_req(hdrs) + "Content-Type: text/plain\r\n";   
//    $uac_req(body)="Hi Buddy. Just here to irritate you.";
    $uac_req(hdrs)="Contact: <sip:john@@163.22.22.61:5060;transport=udp\r\n";
    $uac_req(hdrs)=$uac_req(hdrs) + "Allow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\n";
    $uac_req(callid)=$(mb{s.md5});
   // $uac_req(evroute)=1;
   // uac_req_send();
	xlog("L_INFO","end");
	exit;
d1537 2
a1538 1
                   $uac_req(method)="ACK";
d1545 1
a1545 1
		}
@


1.542
log
@*** empty log message ***
@
text
@d1530 1
a1530 1
	   xlog("L_ERR"," IN ___________-\n");
d1543 9
a1551 1
                }
d1555 1
a1558 1
	 }
@


1.541
log
@*** empty log message ***
@
text
@d1546 4
@


1.540
log
@*** empty log message ***
@
text
@d1544 2
@


1.539
log
@*** empty log message ***
@
text
@a803 2
}
sht_iterator_end("i1"); 
d834 1
d836 1
@


1.538
log
@*** empty log message ***
@
text
@d746 1
a746 1
	
d828 1
d835 2
a836 1
	    $sht(dialog_track=>$dlg(callid)) = 2;
d872 1
a872 1
//	  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1529 1
a1529 1
	if( $sht(dialog_track=>$dlg(callid))== 1){
d1541 1
@


1.537
log
@add modparam tm loacl ack
@
text
@d1542 1
a1542 1
	 route(REP);
@


1.536
log
@*** empty log message ***
@
text
@d365 1
@


1.535
log
@*** empty log message ***
@
text
@d364 1
a364 1

@


1.534
log
@*** empty log message ***
@
text
@a1527 2

		}
d1536 1
a1536 1
                        // $avp(mos_A_label)="Aleg_label";
d1538 1
a1538 1
                    //    rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
d1541 2
@


1.533
log
@*** empty log message ***
@
text
@d1526 1
a1526 1
	if( $sht(dialog_track=>$dlg(callid))== 2){
@


1.532
log
@*** empty log message ***
@
text
@d1525 2
a1526 2
		   xlog("L_ERR"," $dlg(callid)_______\n");
	if( $sht(dialog_track=>$dlg(callid))=="2"){
@


1.531
log
@*** empty log message ***
@
text
@d833 1
a833 2
//	$avp(setid)=2;
//	route(NATMANAGE);
d1525 4
a1528 2
		if(issflagset(2) ){
		   xlog("L_ERR"," SET FLAG_______\n");
@


1.530
log
@*** empty log message ***
@
text
@d820 1
a820 1
	setbflag(2); 	
d1526 1
a1526 1
		if(isbflagset(2) ){
@


1.529
log
@*** empty log message ***
@
text
@d1526 4
a1529 2
	
	 if(is_method("INVITE") &&  t_check_trans() && isbflagset(2)  ){
@


1.528
log
@*** empty log message ***
@
text
@d825 1
a825 1
//	t_use_uac_headers();
@


1.527
log
@*** empty log message ***
@
text
@d862 1
@


1.526
log
@*** empty log message ***
@
text
@d1526 1
a1526 1
	 if(is_method("INVITE") &&  t_check_trans() && isbflagset(2);  ){
@


1.525
log
@*** empty log message ***
@
text
@d1526 1
a1526 1
	 if(is_method("INVITE") &&  t_check_trans() && ifbflagset(2);  ){
@


1.524
log
@*** empty log message ***
@
text
@d811 1
a811 1
    $uac_req(furi)="<"+$avp(from_uri)+">";   tag="+$avp(from_tag);
@


1.523
log
@*** empty log message ***
@
text
@d811 1
a811 1
    $uac_req(furi)="<"+$avp(from_uri)+">";   //tag="+$avp(from_tag);
d820 1
a820 1
	
d826 1
a826 1
//	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d832 1
a832 1
	 uac_req_send();
d1526 1
a1526 1
	 if(is_method("INVITE") &&  t_check_trans() ){
@


1.522
log
@*** empty log message ***
@
text
@d811 1
a811 1
    $uac_req(furi)="<"+$avp(from_uri)+">;tag="+$avp(from_tag);
d830 1
a830 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","UAC: 1\r\nVia: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d832 1
a832 1
//	 uac_req_send();
@


1.521
log
@*** empty log message ***
@
text
@d830 1
a830 1
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d1528 1
a1528 1
		route(REP);
@


1.520
log
@*** empty log message ***
@
text
@d1527 1
a1527 1
	 xlog("L_ERR"," INVTTE REPLY _______\n");
d1547 5
a1551 1
//	  t_on_reply("MANAGE_REPLY");
@


1.519
log
@*** empty log message ***
@
text
@d862 4
d1526 1
a1526 1
	 if(is_method("INVITE") &&  !t_check_trans() ){
d1530 1
a1530 1
	  if(status=~"[12][0-9][0-9]") {
d1533 1
a1533 1
//		xlog("L_INFO","status 200 ok  \n");
@


1.518
log
@*** empty log message ***
@
text
@d862 1
a862 1
//xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
d878 3
a880 3
	//	$var(ct)=$dlg(from_contact);
	//	$var(rport)=$(var(ct){uri.port});
		$dlg_var(via)=$hdr(Via); // +"="+$var(rport);
@


1.517
log
@*** empty log message ***
@
text
@d861 2
a862 2
	t_use_uac_headers();
xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
@


1.516
log
@*** empty log message ***
@
text
@d830 1
a830 1
     //   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.515
log
@*** empty log message ***
@
text
@d826 1
a826 1
	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.514
log
@*** empty log message ***
@
text
@d1543 1
a1543 1
	  t_on_reply("MANAGE_REPLY");
@


1.513
log
@*** empty log message ***
@
text
@d1522 1
a1522 1
	 if(is_method("INVITE") && && !t_check_trans()){
@


1.512
log
@*** empty log message ***
@
text
@d826 1
a826 1
//	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d832 1
a832 1
	 uac_req_send();
d855 1
a855 1
    uac_req_send();
d861 1
d864 1
a864 1
	remove_hf("From");
d866 1
a866 1
    xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
d1521 2
a1522 1
	 if(is_method("INVITE")){
@


1.511
log
@*** empty log message ***
@
text
@d863 1
@


1.510
log
@*** empty log message ***
@
text
@d825 1
a825 1
	t_use_uac_headers();
d861 2
a862 1
	remove_hf_value2("From.tag");
@


1.509
log
@*** empty log message ***
@
text
@d1520 1
a1520 1
		route(REQ);
@


1.508
log
@*** empty log message ***
@
text
@d826 1
a826 1
	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d832 1
a832 1
//	 uac_req_send();
d861 1
@


1.507
log
@*** empty log message ***
@
text
@d1519 1
a1519 1
		route(RELAY);
@


1.506
log
@*** empty log message ***
@
text
@d1519 1
a1519 1
		route(REP);
@


1.505
log
@*** empty log message ***
@
text
@d1537 1
@


1.504
log
@*** empty log message ***
@
text
@d1519 1
a1519 1
	t_on_reply("MANAGE_REPLY");
d1535 3
@


1.503
log
@*** empty log message ***
@
text
@d1519 1
@


1.502
log
@*** empty log message ***
@
text
@d825 1
a825 1
	t_use_uac_headers()；
@


1.501
log
@*** empty log message ***
@
text
@d820 1
d825 1
@


1.500
log
@*** empty log message ***
@
text
@d819 1
a828 1
	$uac_req(evroute)=1;
@


1.499
log
@*** empty log message ***
@
text
@d830 1
a830 1
	 uac_req_send();
@


1.498
log
@*** empty log message ***
@
text
@d823 1
a823 1
//	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d829 1
a829 1
	        xlog("L_ERR"," $uac_req(furi)\n");
@


1.497
log
@*** empty log message ***
@
text
@d828 2
a829 1
//	$uac_req(evroute)=1;
@


1.496
log
@*** empty log message ***
@
text
@d828 1
a828 1
	$uac_req(evroute)=1;
@


1.495
log
@*** empty log message ***
@
text
@d858 1
a858 1
	  rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
@


1.494
log
@*** empty log message ***
@
text
@d824 4
a827 5
/*    $uac_req(ruri)=$avp(from_contact);
    $uac_req(turi)="<"+$avp(from_uri)+">;tag="+$avp(from_tag);
    $uac_req(furi)="<"+$avp(to_uri)+">;tag="+$avp(to_tag);
        t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
*/ 
@


1.493
log
@*** empty log message ***
@
text
@d823 1
a823 1
	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $avp(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
d830 1
@


1.492
log
@*** empty log message ***
@
text
@d835 1
a835 1
    xlog("received reply code is: $uac_req(evcode)\n");
@


1.491
log
@*** empty log message ***
@
text
@d824 1
a824 1
    $uac_req(ruri)=$avp(from_contact);
d828 2
d833 3
@


1.490
log
@*** empty log message ***
@
text
@a669 1
		 xlog("L_INFO"," INVITE REQUSET \n");
d824 4
@


1.489
log
@*** empty log message ***
@
text
@d670 1
@


1.488
log
@*** empty log message ***
@
text
@d1505 3
@


1.487
log
@*** empty log message ***
@
text
@d1523 1
a1523 1
		
@


1.486
log
@*** empty log message ***
@
text
@d1510 1
a1510 1
                      //  $avp(mos_B_label)="Bleg_label";
@


1.485
log
@*** empty log message ***
@
text
@d1508 1
a1508 1
		xlog("L_INFO","status 200 ok  \n");
@


1.484
log
@*** empty log message ***
@
text
@a852 1
	    $avp(setid)=2;
a853 1
	  rtpengine_answer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Bleg_label");
d1508 1
a1508 1
		xlog("L_INFO","status <299 \n");
@


1.483
log
@*** empty log message ***
@
text
@d1515 1
a1521 1

@


1.482
log
@*** empty log message ***
@
text
@d1507 9
@


1.481
log
@*** empty log message ***
@
text
@d848 1
d851 5
@


1.480
log
@*** empty log message ***
@
text
@d817 1
a817 1
    $uac_req(body)="";//$avp(sdp);
a822 1
	   rtpengine_offer("generate-RTCP=on replace-origin replace-session-connection ICE=remove label=Aleg_label");
d847 2
a848 1
/*event_route [tm:local-request] {
d850 1
a850 1
}*/
@


1.479
log
@*** empty log message ***
@
text
@d817 1
a817 1
    $uac_req(body)=$avp(sdp);
d823 1
@


1.478
log
@*** empty log message ***
@
text
@d799 1
a799 1
	$avp(via)= $(dbr(ra=>[0,7]));
@


1.477
log
@*** empty log message ***
@
text
@d785 16
a800 16
       	   xlog("dlg(callid) = $(dbr(ra=>[0,3]))\n");
	$avp(callid) = $(dbr(ra=>[0,3]));
	   xlog("dlg(from_uri) = $(dbr(ra=>[0,4]))\n");
	$avp(from_uri) = $(dbr(ra=>[0,4]));
	 xlog("dlg(from_contact) =$(dbr(ra=>[0,12]))\n");
	$avp(from_contact) =$(dbr(ra=>[0,12])); 
	  xlog("dlg(from_tag) = $(dbr(ra=>[0,5]))\n");
	$avp(from_tag) = $(dbr(ra=>[0,5]));
	   xlog("dlg(to_uri) = $(dbr(ra=>[0,6]))\n");
	$avp(to_uri) = $(dbr(ra=>[0,6]));
	   xlog("dlg(to_contact) =$(dbr(ra=>[0,13]))\n");
	$avp(to_contact) =$(dbr(ra=>[0,13]));
	   xlog("dlg(to_tag) = $(dbr(ra=>[0,7]))\n");
	$avp(to_tag) = $(dbr(ra=>[0,7]));
	$avp(via)= $(dbr(ra=>[0,28]));
	 $avp(via)= $(dbr(ra=>[0,23]));
@


1.476
log
@*** empty log message ***
@
text
@d758 1
d764 1
a764 1
			WHERE callid='$shtitkey(i1)'", "ra");
@


1.475
log
@*** empty log message ***
@
text
@d753 2
a754 2
				MAX(CASE WHEN v.key_name = 'sdp' THEN v.key_value END) AS sdp,
				MAX(CASE WHEN v.key_name = 'via' THEN v.key_value END) AS via
@


1.474
log
@*** empty log message ***
@
text
@d748 16
a763 2
        sql_query("cb", "select *  MAX(CASE WHEN v.key_name = 'sdp' THEN v.key_value END) AS sdp,
    MAX(CASE WHEN v.key_name = 'via' THEN v.key_value END) AS via  from dialog d LEFT JOIN dialog_vars v ON d.hash_id = v.hash_id WHERE callid='$shtitkey(i1)'", "ra");
@


1.473
log
@*** empty log message ***
@
text
@d748 2
a749 1
        sql_query("cb", "select * from dialog d LEFT JOIN dialog_vars v ON d.hash_id = v.hash_id WHERE callid='$shtitkey(i1)'", "ra");
d862 1
a862 1
				$dlg(xdata)=$avp(body);
@


1.472
log
@*** empty log message ***
@
text
@d784 1
d801 1
a801 1
   // $uac_req(body)=$dlg_var(sdp);
d861 1
a861 1
				$dlg_var(sdp)=$avp(body);
@


1.471
log
@*** empty log message ***
@
text
@d859 2
a860 2
			  //xlog("L_ERR","------------BODY: $avp(body)\n");
			//	$dlg_var(sdp)=$avp(body);
@


1.470
log
@*** empty log message ***
@
text
@d783 1
a783 1
	$avp(via)= $(dbr(ra=>[0,28]))
@


1.469
log
@*** empty log message ***
@
text
@d770 1
a770 1
	$dlg(callid) = $(dbr(ra=>[0,3]));
d772 1
a772 1
	$dlg(from_uri) = $(dbr(ra=>[0,4]));
d774 1
a774 1
	$dlg(from_contact) =$(dbr(ra=>[0,12])); 
d776 1
a776 1
	$dlg(from_tag) = $(dbr(ra=>[0,5]));
d778 1
a778 1
	$dlg(to_uri) = $(dbr(ra=>[0,6]));
d780 1
a780 1
	$dlg(to_contact) =$(dbr(ra=>[0,13]));
d782 2
a783 2
	$dlg(to_tag) = $(dbr(ra=>[0,7]));
	$dlg_var(via)= $(dbr(ra=>[0,28]))
d793 3
a795 3
    $uac_req(ruri)=$dlg(to_contact);
    $uac_req(furi)="<"+$dlg(from_uri)+">;tag="+$dlg(from_tag);
    $uac_req(turi)="<"+$dlg(to_uri)+">;tag="+$dlg(to_tag);
d797 2
a798 2
   $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
    $uac_req(callid)=$dlg(callid);
d806 1
a806 1
	   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.468
log
@*** empty log message ***
@
text
@d770 1
d772 1
d774 3
a776 1
	   xlog("dlg(from_tag) = $(dbr(ra=>[0,5]))\n");
d778 1
d780 1
d782 3
a784 1
}
d800 1
a800 1
    $uac_req(body)=$dlg_var(sdp);
@


1.467
log
@*** empty log message ***
@
text
@d748 1
a748 1
        sql_query("cb", "select * from dialog WHERE callid='$shtitkey(i1)'", "ra");
d771 1
d774 1
@


1.466
log
@*** empty log message ***
@
text
@a910 4
        if (status=~"[2][0-9][0-9]") {
           		  $sht(dialog_track=>$dlg(callid)) = 1;
			xlog("L_INFO", "儲存成功呼叫 $ci 到 hash 表\n");
        }
@


1.465
log
@*** empty log message ***
@
text
@d911 1
a911 1
        if (status=~"2[0-9][0-9]") {
@


1.464
log
@*** empty log message ***
@
text
@d911 2
a912 2
        	if (status=~"2[0-9][0-9]") {
            		  $sht(dialog_track=>$dlg(callid)) = 1;
d914 1
a914 1
        	}
d1489 2
@


1.463
log
@*** empty log message ***
@
text
@a684 4
	   if (status=~"2[0-9][0-9]") {
                          $sht(dialog_track=>$dlg(callid)) = 1;
                        xlog("L_INFO", "儲存成功呼叫 $ci 到 hash 表\n");
                }
a910 2
//	 if (has_totag()){
		//  xlog("L_INFO", ">>>Has To Tag\n");
a914 1
//	}
@


1.462
log
@*** empty log message ***
@
text
@d685 4
a688 1

@


1.461
log
@*** empty log message ***
@
text
@d912 2
a913 2
	 if (has_totag()){
		  xlog("L_INFO", ">>>Has To Tag\n");
d918 1
a918 1
	}
d1497 1
a1497 1
		xlog("L_INFO","status <299");
@


1.460
log
@*** empty log message ***
@
text
@d913 1
d918 1
a918 1
}
@


1.459
log
@*** empty log message ***
@
text
@d912 1
d917 1
a917 1

@


1.458
log
@*** empty log message ***
@
text
@a745 1
		dlg_db_load_callid("$shtitkey(i1)");
a778 1
	//dlg_db_load_callid("$ci");
@


1.457
log
@*** empty log message ***
@
text
@d771 5
@


1.456
log
@*** empty log message ***
@
text
@d748 1
a748 1
		 xlog("L_ERR","send REINVITE $ci~~~~~~~~~~~~\n");
@


1.455
log
@*** empty log message ***
@
text
@d848 1
a848 1
				$dlg_var(sdp)=$avp(body);
@


1.454
log
@*** empty log message ***
@
text
@a908 1
	if (has_totag()) {
d913 1
a913 1
	}
@


1.453
log
@*** empty log message ***
@
text
@d746 1
a746 1
//		dlg_db_load_callid("$shtitkey(i1)");
d777 2
a778 2
	 xlog("L_ERR","$dlg_var(sdp)\n");
	 xlog("L_ERR","$dlg_var(via)\n");
@


1.452
log
@*** empty log message ***
@
text
@a677 1
		$sht(dialog_track=>$dlg(callid)) = 1;
d908 6
@


1.451
log
@*** empty log message ***
@
text
@d751 1
a751 1
        sql_query("cb", "select * from subscriber where callid='$shtitkey(i1)'", "ra");
@


1.450
log
@*** empty log message ***
@
text
@d747 1
a747 1
		dlg_db_load_callid("$shtitkey(i1)");
d751 1
a751 3
    }
    sht_iterator_end("i1"); 
        sql_query("cb", "select * from subscriber where username='john'", "ra");
d767 1
a767 1
            xlog("[$var(i),$var(j)] = $(dbr(ra=>[$var(i),$var(j)]){s.int})\n");
d774 2
@


1.449
log
@*** empty log message ***
@
text
@d769 1
a769 1
            xlog("[$var(i),$var(j)] = $dbr(ra=>[$var(i),$var(j)])\n");
@


1.448
log
@add sql route
@
text
@d753 1
a753 1
        sql_query("cb", "select * from location", "ra");
@


1.447
log
@add sql_query
@
text
@d755 20
@


1.446
log
@*** empty log message ***
@
text
@d565 2
a566 2
##modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
##modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
@


1.445
log
@*** empty log message ***
@
text
@d753 4
a756 1
        //dlg_db_load_callid("$ci");
@


1.444
log
@*** empty log message ***
@
text
@d822 1
a822 1
			 xlog("L_ERR","This is SDP Body: $avp(body)\n");
d825 1
a825 1
			  xlog("L_ERR","------------BODY: $avp(body)\n");
d1436 1
a1436 1
	xlog("L_ERR","$mbu\n");
@


1.443
log
@*** empty log message ***
@
text
@d605 1
d617 6
a622 1
		}
@


1.442
log
@*** empty log message ***
@
text
@d603 1
a603 2
		exec_avp("/etc/kamailio/select_usr.sh $fU counter", "$avp(counter)");
		$avp(counter)=$(avp(counter){s.int}) % 3;	
@


1.441
log
@*** empty log message ***
@
text
@d604 1
a604 1
		$avp(counter)=$avp(counter){s.int} % 3;	
@


1.440
log
@*** empty log message ***
@
text
@d604 1
@


1.439
log
@*** empty log message ***
@
text
@d957 1
a957 1
				   xlog("L_INFO", " $avp(mos_avg) and $avp(mos_avg2)\n");
@


1.438
log
@*** empty log message ***
@
text
@d935 1
@


1.437
log
@*** empty log message ***
@
text
@d937 1
a937 3
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(rtp_id) $avp(username) ");
        	                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_avg){s.int} $avp(username) ");
	                                exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_rtt){s.int} $avp(username) ");
d963 1
d971 1
@


1.436
log
@*** empty log message ***
@
text
@d958 1
@


1.435
log
@*** empty log message ***
@
text
@d938 2
a939 2
        	                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_avg) $avp(username) ");
	                                exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_rtt) $avp(username) ");
@


1.434
log
@*** empty log message ***
@
text
@d989 1
a989 1
			exec_avp("/etc/kamailio/select_usr.sh $fU counter", "$avp(counter2)");
d991 1
a991 1
				exec_avp("/etc/kamailio/update_usr.sh  counter 1 $fU ");
d994 1
a994 1
				 exec_avp("/etc/kamailio/update_usr.sh  counter $avp(counter2) $fU ");	
@


1.433
log
@*** empty log message ***
@
text
@d922 2
a923 2
			exec_avp("/etc/kamailio/select_usr.sh  $dlg(from_uri)  rtp_id","$avp(rtp_id)" );
			exec_avp("/etc/kamailio/select_usr.sh  $dlg(from_uri)  rtp_id2","$avp(rtp_id2)" );
d928 3
a930 3
				exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $dlg(from_uri) ");
                	        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $dlg(from_uri) ");
            	             	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
d933 2
a934 2
				 exec_avp("/etc/kamailio/select_usr.sh  $dlg(from_uri)  mos_avg_pv","$avp(mos_avg)" );
				 exec_avp("/etc/kamailio/select_usr.sh  $dlg(from_uri)  mos_average_roundtrip_pv","$avp(mos_rtt)" );	
d937 6
a942 6
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(rtp_id) $dlg(from_uri) ");
        	                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_avg) $dlg(from_uri) ");
	                                exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_rtt) $dlg(from_uri) ");
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $dlg(from_uri) ");
                                	exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $dlg(from_uri) ");
                                	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $dlg(from_uri) ");	
d944 3
a946 3
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(setid) $dlg(from_uri) ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $dlg(from_uri) ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
d950 2
a951 2
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $dlg(from_uri) ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
d956 2
a957 2
				 exec_avp("/etc/kamailio/select_usr.sh  $dlg(from_uri)  mos_avg_pv","$avp(mos_avg)" );
				exec_avp("/etc/kamailio/select_usr.sh  $dlg(from_uri)  mos_avg_pv2","$avp(mos_avg2)" );
d959 2
a960 2
						  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $dlg(from_uri) ");
                                                  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
d966 2
a967 2
						  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $dlg(from_uri) ");
                                                  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
d974 3
a976 3
							     exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $dlg(from_uri) ");
							     exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $dlg(from_uri) ");
                                                  	     exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
d978 3
a980 3
							exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(setid) $dlg(from_uri) "); 
							exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $dlg(from_uri) ");
                                                  	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $dlg(from_uri) ");
@


1.432
log
@*** empty log message ***
@
text
@d919 2
@


1.431
log
@*** empty log message ***
@
text
@d920 2
a921 2
			exec_avp("/etc/kamailio/select_usr.sh  $fU  rtp_id","$avp(rtp_id)" );
			exec_avp("/etc/kamailio/select_usr.sh  $fU  rtp_id2","$avp(rtp_id2)" );
d926 3
a928 3
				exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $fU ");
                	        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $fU ");
            	             	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $fU ");
d931 2
a932 2
				 exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_avg_pv","$avp(mos_avg)" );
				 exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_average_roundtrip_pv","$avp(mos_rtt)" );	
d935 6
a940 6
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(rtp_id) $fU ");
        	                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_avg) $fU ");
	                                exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_rtt) $fU ");
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $fU ");
                                	exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $fU ");
                                	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $fU ");	
d942 3
a944 3
					exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(setid) $fU ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $fU ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $fU ");
d948 2
a949 2
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $fU ");
                                        exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $fU ");
d954 2
a955 2
				 exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_avg_pv","$avp(mos_avg)" );
				exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_avg_pv2","$avp(mos_avg2)" );
d957 2
a958 2
						  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $fU ");
                                                  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $fU ");
d964 2
a965 2
						  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $fU ");
                                                  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $fU ");
d972 3
a974 3
							     exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $fU ");
							     exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average_now) $fU ");
                                                  	     exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip_now) $fU ");
d976 3
a978 3
							exec_avp("/etc/kamailio/update_usr.sh  rtp_id2 $avp(setid) $fU "); 
							exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv2 $avp(mos_average_now) $fU ");
                                                  	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv2 $avp(mos_average_roundtrip_now) $fU ");
@


1.430
log
@*** empty log message ***
@
text
@d605 1
a605 1
		if($avp(counter)== $null){
d611 1
a611 1
		else if($avp(counter) < 3 && $avp(counter)!= $null){
@


1.429
log
@*** empty log message ***
@
text
@d420 1
a420 1
##modparam("usrloc", "db_insert_update", 1)
@


1.428
log
@*** empty log message ***
@
text
@d905 1
d907 10
@


1.427
log
@*** empty log message ***
@
text
@d910 1
a910 1
			 exec_avp("/etc/kamailio/select_usr.sh  $fU  rtp_id2","$avp(rtp_id2)" );
d912 1
d914 1
a914 1

d919 1
a919 1

d942 1
a942 1

@


1.426
log
@*** empty log message ***
@
text
@d949 1
d956 1
d968 1
@


1.425
log
@add mos1 and mos2 route
@
text
@d420 1
a420 1
modparam(“usrloc”, “db_insert_update”, 1)
@


1.424
log
@*** empty log message ***
@
text
@d913 1
d918 1
d920 1
a920 2
				 exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_average_roundtrip_pv","$avp(mos_rtt)" );
				
d941 1
@


1.423
log
@*** empty log message ***
@
text
@d910 3
a912 1
			if($avp(rtp_id)=="NULL" && $avp(mos_average)!=$null){
d914 5
a918 5
                	        exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average) $fU ");
            	             	exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip) $fU ");
			}else{
				exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_avg_pv","$avp(mos_avg)" );
				exec_avp("/etc/kamailio/select_usr.sh  $fU  mos_average_roundtrip_pv","$avp(mos_rtt)" );
d920 13
a932 3
				if($avp(mos_avg) <= $avp(mos_average)){
					
					if($avp(mos_rtt)>$avp(mos_average_roundtrip)){
d934 3
a936 4
						  exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $fU ");
        			                  exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average) $fU ");
	                        		  exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip) $fU ");
					}
d939 29
d977 1
a977 1
			
@


1.422
log
@*** empty log message ***
@
text
@d420 1
@


1.421
log
@*** empty log message ***
@
text
@d604 1
a604 1
		if($avp(counter)=="NULL"){
d610 1
a610 1
		else if($avp(counter) < 3 && $avp(counter)!="NULL"){
@


1.420
log
@*** empty log message ***
@
text
@d710 1
a710 1
			rtpengine_delete();
@


1.419
log
@*** empty log message ***
@
text
@d981 1
a981 1
			xlog("L_INFO", "mos_min_jitter_A_pv" $avp(mos_min_jitter_A) \n "); 
d989 1
a989 1
                        xlog("L_INFO", "mos_min_jitter_B_pv" $avp(mos_min_jitter_B) \n "); 
@


1.418
log
@*** empty log message ***
@
text
@d480 3
d489 3
d979 3
a981 2


d987 3
@


1.417
log
@*** empty log message ***
@
text
@d474 1
d480 6
@


1.416
log
@*** empty log message ***
@
text
@d474 5
@


1.415
log
@*** empty log message ***
@
text
@d686 3
d692 1
@


1.414
log
@*** empty log message ***
@
text
@d689 8
@


1.413
log
@*** empty log message ***
@
text
@d686 3
@


1.412
log
@*** empty log message ***
@
text
@d686 12
d699 1
@


1.411
log
@*** empty log message ***
@
text
@d1340 1
a1340 1

d1343 2
@


1.410
log
@*** empty log message ***
@
text
@d649 2
@


1.409
log
@*** empty log message ***
@
text
@d654 1
a654 1
        		rtpengine_offer("replace-origin replace-session-connection ICE=remove label=Aleg_label");
d1341 1
a1341 1
        		rtpengine_answer("replace-origin replace-session-connection ICE=remove label=Bleg_label");
@


1.408
log
@*** empty log message ***
@
text
@d1338 1
a1338 3
//	if (has_body("application/sdp")){
       // rtpengine_answer("replace-origin replace-session-connection ICE=remove label=Bleg_label");
	//}
d1340 3
d1344 1
a1344 1
		route(NATMANAGE);
@


1.407
log
@*** empty log message ***
@
text
@d1338 3
a1340 3
	if (has_body("application/sdp")){
        rtpengine_answer("replace-origin replace-session-connection ICE=remove label=Bleg_label");
	}
d1343 1
a1343 1
	//	route(NATMANAGE);
@


1.406
log
@manage reply
@
text
@d1343 1
a1343 1
		route(NATMANAGE);
@


1.405
log
@*** empty log message ***
@
text
@d1341 2
a1342 1
	if(status!=~"[12][0-9][0-9]") {
@


1.404
log
@*** empty log message ***
@
text
@d1341 1
a1341 1
	if(status=~"[12][0-9][0-9]") {
@


1.403
log
@*** empty log message ***
@
text
@d1315 1
a1315 1
	route(NATMANAGE);
@


1.402
log
@*** empty log message ***
@
text
@d652 5
a656 1
		//$dlg_var(via)=$hdr(Via);
d1338 3
@


1.401
log
@aleg_label bleg_lablel
@
text
@d843 2
a844 2
			$avp("mos_A_label")="Aleg_label";
			$avp("mos_B_label")="Bleg_label";
d922 1
a922 1
		# xlog( "mos_A_label_pv $avp(mos_A_label) \n ");
d929 1
a929 1
			# xlog( "mos_B_label_pv $avp(mos_B_label) \n ");
a1109 3
	if (client_nat_test("7")) {
    		  xlog("L_INFO","NAT1111111111___\n");
	}
@


1.400
log
@rtpengine_query
@
text
@d843 2
d921 6
d928 6
d1144 1
a1144 1
		rtpengine_manage("generate-RTCP=on  SIP-source-address replace-origin replace-session-connection label=Aleg_label label=Bleg_label");	
d1154 1
a1154 1
		rtpengine_manage("generate-RTCP=on replace-origin replace-session-connection  label=Aleg_label label=Bleg_label");
d1162 1
a1162 1
	//	rtpengine_manage("generate-RTCP=on replace-origin replace-session-connectioni  label=Aleg_label label=Bleg_label");
@


1.399
log
@*** empty log message ***
@
text
@d843 1
a843 1
		//	rtpengine_query();
@


1.398
log
@*** empty log message ***
@
text
@d845 3
a847 3
			if(rtpengine_query_v("jp", "$var(rdata)")) {
 				   xinfo("rtpengine query response: $var(rdata)\n");
			}	
@


1.397
log
@*** empty log message ***
@
text
@d845 1
a845 1
			if(rtpengine_query_v("j", "$var(rdata)")) {
@


1.396
log
@*** empty log message ***
@
text
@d845 3
a847 1
			
@


1.395
log
@*** empty log message ***
@
text
@d290 1
@


1.394
log
@*** empty log message ***
@
text
@d1093 3
@


1.393
log
@*** empty log message ***
@
text
@d1093 1
a1093 1
	if (nat_uac_test("23")) {
@


1.392
log
@*** empty log message ***
@
text
@d1093 1
a1093 1
	if (nat_uac_test("19")) {
@


1.391
log
@*** empty log message ***
@
text
@d871 1
a871 1
			xlog("L_INFO","FROM URI .... $dlg(from_uri)");
@


1.390
log
@*** empty log message ***
@
text
@d1176 1
a1176 1
xlog("L_WARN","$hdr(Record-Route)\n");	
@


1.389
log
@*** empty log message ***
@
text
@d1176 1
a1176 1
//xlog("L_WARN","$hdr(Record-Route)\n");	
@


1.388
log
@*** empty log message ***
@
text
@d1154 1
@


1.387
log
@*** empty log message ***
@
text
@d545 2
a546 2
modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
d576 1
a576 1
	if(dlg_set_timeout("3600"))
d579 1
a579 1
        }
d1094 1
@


1.386
log
@*** empty log message ***
@
text
@d549 1
a549 1
modparam("sqlops","sqlcon","cb=>DBURL")
@


1.385
log
@*** empty log message ***
@
text
@d282 1
a282 1

@


1.384
log
@*** empty log message ***
@
text
@d548 3
d688 1
@


1.383
log
@*** empty log message ***
@
text
@d686 1
a688 1
if (isflagset(10)) {
a710 2
	 resetflag(10); 
	}
@


1.382
log
@*** empty log message ***
@
text
@d685 1
@


1.381
log
@*** empty log message ***
@
text
@d684 1
@


1.380
log
@*** empty log message ***
@
text
@d675 2
a676 3
event_route[dialog:start]{
	setflag(10);
	xlog("L_INFO", " 對話逾時，準備延遲處理...\n");
@


1.379
log
@*** empty log message ***
@
text
@d681 1
a681 1
	sht_iterator_start("it1", "dialog_track");
d683 2
a684 3
      while($sht(dialog_track=>it1)) {
        //$var(callid) = $sht(dialog_track=>key);
	  xlog("L_INFO", "活躍通話: Call-ID:$sht(key) \n");
d686 2
a687 1
 if (isflagset(10)) {
@


1.378
log
@*** empty log message ***
@
text
@d647 1
a647 1
		$sht(dialog_track=>$dlg(callid)) = $dlg(callid);
d681 1
d683 4
a686 4
 /*   while($sht(dialog_track=>iterator)) {
        $var(callid) = $sht(dialog_track=>key);
	  xlog("L_INFO", "活躍通話: Call-ID=[$var(callid)] \n");
    }*/
@


1.377
log
@*** empty log message ***
@
text
@d681 1
d686 1
a686 1
	if (isflagset(10)) {
@


1.376
log
@*** empty log message ***
@
text
@d676 1
a676 1
	setflag(100);
d685 1
a685 1
	if (isflagset(100)) {
d708 1
a708 1
	 resetflag(100); 
@


1.375
log
@*** empty log message ***
@
text
@d573 1
a573 1
	if(dlg_set_timeout("20"))
@


1.374
log
@*** empty log message ***
@
text
@d545 2
a546 2
##modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
##modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
d675 5
a679 1
event_route[dialog:expiredkfseojfos]{
d685 1
d702 2
a703 2
   xlog("L_ERR"," $uac_req(furi)\n");
 xlog("L_ERR"," $uac_req(turi)\n");
a704 1
if($dlg(to_contact)!=$null){
a705 1
}
d708 2
@


1.373
log
@*** empty log message ***
@
text
@d675 1
a675 1
event_route[dialog:expired]{
@


1.372
log
@*** empty log message ***
@
text
@d541 1
a541 1
modparam("dialog", "default_timeout", 15)
d573 1
a573 1
	/*if(dlg_set_timeout("10"))
d576 1
a576 1
        }*/
@


1.371
log
@*** empty log message ***
@
text
@d541 1
a541 1
modparam("dialog", "default_timeout", 3600)
@


1.370
log
@*** empty log message ***
@
text
@d675 1
a675 1
route[SendINVITE]{
@


1.369
log
@*** empty log message ***
@
text
@d861 1
a861 1
			xlog("L_INFO","FROM URI .... $dlg(from)_uri");
@


1.368
log
@*** empty log message ***
@
text
@d861 1
@


1.367
log
@*** empty log message ***
@
text
@d545 2
a546 2
modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
d586 1
a586 1
                	xlog("L_INFO", "Your sender username is   $ru and $avp(counter)\n");
d592 1
a592 1
                        xlog("L_INFO", "Your sender username is   $fU and $avp(counter)\n");
d599 1
a599 1
                        xlog("L_INFO", "Your sender username is   $fU and $avp(counter)\n");
d605 2
a606 2
                xlog("L_INFO", "Your set_id is   $avp(setid)\n");
        	 xlog("L_INFO", "Your sender username is   $fU and $avp(counter)\n");
@


1.366
log
@*** empty log message ***
@
text
@d582 1
a582 1
		if($avp(counter)== $null){
@


1.365
log
@*** empty log message ***
@
text
@d579 1
@


1.364
log
@*** empty log message ***
@
text
@d581 1
a581 1
		if($avp(counter)= $null){
@


1.363
log
@*** empty log message ***
@
text
@d675 1
a675 1
sht_print();
@


1.362
log
@*** empty log message ***
@
text
@d675 1
a675 1
sht_print()；
@


1.361
log
@*** empty log message ***
@
text
@d675 2
a676 3
	$sht(dialog_track=>start);

    while($sht(dialog_track=>iterator)) {
d679 1
a679 1
    }
@


1.360
log
@*** empty log message ***
@
text
@d547 1
d646 1
d675 5
a679 6
if(has_totag()) {
    if(!is_known_dlg()) {
        dlg_db_load_callid("$ci");
	    if(!is_known_dlg()) {
            xlog("no dialog found with callid: $ci\n");
        }
d681 1
a681 1
}
@


1.359
log
@*** empty log message ***
@
text
@d289 1
d547 1
a547 1

@


1.358
log
@*** empty log message ***
@
text
@d672 9
a680 1
	 xlog("L_ERR","send REINVITE~~~~~~~~~~~~\n");
@


1.357
log
@*** empty log message ***
@
text
@d671 1
a671 1
event_route [SendINVITE]{
@


1.356
log
@*** empty log message ***
@
text
@d671 1
a671 1
route[SendINVITE]{
@


1.355
log
@*** empty log message ***
@
text
@d540 1
a540 1
modparam("dialog", "default_timeout", 10)
d544 2
a545 2
##modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
##modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
d671 1
a671 1
event_route[dialog:end]{
d690 3
a692 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.354
log
@*** empty log message ***
@
text
@d540 1
a540 1
modparam("dialog", "default_timeout", 3600)
d571 1
a571 1
	if(dlg_set_timeout("10"))
d574 1
a574 1
        }
@


1.353
log
@*** empty log message ***
@
text
@d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", ""$uac_req(body));
@


1.352
log
@*** empty log message ***
@
text
@d690 3
a692 3
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
	$avp(setid)=2;
	route(NATMANAGE);
d741 1
@


1.351
log
@*** empty log message ***
@
text
@d692 1
@


1.350
log
@*** empty log message ***
@
text
@d691 1
@


1.349
log
@*** empty log message ***
@
text
@d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.348
log
@*** empty log message ***
@
text
@d681 1
a681 1
   $uac_req(hdrs)=$uac_req(hdrs)+"Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.347
log
@*** empty log message ***
@
text
@d724 1
a724 1
		$dlg_var(via)=$hdr(Via) // +"="+$var(rport);
@


1.346
log
@*** empty log message ***
@
text
@d724 1
a724 1
	//	$dlg_var(via)=$hdr(Via)+"="+$var(rport);
@


1.345
log
@*** empty log message ***
@
text
@d722 3
a724 3
		$var(ct)=$dlg(from_contact);
		$var(rport)=$(var(ct){uri.port});
		$dlg_var(via)=$hdr(Via)+"="+$var(rport);
@


1.344
log
@*** empty log message ***
@
text
@d674 1
a674 1
	 xlog("L_ERR","$dlg(via)\n");
@


1.343
log
@*** empty log message ***
@
text
@d674 1
a674 1
//	 xlog("L_ERR","$dlg(to_rs)\n");
d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.342
log
@*** empty log message ***
@
text
@d672 1
a672 1
	 xlog("L_ERR","send BYE ~~~~~~~~~~~~\n");
@


1.341
log
@*** empty log message ***
@
text
@d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.340
log
@*** empty log message ***
@
text
@d721 1
a721 1
		if(!t_is_set("branch_route")) { 	t_on_branch("MANAGE_BRANCH");    xlog("L_ERR","------------MBU: $var(mbu)\n"); }
a730 1
	//	     xlog("L_ERR","------------MBU: $var(mbu)\n");
d735 1
a735 1
		  xlog("L_ERR","------------MBU: $shv(test)\n");
d743 1
a743 1
		   xlog("L_ERR","------------MBU:\n");	
@


1.339
log
@*** empty log message ***
@
text
@d1095 1
d1100 1
a1100 1
	xlog("L_INFO","SDP2-1: $rb \n");
@


1.338
log
@*** empty log message ***
@
text
@d1264 2
a1265 2
	$dlg_var(via)=$hdr(Via);
  	  xlog("L_INFO","$hdr(Via)\n");
d1271 1
a1271 1
	 if(is_method("INVITE")) {
@


1.337
log
@*** empty log message ***
@
text
@d579 1
a579 1
		if($avp(counter)=="NULL"){
d1097 1
a1097 2
		rtpengine_manage("generate-RTCP=on  SIP-source-address replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
	
@


1.336
log
@*** empty log message ***
@
text
@d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.335
log
@*** empty log message ***
@
text
@d571 1
a571 1
/*	if(dlg_set_timeout("10"))
d574 1
a574 1
        }*/
@


1.334
log
@*** empty log message ***
@
text
@d686 1
a686 1
    //uac_req_send(); //To: $uac_req(turi)\r\n
d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","Via: $dlg_var(via)\r\nTo: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.333
log
@*** empty log message ***
@
text
@d680 1
a680 1
   // $uac_req(hdrs)="Via: "+$dlg_var(via);
d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "$uac_req(body)");
@


1.332
log
@*** empty log message ***
@
text
@d722 1
a722 1
		$var(ct)="sip:john@@125.224.153.86:65140;transport=UDP";
@


1.331
log
@*** empty log message ***
@
text
@d725 1
a725 1
		xlog("L_ERR","$hdr(Via)------$var(rport)\n");
@


1.330
log
@*** empty log message ***
@
text
@d722 2
a723 1
		$var(rport)=$(ct{uri.port});
@


1.329
log
@*** empty log message ***
@
text
@d722 1
a722 1
		$var(rport)=$(ct.{uri.port});
@


1.328
log
@*** empty log message ***
@
text
@d722 3
a724 2
//		$dlg_var(via)=$hdr(Via)+"="+$sp;
//		xlog("L_ERR","$hdr(Via)------$sp \n $rb\n");
@


1.327
log
@*** empty log message ***
@
text
@d742 1
a742 1
		   xlog("L_ERR","------------MBU:$via(rport)\n");	
@


1.326
log
@*** empty log message ***
@
text
@d742 1
a742 1
		  // xlog("L_ERR","------------MBU:$mbu\n");	
@


1.325
log
@*** empty log message ***
@
text
@d1266 1
a1266 1
	xlog("L_ERR","$rb\n");
@


1.324
log
@*** empty log message ***
@
text
@d1263 2
a1264 2
//	$dlg_var(via)=$hdr(Via);
  //      xlog("L_INFO","$hdr(Via)\n");
@


1.323
log
@*** empty log message ***
@
text
@d571 1
a571 1
	if(dlg_set_timeout("10"))
d574 1
a574 1
        }
@


1.322
log
@*** empty log message ***
@
text
@d740 1
a740 1
				$dlg_var(sdp)=avp(body);
@


1.321
log
@*** empty log message ***
@
text
@d690 1
a690 1
   //t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
d740 1
@


1.320
log
@*** empty log message ***
@
text
@d738 1
a738 1
				$avp(body)=$(avp(body){re.subst,/|/\r\n/g});
@


1.319
log
@*** empty log message ***
@
text
@d738 2
a739 1
		//	  xlog("L_ERR","------------MBU: $var(mbu)\n");
@


1.318
log
@*** empty log message ***
@
text
@d734 2
a735 2
	//		  xlog("L_ERR","------------MBU: $var(mbu)\n");
		if($var(mbu) !="0"){
d1270 1
a1270 1
		 $var(mbu)=$mbu;
@


1.317
log
@*** empty log message ***
@
text
@d1265 1
a1265 1
//	$var(mbu)=$mbu;
d1270 1
a1270 1
		 $var(mbu)="1";
@


1.316
log
@*** empty log message ***
@
text
@d721 1
a721 1
		if(!t_is_set("branch_route")) { 	t_on_branch("MANAGE_BRANCH"); }
d729 1
a729 1
		     xlog("L_ERR","------------MBU: $var(mbu)\n");
@


1.315
log
@*** empty log message ***
@
text
@d729 1
d731 1
d734 1
a734 1
			  xlog("L_ERR","------------MBU: $var(mbu)\n");
@


1.314
log
@*** empty log message ***
@
text
@d1269 1
a1269 1
		xlog("L_ERR"," After  CMD  $(var(mbu)\n");
@


1.313
log
@*** empty log message ***
@
text
@d1268 2
a1269 1
		 $var(mbu)=1;
@


1.312
log
@*** empty log message ***
@
text
@d732 1
@


1.311
log
@*** empty log message ***
@
text
@d732 3
a734 3
//		if($var(mbu) !="0"){
    	  	//	exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
//			 xlog("L_ERR","This is SDP Body: $avp(body)\n");
d736 1
a736 1
//		}
d1265 4
a1268 3
//	 if(is_method("INVITE")) {
//		exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");	
//	}
@


1.310
log
@*** empty log message ***
@
text
@d737 1
a737 1
		   xlog("L_ERR","------------MBU:$mbu\n");	
@


1.309
log
@*** empty log message ***
@
text
@d1261 1
a1261 1
//	xlog("L_ERR","$mbu\n");
@


1.308
log
@*** empty log message ***
@
text
@d1265 3
a1267 3
	 if(is_method("INVITE")) {
		exec_cmd("echo '$mbu' > /etc/kamailio/sip_message.txt");	
	}
@


1.307
log
@*** empty log message ***
@
text
@d1262 1
a1262 1
	$var(mbu)=$mbu;
d1265 3
a1267 3
	// if(is_method("INVITE")) {
	//	exec_cmd("echo '$var(mbu)' > /etc/kamailio/sip_message.txt");	
	//}
@


1.306
log
@*** empty log message ***
@
text
@d1262 1
a1262 1
//	$avp(mbu)=$mbu;
@


1.305
log
@*** empty log message ***
@
text
@d1142 1
a1142 1
xlog("L_WARN","$hdr(Record-Route)\n");	
d1261 1
a1261 1
	xlog("L_ERR","$mbu\n");
@


1.304
log
@*** empty log message ***
@
text
@d732 1
a732 1
		if($var(mbu) !="0"){
d734 1
a734 1
			 xlog("L_ERR","This is SDP Body: $avp(body)\n");
d736 1
a736 1
		}
@


1.303
log
@*** empty log message ***
@
text
@d51 1
a51 1
#!define WITH_MSGREBUILD
d721 1
a721 1
		if(!t_is_set("branch_route")) { 	t_on_branch("MANAGE_BRANCH");   xlog("L_INFO","SIP Message Body2: $var(mbu)\n");}
a728 2
	//	     exec_msg("echo -e '$var(mbu)' > /etc/kamailio/sip_message.txt");
//		xlog("L_WARN","$hdr(Record-Route)\n");
@


1.302
log
@*** empty log message ***
@
text
@d51 1
a51 1
#     - define WITH_MSGREBUILD
@


1.301
log
@*** empty log message ***
@
text
@d739 1
a739 1
		   xlog("L_ERR","------------MBU:mbu\n");	
@


1.300
log
@*** empty log message ***
@
text
@d738 2
a739 1
		}	
@


1.299
log
@*** empty log message ***
@
text
@d1264 2
a1265 2
	xlog("L_ERR","$(var(mbu){s.len}) and $cl\n");
        xlog("L_INFO","SIP Message Body: $var(mbu)\n");
@


1.298
log
@*** empty log message ***
@
text
@d1263 1
a1263 1
	$avp(mbu)=$mbu;
@


1.297
log
@*** empty log message ***
@
text
@d1263 1
a1263 1
	$var(mbu)=$mbu;
@


1.296
log
@*** empty log message ***
@
text
@d1264 1
a1264 1
	xlog("L_ERR","$(var(mbu){s.len})\n");
@


1.295
log
@*** empty log message ***
@
text
@d1264 1
a1264 1
	xlog("L_ERR,"$(var(mbu){s.len})\n");
@


1.294
log
@*** empty log message ***
@
text
@d1264 1
a1264 1
	xlog("L_ERR,"$mbu{s.len}\n");
@


1.293
log
@,
@
text
@d1264 1
a1264 1
	xlog("L_ERR,"$mbu{s.len}\n"
@


1.292
log
@*** empty log message ***
@
text
@d1264 1
@


1.291
log
@*** empty log message ***
@
text
@d1093 1
a1093 1
	sdp_get("$avp(sdp)");
d1095 2
a1096 2
	if( $avp(sdp) != $null){
		$dlg_var(sdp)=$avp(sdp);
d1098 1
a1098 1
			}
d1103 1
a1103 1
		sdp_get("$avp(sdp)");
d1105 2
a1106 2
		if( $avp(sdp) != $null){
                	$dlg_var(sdp)=$avp(sdp);
d1108 1
a1108 1
                        }
@


1.290
log
@/
@
text
@d1265 1
a1265 1
	 if(is_method("INVITE")) {
d1267 1
a1267 1
	}
@


1.289
log
@*** empty log message ***
@
text
@d1266 1
a1266 1
		exec_cmd("echo '$var(mbu)' > /etc/kamailio/sip_message.txt");	
@


1.288
log
@*** empty log message ***
@
text
@d712 1
a712 1
event_route [tm:local-request] {
d714 1
a714 1
}
d737 1
a737 1
			  xlog("L_ERR","------------MBU: $var(mbu)\n");
@


1.287
log
@*** empty log message ***
@
text
@d541 1
a541 1
modparam("dialog", "keep_proxy_rr", 3)
@


1.286
log
@*** empty log message ***
@
text
@d571 1
a571 1
	/*if(dlg_set_timeout("10"))
d574 1
a574 1
        }*/
d643 1
a643 1
	//	dlg_manage();
d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
a712 5
//	remove_hf("From");
  // 	 remove_hf("To");

   // append_hf("From: <$dlg(from_uri)>;tag=$dlg(from_tag)\r\n");
 //   append_hf("To: <$dlg(to_uri)>;tag=$dlg(to_tag)\r\n");
a723 2
//	exec_msg("echo $mbu > /etc/kamailio/sip_message.txt");
//        exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
a728 1
	//	 xlog("L_ERR","SIP Message Body: $var(mbu)\n");
a732 1
			 //exec_msg("/bin/echo '$var(mbu)' >> /tmp/sdp.log");
d735 1
a735 1
    	  		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
d738 1
a738 1
	}
@


1.285
log
@*** empty log message ***
@
text
@d571 1
a571 1
	if(dlg_set_timeout("3600"))
d574 1
a574 1
        }
d643 1
a643 1
		dlg_manage();
@


1.284
log
@*** empty log message ***
@
text
@d571 1
a571 1
	if(dlg_set_timeout("10"))
@


1.283
log
@*** empty log message ***
@
text
@d540 1
a540 1
modparam("dialog", "default_timeout", 10)
@


1.282
log
@*** empty log message ***
@
text
@d682 1
a682 1
    //$uac_req(callid)=$dlg(callid);
d713 2
a714 2
	remove_hf("From");
   	 remove_hf("To");
d716 2
a717 2
    append_hf("From: <$dlg(from_uri)>;tag=$dlg(from_tag)\r\n");
    append_hf("To: <$dlg(to_uri)>;tag=$dlg(to_tag)\r\n");
@


1.281
log
@*** empty log message ***
@
text
@d678 2
a679 2
    $uac_req(furi)="<"+$dlg(from_uri)+">;tag:"+$dlg(from_tag);
    $uac_req(turi)="<"+$dlg(to_uri)+">;tag:"+$dlg(to_tag);
d716 2
a717 2
    append_hf("From: <$dlg(from_uri)>;tag: $dlg(from_tag)\r\n");
    append_hf("To: <$dlg(to_uri)>;tag: $dlg(to_tag)\r\n");
@


1.280
log
@*** empty log message ***
@
text
@a715 1
    # 加上你要的 From 和 To headers（含 display name、tag）
d718 1
a718 1
    xlog("L_INFO", "Routing locally generated $rm to $ru  and\n");
@


1.279
log
@*** empty log message ***
@
text
@d717 2
a718 2
    append_hf("From:"<"+$dlg(from_uri)+">;tag:"+$dlg(from_tag)\r\n");
    append_hf("To:"<"+$dlg(to_uri)+">;tag:"+$dlg(to_tag)\r\n");
@


1.278
log
@*** empty log message ***
@
text
@d686 1
a686 1
    uac_req_send(); //To: $uac_req(turi)\r\n
d690 1
a690 1
//   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
d713 6
a718 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.277
log
@*** empty log message ***
@
text
@d681 1
a681 1
   $uac_req(hdrs)=$uac_req(hdrs)+"Call-ID: $dlg(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)\r\nContact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
d713 2
a714 1
    xlog("L_INFO", "Routing locally generated $rm to $ru  and $msg(buf)\n");
@


1.276
log
@*** empty log message ***
@
text
@d681 2
a682 2
   $uac_req(hdrs)=$uac_req(hdrs)+"Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
    $uac_req(callid)=$dlg(callid);
d686 1
a686 1
   // uac_req_send(); To: $uac_req(turi)\r\n
d690 1
a690 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.275
log
@*** empty log message ***
@
text
@d712 1
a712 1
/*event_route [tm:local-request] {
d714 1
a714 1
}*/
@


1.274
log
@*** empty log message ***
@
text
@d687 3
a689 2
   xlog("L_ERR"," $uac_req(furi)");
 xlog("L_ERR"," $uac_req(turi)");
@


1.273
log
@*** empty log message ***
@
text
@d689 1
a689 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.272
log
@*** empty log message ***
@
text
@d686 1
a686 1
   // uac_req_send();
d689 1
a689 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","To: $uac_req(turi)\r\nFrom: $uac_req(furi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.271
log
@*** empty log message ***
@
text
@d687 2
@


1.270
log
@*** empty log message ***
@
text
@d687 1
a687 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $uac_req(furi)\r\nTo: $uac_req(turi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.269
log
@*** empty log message ***
@
text
@d678 1
a678 1
    $uac_req(furi)="<"+$dlg(from_uri)+">;tag:"+$dlg(form_tag);
@


1.268
log
@*** empty log message ***
@
text
@d678 1
a678 1
    $uac_req(furi)="<$dlg(from_uri)>;tag:$dlg(form_tag)";
@


1.267
log
@*** empty log message ***
@
text
@d687 1
a687 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $dlg(from_uri)\r\nTo: $uac_req(turi)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE\r\n$uac_req(hdrs)", "");
@


1.266
log
@*** empty log message ***
@
text
@d678 1
a678 1
    $uac_req(furi)=$dlg(from_uri);
@


1.265
log
@/
@
text
@d687 1
a687 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $dlg(from_uri)\r\nTo: $uac_req(turi)\r\n$uac_req(hdrs)\r\nCall-ID: $uac_req(callid)\r\nCSeq: 2 INVITE", "");
@


1.264
log
@*** empty log message ***
@
text
@d687 1
a687 1
   t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $dlg(from_uri)\r\nTo: $uac_req(turi)\r\n$uac_req(hdrs)\r\nCALL-ID: $uac_req(callid)\r\nCSeq: 2 INVITE", "");
@


1.263
log
@*** empty log message ***
@
text
@d687 1
a687 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $dlg(from_uri)\r\nTo: $uac_req(turi)\r\n$uac_req(hdrs)\r\nCALL-ID:  $uac_req(callid)\r\nCSeq: 2 INVITE", "");
@


1.262
log
@*** empty log message ***
@
text
@d687 1
a687 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: $dlg(from_uri)\r\nTo: $uac_req(turi)\r\n$uac_req(hdrs)", "");
@


1.261
log
@add t_uac_send
@
text
@d687 1
a687 1
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: '$dlg(from_uri)'\r\nTo: '$uac_req(turi)'\r\n'$uac_req(hdrs)'", "");
@


1.260
log
@*** empty log message ***
@
text
@d686 2
a687 2
    uac_req_send();
//	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "","From: '$dlg(from_uri)'\r\nTo: '$uac_req(turi)'\r\n'$uac_req(hdrs)'", "");
@


1.259
log
@*** empty log message ***
@
text
@d686 1
a686 1
 //   uac_req_send();
@


1.258
log
@*** empty log message ***
@
text
@d687 1
a687 2
	t_uac_send("$uac_req(method)", "$uac_req(ruri)", "", "",
    "From: '$dlg(from_uri)'\r\nTo: '$uac_req(turi)'\r\n'$uac_req(hdrs)'", "");
@


1.257
log
@*** empty log message ***
@
text
@d674 1
a674 1
	 xlog("L_ERR","$dlg(to_rs)\n");
d686 3
a688 2
 xlog("L_ERR","REQ __________ $uac_req(hdrs)\n");
    uac_req_send();
@


1.256
log
@*** empty log message ***
@
text
@d686 1
a686 1
 xlog("L_ERR","REQ __________ $uac_req\n");
@


1.255
log
@*** empty log message ***
@
text
@d686 1
@


1.254
log
@*** empty log message ***
@
text
@d737 1
@


1.253
log
@*** empty log message ***
@
text
@d734 1
a734 1
		if($var(mbu) != $null){
@


1.252
log
@*** empty log message ***
@
text
@a728 2
                       exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body1)");
			 xlog("L_ERR","This is SDP Body: $avp(body1)\n");
d734 4
a737 2
    //	  		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
//			 xlog("L_ERR","This is SDP Body: $avp(body)\n");
@


1.251
log
@*** empty log message ***
@
text
@a735 1
	if($var(mbu)!=$null){ 			 
a737 1
		}
@


1.250
log
@*** empty log message ***
@
text
@d729 2
a730 2
                       exec_avp("/etc/kamailio/extract_sip_body.sh", "$var(body)");
			 xlog("L_ERR","This is SDP Body: $var(body)\n");
@


1.249
log
@*** empty log message ***
@
text
@d729 2
a730 2
                       exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
			 xlog("L_ERR","This is SDP Body: $avp(body)\n");
d737 2
a738 2
    	  		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
			 xlog("L_ERR","This is SDP Body: $avp(body)\n");
@


1.248
log
@*** empty log message ***
@
text
@d730 1
a730 1
			 xlog("L_ERR","This is SDP Body: $var(body)\n");
d738 1
a738 1
			 xlog("L_ERR","This is SDP Body: $var(body)\n");
@


1.247
log
@*** empty log message ***
@
text
@d736 4
a739 3
			 			 
    	  		//exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
//			 xlog("L_ERR","This is SDP Body: $var(body)\n");
@


1.246
log
@*** empty log message ***
@
text
@d717 1
a717 6
		if(!t_is_set("branch_route")) { 
			t_on_branch("MANAGE_BRANCH");
		        xlog("L_INFO","SIP Message Body2: $var(mbu)\n");
		//	exec_msg("echo $var(mbu) > /etc/kamailio/sip_message.txt");
		  //      exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
			 }
@


1.245
log
@*** empty log message ***
@
text
@d734 2
a735 1
          //              exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
d741 3
a743 2
    	  		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
			 xlog("L_ERR","This is SDP Body: $var(body)\n");
@


1.244
log
@*** empty log message ***
@
text
@d739 2
a740 2
//			 exec_msg("echo -e '$var(mbu)' > /etc/kamailio/sip_message.txt");
  //      		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
d1269 1
a1269 1
	exec_cmd("echo '$var(mbu)' > /etc/kamailio/sip_message.txt");	
@


1.243
log
@*** empty log message ***
@
text
@d1268 1
d1270 1
@


1.242
log
@*** empty log message ***
@
text
@d1268 1
a1268 1
	exec_cmd("echo $var(mbu) > /etc/kamailio/sip_message.txt");	
@


1.241
log
@*** empty log message ***
@
text
@d720 2
a721 2
			exec_msg("echo $var(mbu) > /etc/kamailio/sip_message.txt");
		        exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
d798 1
a798 1
	  xlog("L_INFO", ">>> Final outgoing SDP (in branch):\n$mbu\n");
d1268 1
a1268 1
	
@


1.240
log
@*** empty log message ***
@
text
@d717 6
a722 1
		if(!t_is_set("branch_route")) { t_on_branch("MANAGE_BRANCH");        xlog("L_INFO","SIP Message Body2: $var(mbu)\n"); }
@


1.239
log
@*** empty log message ***
@
text
@d727 3
a729 3
		 xlog("L_ERR","SIP Message Body: $var(mbu)\n");
		     exec_msg("echo -e '$var(mbu)' > /etc/kamailio/sip_message.txt");
                        exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
@


1.238
log
@*** empty log message ***
@
text
@d717 1
a717 1
		if(!t_is_set("branch_route")) t_on_branch("MANAGE_BRANCH");
a731 1
		 xlog("L_ERR","SIP Message Body: $var(mbu)\n");
@


1.237
log
@*** empty log message ***
@
text
@d732 1
@


1.236
log
@*** empty log message ***
@
text
@d727 4
a730 2
		  xlog("L_INFO","THIS IS  MBU _____$mbu\n");
//		 xlog("L_WARN","$hdr(Record-Route)\n");
a732 1
			xlog("L_ERR","SIP Message Body: $var(mbu)\n");
d734 2
a735 2
			 exec_msg("echo -e '$var(mbu)' > /etc/kamailio/sip_message.txt");
        		exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
@


1.235
log
@*** empty log message ***
@
text
@d676 1
a676 1
	$uac_req(method)="INVITE";
d683 1
a683 1
    append_hf("CSeq: 2 INVITE\r\n");
@


1.234
log
@*** empty log message ***
@
text
@d733 1
a733 1
			 exec_msg("echo '$var(mbu)' >> /etc/kamailio/sip_message.txt");
@


1.233
log
@*** empty log message ***
@
text
@d733 1
a733 1
			 exec_msg("echo '$var(mbu)' > /etc/kamailio/sip_message.txt");
@


1.232
log
@*** empty log message ***
@
text
@d732 2
a733 2
			 exec_msg("/bin/echo '$var(mbu)' >> /tmp/sdp.log");
			// exec_cmd("echo $var(mbu) > /etc/kamailio/sip_message.txt");
@


1.231
log
@*** empty log message ***
@
text
@d732 1
a732 1
			exec_cmd("echo $var(mbu)");
@


1.230
log
@*** empty log message ***
@
text
@d732 2
a733 1
			 exec_msg("echo $var(mbu) > /etc/kamailio/sip_message.txt");
@


1.229
log
@*** empty log message ***
@
text
@d732 3
@


1.228
log
@*** empty log message ***
@
text
@d731 1
a731 1
	        xlog("L_INFO","SIP Message Body: $var(mbu)\n");
@


1.227
log
@*** empty log message ***
@
text
@d731 1
a731 1

d1256 1
a1256 2
$var ( user )  = $ ( ru { re. subst ,/^ sip : ( . * ) @@ ( . * ) / \ 1 / } ) ;	
	$var(mbu) = $(mbu{re.subst ,/v=0[\s\S]*/});
@


1.226
log
@*** empty log message ***
@
text
@d1256 1
a1256 1
	
@


1.225
log
@*** empty log message ***
@
text
@d1257 3
a1259 10
$var(mbu) = $mbu;
$var(pos) = $(var(mbu){s.index,"\r\n\r\n"});
if ($var(pos) >= 0) {
    # 空行之後即為消息體的開頭。pos 指向的是\r\n\r\n的起始，
    # 因此真正的主體起點為 pos 再加上4個字元的偏移（跳過\r\n\r\n）。
    $var(body_start) = $var(pos) + 4;
    # 使用 s.substr 從 body_start 開始擷取到結尾（長度參數給0表示直到字串結尾）&#8203;:contentReference[oaicite:16]{index=16} 
    $var(sip_body) = $(mbu{s.substr,$var(body_start),0});
    xlog("SIP Message Body: $var(sip_body)\n");
	}
@


1.224
log
@*** empty log message ***
@
text
@d1256 11
@


1.223
log
@*** empty log message ***
@
text
@d720 2
a721 3
	exec_msg("echo $mbu > /etc/kamailio/sip_message.txt");
        exec_avp("/etc/kamailio/extract_sip_body.sh", "$avp(body)");
        xlog("L_INFO","$avp(body)\n");  
d727 1
@


1.222
log
@*** empty log message ***
@
text
@d720 3
a1253 1
	xlog("L_ERR","$hdr(Record-Route)\n");
a1255 3
$var(sdp_pos) = $(mbu{s.substr,"\r\n\r\n",0});
$var(sdp_body) = $(var(sdp_pos){s.substr,4,0});
xlog("L_INFO", "SDP from mbu:\n$var(sdp_body)\n");	 
@


1.221
log
@*** empty log message ***
@
text
@d1254 3
a1256 2
	$var(sdp) = $(mbu{sdp.body});	
	 xlog("L_INFO","THIS IS RB $var(sdp)\n");
@


1.220
log
@*** empty log message ***
@
text
@d1254 1
a1254 1
	$var(sdp) = $mbu{sdp.body};	
@


1.219
log
@*** empty log message ***
@
text
@d1254 2
a1255 2
	sdp_get("$avp(sdp)");
	 xlog("L_INFO","THIS IS RB $avp(sdp)\n");
@


1.218
log
@*** empty log message ***
@
text
@a337 2
loadmodule "textopsx.so"
modparam("textopsx", "enable_body_access", 1)
@


1.217
log
@*** empty log message ***
@
text
@d338 2
a339 1

@


1.216
log
@*** empty log message ***
@
text
@d1255 2
a1256 1
	 xlog("L_INFO","THIS IS RB $rb\n");
@


1.215
log
@*** empty log message ***
@
text
@d719 2
a720 2
		$dlg_var(via)=$hdr(Via)+"="+$sp;
		xlog("L_ERR","$hdr(Via)------$sp \n $rb\n");
d1255 1
@


1.214
log
@*** empty log message ***
@
text
@d709 1
a709 1
event_route [tm:local-request] {
d711 1
a711 1
}
@


1.213
log
@*** empty log message ***
@
text
@a710 1
    t_set_fr(10000, 10000);
@


1.212
log
@*** empty log message ***
@
text
@d710 1
a710 1
    xlog("L_INFO", "Routing locally generated $rm to $ru  and $rb\n");
@


1.211
log
@*** empty log message ***
@
text
@d681 2
a682 2
    $uac_req(hdrs)="Via: "+$dlg_var(via);
   $uac_req(hdrs)=$uac_req(hdrs)+"\r\nContact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.210
log
@*** empty log message ***
@
text
@d709 4
@


1.209
log
@add withdlg msg buf
@
text
@d783 1
a783 1
	  xlog("L_INFO", ">>> Final outgoing SDP (in branch):\n$msg(buf)\n");
d1251 1
a1251 1
	xlog("L_ERR","$msg(buf)\n");
@


1.208
log
@msg(buf)
@
text
@d782 3
@


1.207
log
@*** empty log message ***
@
text
@d1248 1
a1248 1
	xlog("L_ERR","$msgbuf\n");
@


1.206
log
@*** empty log message ***
@
text
@a1099 1
		 xlog("L_INFO","SDP3-1: $rb \n");
a1101 1
	        xlog("L_INFO","SDP3-2: $rb \n");
d1248 1
@


1.205
log
@*** empty log message ***
@
text
@d1100 1
d1103 1
@


1.204
log
@*** empty log message ***
@
text
@d1079 1
a1079 1
	xlog("L_INFO","SDP2-1: $avp(sdp) \n");
d1089 1
a1089 1
        	xlog("L_INFO","SDP2-2: $avp(sdp) \n");
@


1.203
log
@*** empty log message ***
@
text
@d717 1
a717 1
		xlog("L_ERR","$hdr(Via)------$sp \n");
d1079 1
d1082 1
a1082 1
		xlog("L_INFO","SDP: $dlg_var(sdp) \n");
d1089 1
a1089 1
        //	xlog("L_INFO","SDP2-2: $avp(sdp) \n");
d1092 1
a1092 1
                	xlog("L_INFO","SDP2-1: $dlg_var(sdp) \n");
@


1.202
log
@*** empty log message ***
@
text
@d684 1
a684 1
    $uac_req(cseq)="2";
@


1.201
log
@*** empty log message ***
@
text
@d684 1
@


1.200
log
@*** empty log message ***
@
text
@d715 1
a715 1
		$dlg_var(via)=$hdr(Via);
@


1.199
log
@*** empty log message ***
@
text
@d677 1
a677 1
	$uac_req(method)="UPDATE";
d715 1
a715 1
		$dlg_var(via)=$hdr(Via)+"="+$sp;
@


1.198
log
@*** empty log message ***
@
text
@d677 1
a677 1
	$uac_req(method)="INVITE";
@


1.197
log
@update
@
text
@d677 1
a677 1
	$uac_req(method)="UPDATE";
@


1.196
log
@*** empty log message ***
@
text
@d677 1
a677 1
	$uac_req(method)="INVITE";
@


1.195
log
@*** empty log message ***
@
text
@d681 2
a682 2
   // $uac_req(hdrs)="Via: "+$dlg_var(via)+"\r\n";
   $uac_req(hdrs)=$uac_req(hdrs)+"Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.194
log
@*** empty log message ***
@
text
@d681 1
a681 1
    $uac_req(hdrs)="Via: "+$dlg_var(via)+"\r\n";
@


1.193
log
@*** empty log message ***
@
text
@d681 1
a681 1
    $uac_req(hdrs)="Via: "+$dlg_var(via)+"="+$sp+"\r\n";
d715 1
a715 1
		$dlg_var(via)=$hdr(Via);
@


1.192
log
@*** empty log message ***
@
text
@d681 1
a681 1
    $uac_req(hdrs)="Via: "+$dlg_var(via)+"=$sp\r\n";
@


1.191
log
@*** empty log message ***
@
text
@d681 2
a682 2
    $uac_req(hdrs)="Via: "+$dlg_var(via)+"=$sp";
   $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.190
log
@*** empty log message ***
@
text
@d715 1
@


1.189
log
@*** empty log message ***
@
text
@d681 1
a681 1
   // $uac_req(hdrs)="Via: "+$dlg_var(via);
@


1.188
log
@*** empty log message ***
@
text
@d685 1
a685 1
    t_relay();
@


1.187
log
@*** empty log message ***
@
text
@d715 1
a715 1
		xlog("L_ERR","$hdr(Via)");
@


1.186
log
@*** empty log message ***
@
text
@d682 1
a682 1
   $uac_req(hdrs)="Via: "+$dlg_var(via)+"\r\nContact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
d685 1
@


1.185
log
@*** empty log message ***
@
text
@d714 1
a714 1
		xlog("L_ERR","$hdrs(Via)");
@


1.184
log
@*** empty log message ***
@
text
@d714 1
a1110 2
				$dlg_var(via)=$hdr(Via);
        			xlog("L_INFO","$hdr(Via)\n");
a1113 2
		$dlg_var(via)=$hdr(Via);
                xlog("L_ERR","$hdr(Via)\n");
@


1.183
log
@*** empty log message ***
@
text
@d1115 2
a1116 1

@


1.182
log
@*** empty log message ***
@
text
@d1110 2
d1242 2
a1243 2
	$dlg_var(via)=$hdr(Via);
        xlog("L_INFO","$hdr(Via)\n");
@


1.181
log
@*** empty log message ***
@
text
@d645 2
a646 2
		$dlg_var(via)=$hdr(Via);
		xlog("L_INFO","$hdr(Via)\n");
d1240 2
@


1.180
log
@*** empty log message ***
@
text
@d680 1
a680 1
    $uac_req(turi)=$dlg(to_uri)+";tag"+$dlg(to_tag);
@


1.179
log
@*** empty log message ***
@
text
@d678 1
a678 1
    $uac_req(ruri)=$dlg(to_uri);
d680 1
a680 1
    $uac_req(turi)=$dlg(to_uri);
@


1.178
log
@*** empty log message ***
@
text
@a646 1
		xlog("L_INFO","$hdr(Record-Route)\n");
d1118 1
@


1.177
log
@*** empty log message ***
@
text
@d683 1
a683 1
   $uac_req(hdrs)="Via: "+$dlg_var(via)+"Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.176
log
@*** empty log message ***
@
text
@d1240 1
@


1.175
log
@*** empty log message ***
@
text
@d682 2
a683 2
    $uac_req(hdrs)="Via: "+$dlg_var(via);
   $uac_req(hdrs)=$uac_req(hdrs)+"Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.174
log
@add via
@
text
@d682 2
a683 2
    $uac_req(hdrs)=$uac_req(hdrs)+"Via: "+$dlg_var(via);
   $uac_req(hdrs)="Contact: <"+$dlg(from_contact)+">\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.173
log
@*** empty log message ***
@
text
@d645 1
d682 1
d720 1
a720 1
		 xlog("L_WARN","$hdr(Record-Route)\n");
@


1.172
log
@*** empty log message ***
@
text
@d1122 1
@


1.171
log
@*** empty log message ***
@
text
@d718 1
a718 1
		 xlog("L_INFO","$hdr(Record-Route)\n");
@


1.170
log
@*** empty log message ***
@
text
@d718 1
@


1.169
log
@*** empty log message ***
@
text
@d645 2
a646 1
		xlog("L_INFO","$hdr(Via)");
@


1.168
log
@*** empty log message ***
@
text
@d645 1
@


1.167
log
@*** empty log message ***
@
text
@d542 1
@


1.166
log
@*** empty log message ***
@
text
@d672 1
@


1.165
log
@*** empty log message ***
@
text
@d670 2
a671 2
	 xlog("L_ERR","send BYE ~~~~~~~~~~~~");
	 xlog("L_ERR",$dlg_var(sdp));
@


1.164
log
@*** empty log message ***
@
text
@d671 1
@


1.163
log
@*** empty log message ***
@
text
@d676 1
a676 1
   $uac_req(hdrs)=$dlg(from_contact)+"\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.162
log
@*** empty log message ***
@
text
@d672 1
a672 1
	$uac_req(method)="MESSAGE";
d676 1
a676 1
   $uac_req(hdrs)="Contact: <sip:***@@151.236.52.84:5060;transport=udp\r\nAllow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\nContent-Type: application/sdp\r\n";
@


1.161
log
@*** empty log message ***
@
text
@d678 1
a678 1
    $uac_req(body)=$dlg_var(sdp)
@


1.160
log
@,
@
text
@d676 3
a678 4
    $uac_req(hdrs)="Subject: Hello\r\n";   
    $uac_req(hdrs)=$uac_req(hdrs) + "Content-Type: text/plain\r\n";   
    $uac_req(body)="Hi Buddy. Just here to irritate you.";
 $uac_req(callid)=$(mb{s.md5});
@


1.159
log
@*** empty log message ***
@
text
@d674 1
a674 1
    $uac_req(furi)=$fu;
a675 1
    $uac_req(turi)="sip:thisphone";
@


1.158
log
@*** empty log message ***
@
text
@d673 1
a673 1
    $uac_req(ruri)=$$dlg(to_uri);
@


1.157
log
@*** empty log message ***
@
text
@d673 3
a675 3
    $uac_req(ruri)=$fu;
    $uac_req(furi)="sip:john@@163.22.22.61";
    $uac_req(turi)=$fu;
@


1.156
log
@*** empty log message ***
@
text
@d672 10
@


1.155
log
@*** empty log message ***
@
text
@d543 1
a543 1
modparam("dialog", "send_bye", 1)
@


1.154
log
@*** empty log message ***
@
text
@d542 1
a542 1
modparam("dialog", "ka_timer", 10)
d671 1
a671 1
	dlg_bye("all");
@


1.153
log
@*** empty log message ***
@
text
@d543 1
@


1.152
log
@add  eventroute(end)
@
text
@d670 1
@


1.151
log
@*** empty log message ***
@
text
@d668 4
@


1.150
log
@*** empty log message ***
@
text
@d570 1
a570 1
	if(dlg_set_timeout("180"))
d758 1
a758 1
	 if(dlg_set_timeout("180"))
d761 1
a761 1
	}
@


1.149
log
@*** empty log message ***
@
text
@d542 1
@


1.148
log
@*** empty log message ***
@
text
@d569 4
@


1.147
log
@*** empty log message ***
@
text
@a568 4
	if(dlg_set_timeout("180", "123", "456"))
{  xlog("L_INFO", "TIME_OUT \n");
	
}
d571 1
a571 1
	`	exec_avp("/etc/kamailio/select_usr.sh $fU counter", "$avp(counter)");
d753 4
a756 1

@


1.146
log
@add timeout
@
text
@d541 1
a541 1
modparam("dialog", "default_timeout", 30)
d569 4
@


1.145
log
@*** empty log message ***
@
text
@d541 1
a541 1

@


1.144
log
@*** empty log message ***
@
text
@d1046 1
a1046 1
	if($avp(sdp) !=NULL){
d1056 1
a1056 1
		if($avp(sdp) !=NULL){
@


1.143
log
@logs dlg_vars(sdp)
@
text
@d1047 1
a1047 1
		$dlg_vars(sdp)=$avp(sdp);
d1057 1
a1057 1
                	$dlg_vars(sdp)=$avp(sdp);
@


1.142
log
@*** empty log message ***
@
text
@d1046 4
a1049 1
	xlog("L_INFO","SDP: $avp(sdp) \n");
d1051 2
a1052 2
		 sdp_get("$avp(sdp)");
                xlog("L_INFO","SDP2-1: $avp(sdp) \n");
d1055 5
a1059 1
        	xlog("L_INFO","SDP2-2: $avp(sdp) \n");
@


1.141
log
@modparam dlg tables and column
@
text
@d539 2
a540 1
modparam("dialog", "vars_key_column", "sdp")
@


1.140
log
@add dlg_manage
@
text
@d538 2
a539 1

@


1.139
log
@add dlg param
@
text
@d635 1
@


1.138
log
@add dialog.so
@
text
@d532 8
@


1.137
log
@*** empty log message ***
@
text
@d282 2
@


1.136
log
@*** empty log message ***
@
text
@d1035 2
d1039 1
a1039 1
        	xlog("L_INFO","SDP2: $avp(sdp) \n");
@


1.135
log
@*** empty log message ***
@
text
@d1035 3
a1037 3
	rtpengine_manage("generate-RTCP=on replace-origin replace-session-connectioni  label=Aleg_label label=Bleg_label");
	sdp_get("$avp(sdp)");
        xlog("L_INFO","SDP2: $avp(sdp) \n");
@


1.134
log
@*** empty log message ***
@
text
@d1035 1
a1035 1

d1039 1
a1039 1
		rtpengine_manage("generate-RTCP=on replace-origin replace-session-connectioni  label=Aleg_label label=Bleg_label");
@


1.133
log
@*** empty log message ***
@
text
@d1035 3
@


1.132
log
@get sdp
@
text
@d286 1
@


1.131
log
@*** empty log message ***
@
text
@d548 1
a548 1
	if (registered("location")) {
d554 1
a554 1
	}
d663 1
a663 1
    $uac_req(evroute)=1;
d1030 3
@


1.130
log
@*** empty log message ***
@
text
@d548 1
a548 1
/*	if (registered("location")) {
d554 1
a554 1
	}*/
@


1.129
log
@*** empty log message ***
@
text
@d559 1
a559 1
		xlog("L_INFO", "Your sender username is   $ct and $avp(counter)\n");
@


1.128
log
@*** empty log message ***
@
text
@d559 1
a559 1
		xlog("L_INFO", "Your sender username is   $ru and $avp(counter)\n");
@


1.127
log
@*** empty log message ***
@
text
@d559 1
a559 1
		xlog("L_INFO", "Your sender username is   $fU and $avp(counter)\n");
@


1.126
log
@*** empty log message ***
@
text
@d564 1
a564 1
                	xlog("L_INFO", "Your sender username is   $rt and $avp(counter)\n");
@


1.125
log
@*** empty log message ***
@
text
@d548 1
a548 1
	if (registered("location")) {
d554 1
a554 1
	}
d564 1
a564 1
                	xlog("L_INFO", "Your sender username is   $fU and $avp(counter)\n");
@


1.124
log
@*** empty log message ***
@
text
@d548 1
a548 1
/*	if (registered("location")) {
d554 1
a554 1
	}*/
@


1.123
log
@*** empty log message ***
@
text
@d548 1
a548 1
	if (registered("location")) {
d554 1
a554 1
	}
d661 1
a661 1
    $uac_req(hdrs)="Allow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\n";
@


1.122
log
@*** empty log message ***
@
text
@d549 1
a549 2
	//	if($shv(test)==0){
	//
d552 2
a553 2
	//		$shv(test)=1;
	//	}
@


1.121
log
@*** empty log message ***
@
text
@d549 3
a551 1
		if($shv(test)==0){
d553 2
a554 2
			$shv(test)=1;
		}
@


1.120
log
@update route(test)
@
text
@d550 1
a550 1
			route(test);
@


1.119
log
@*** empty log message ***
@
text
@d548 6
a646 5
	if($shv(test)==0){
		xlog("L_INFO","YES IN \n ");
		route(TEST);
		$shv(test)=1;
	}
@


1.118
log
@*** empty log message ***
@
text
@d533 1
d601 1
a601 1

d641 5
@


1.117
log
@*** empty log message ***
@
text
@d658 1
d850 1
a850 3
	    xlog("L_INFO", "Register  $fu \n ");
	route(TEST);
	exit;
@


1.116
log
@update to invite
@
text
@d851 1
@


1.115
log
@*** empty log message ***
@
text
@d644 1
a644 1
    $uac_req(method)="MESSAGE";
d649 5
a653 5
    $uac_req(hdrs)="Subject: Hello\r\n";   
    $uac_req(hdrs)=$uac_req(hdrs) + "Content-Type: text/plain\r\n";   
    $uac_req(body)="Hi Buddy. Just here to irritate you.";
  //  $uac_req(hdrs)="Contact: <sip:john@@163.22.22.61:5060;transport=udp\r\n";
  //  $uac_req(hdrs)="Allow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\n";
@


1.114
log
@*** empty log message ***
@
text
@d645 1
a645 1
    $uac_req(ruri)="sip:10.0.5.5:5060";
d647 1
a647 1
    $uac_req(turi)="$fu";
@


1.113
log
@comment timer
@
text
@d849 1
@


1.112
log
@*** empty log message ***
@
text
@d532 1
a532 1
modparam("timer", "declare_timer", "tmr1=TEST,10000,,enable");
@


1.111
log
@*** empty log message ***
@
text
@d642 1
a642 1
    timer_enable("tmr1", "0");
d645 1
a645 1
    $uac_req(ruri)="sip:163.22.22.61:5060";
d647 1
a647 1
    $uac_req(turi)="sip:ken@@163.22.22.61";
d654 1
a654 1
   // $uac_req(callid)=$(mb{s.md5});
d849 1
a849 1
	timer_enable("tmr1", "1");
@


1.110
log
@update register
@
text
@d849 1
a849 1
	timer_enable("TIMER_TEST", "1");
@


1.109
log
@*** empty log message ***
@
text
@d532 1
a532 1
modparam("timer", "declare_timer", "tmr1=TEST,1000,,enable");
d642 1
a642 1
//    timer_enable("tmr1", "0");
d849 1
@


1.108
log
@*** empty log message ***
@
text
@d642 1
a642 1
    timer_enable("tmr1", "0");
@


1.107
log
@*** empty log message ***
@
text
@d646 1
a646 1
    $uac_req(furi)="sip:Annoyatron 2000";
@


1.106
log
@*** empty log message ***
@
text
@d532 2
d641 2
a642 1
route[SendINVITE] {
d644 1
a644 1
    $uac_req(method)="INVITE";
d648 7
a654 3
    $uac_req(hdrs)="Contact: <sip:john@@163.22.22.61:5060;transport=udp\r\n";
    $uac_req(hdrs)="Allow: SUBSCRIBE, NOTIFY, INVITE, ACK, CANCEL, BYE, REFER, INFO, MESSAGE\r\n";
    $uac_req(callid)=$(mb{s.md5});
d657 1
@


1.105
log
@*** empty log message ***
@
text
@d282 1
d529 2
a530 2
modparam("rtimer", "timer", "name=ta;interval=15;mode=1;")
modparam("rtimer", "exec", "timer=ta;route=SendINVITE")
d645 2
@


1.104
log
@*** empty log message ***
@
text
@d528 2
a529 2
modparam("rtimer", "timer", "name=ta;interval=60;mode=1;")
modparam("rtimer", "exec", "timer=ta;route=SendInvite")
d639 1
a639 1
    xlog("Sending annoying message");
@


1.103
log
@*** empty log message ***
@
text
@d646 1
a646 1
    $uac_req_send();
@


1.102
log
@*** empty log message ***
@
text
@d638 1
a638 1
route[SendMessage] {
@


1.101
log
@add invite req
@
text
@d282 1
@


1.100
log
@*** empty log message ***
@
text
@d527 2
d637 10
a646 1

@


1.99
log
@add rtp_id judge
@
text
@d728 1
a728 1
			if($avp(rtp_id)=="NULL"){
@


1.98
log
@add counter ++
/
@
text
@d726 21
a746 4
			 exec_avp("/etc/kamailio/update_usr.sh  rtp_id $avp(setid) $fU ");
			 exec_avp("/etc/kamailio/update_usr.sh  mos_avg_pv $avp(mos_average) $fU ");
			 exec_avp("/etc/kamailio/update_usr.sh  mos_average_roundtrip_pv $avp(mos_average_roundtrip) $fU ");
			  
@


1.97
log
@*** empty log message ***
@
text
@d729 10
a738 1
			 exec_avp("/etc/kamailio/update_usr.sh  counter $avp(setid)+1 $fU ");
@


1.96
log
@update counter.sh
@
text
@d726 4
a729 3
			 exec_avp("/etc/kamailio/update_usr.sh $avp(setid) mos_avg_pv $avp(mos_average) $fU ");
			 exec_avp("/etc/kamailio/update_usr.sh $avp(setid) mos_average_roundtrip_pv $avp(mos_average_roundtrip) $fU ");
			 exec_avp("/etc/kamailio/update_usr.sh $avp(setid) counter $avp(setid)+1 $fU ");
@


1.95
log
@*** empty log message ***
@
text
@d548 1
a548 1
			 exec_avp("echo msg=0 > /etc/kamailio/search.txt", "$avp(counter)");
d554 1
a554 1
			exec_avp("echo msg=$avp(setid) > /etc/kamailio/search.txt", "$avp(counter)");
d561 1
a561 1
			 exec_avp("echo msg=$avp(setid) > /etc/kamailio/search.txt", "$avp(counter)");
@


1.94
log
@*** empty log message ***
@
text
@d548 1
a548 1
			 exec_avp("echo msg=0>/etc/kamailio/search.txt", "$avp(counter)");
d554 1
a554 1
			exec_avp("echo msg=$avp(setid)>/etc/kamailio/search.txt", "$avp(counter)");
d561 1
a561 1
			 exec_avp("echo msg=$avp(setid)>/etc/kamailio/search.txt", "$avp(counter)");
@


1.93
log
@*** empty log message ***
@
text
@d545 1
@


1.92
log
@*** empty log message ***
@
text
@d551 1
a551 1
		elseif($avp(counter) < 3){
@


1.91
log
@bye
@
text
@d551 1
a551 1
		else if($avp(counter) < 3){
@


1.90
log
@*** empty log message ***
@
text
@d551 1
a551 1
		if($avp(counter) < 3){
d726 17
a742 15
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_avg_pv $avp(mos_average) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_jitter_pv $avp(mos_average_jitter) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_packetloss_pv $avp(mos_average_packetloss) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_roundtrip_pv $avp(mos_average_roundtrip) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_samples_pv $avp(mos_average_samples) ");

			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_pv $avp(mos_min) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_packetloss_pv $avp(mos_min_packetloss) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_roundtrip_pv $avp(mos_min_roundtrip) ");
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_min_jitter_pv $avp(mos_min_jitter) ");

			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_pv $avp(mos_max) ");
                        exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_packetloss_pv $avp(mos_max_packetloss) ");
                        exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_roundtrip_pv $avp(mos_max_roundtrip) ");
                        exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_max_jitter_pv $avp(mos_max_jitter) ");
@


1.89
log
@*** empty log message ***
@
text
@d551 2
a552 2
		if($avp(counter){s.int} < 3){
			$avp(setid)=$avp(counter){s.int};
d559 1
a559 1
			$avp(setid)=$avp(rtp_id){s.int};
@


1.88
log
@*** empty log message ***
@
text
@d551 1
a551 1
		if($avp(counter) < 3){
@


1.87
log
@*** empty log message ***
@
text
@d551 1
a551 1
		else if($avp(counter) < 3){
@


1.86
log
@*** empty log message ***
@
text
@d551 1
a551 1
		elseif($avp(counter) < 3){
@


1.85
log
@*** empty log message ***
@
text
@d551 1
a551 1
		elseif($avp(counter) < 3)
@


1.84
log
@add search.sh counter.txt
@
text
@d551 1
a551 1
		else if($avp(counter) < 3)
@


1.83
log
@add setid setting
@
text
@d547 1
d553 1
d560 1
d712 1
a712 1
			 exec_avp("/etc/kamailio/search.sh ", "$avp(data2)");
@


1.82
log
@*** empty log message ***
@
text
@d550 11
@


1.81
log
@*** empty log message ***
@
text
@d553 1
a553 1
		$var(id)=$(avp(data){s.int});
d556 1
a556 1
		 }
d952 1
a952 1
		rtpengine_manage("generate-RTCP=on  SIP-source-address replace-origin replace-session-connection RTPENGINE=udp:114.35.197.224:12223 label=Aleg_label label=Bleg_label");
d955 1
a955 1
		rtpengine_manage("generate-RTCP=on replace-origin replace-session-connectioni RTPENGINE=udp:114.35.197.224:12223 label=Aleg_label label=Bleg_label");
@


1.80
log
@*** empty log message ***
@
text
@d555 2
a556 2
		xlog("L_INFO", "Your sender username is   $fU\n");
         }
@


1.79
log
@add counter
@
text
@d545 1
a545 1
		if($avp(counter)==NULL){
@


1.78
log
@add ctl mod
@
text
@d544 7
a550 1
                exec_avp("/etc/kamailio/test.sh ", "$avp(data)");
d552 1
a552 1
                $avp(setid)=$(avp(data){s.int});
@


1.77
log
@*** empty log message ***
@
text
@d346 1
a346 1
# modparam("ctl", "binrpc", "unix:/run/kamailio/kamailio_ctl")
@


1.76
log
@add loadmodule "uac.so"
@
text
@d363 1
a363 1
modparam("rr", "append_fromtag", 0)
@


1.75
log
@add update_user
@
text
@d282 1
@


1.74
log
@*** empty log message ***
@
text
@d704 1
a704 1
			 exec_avp("/etc/kamailio/update_usr.sh $avp(setid) mos_avg_pv $avp(mos_average) ");
@


1.73
log
@*** empty log message ***
@
text
@a547 1
		 xlog("L_INFO", "Your username is   $au\n");
d704 1
@


1.72
log
@*** empty log message ***
@
text
@d548 2
a549 2
		 xlog("L_INFO", "Your username is   $rU\n");
		xlog("L_INFO", "Your sender username is   $oU\n");
@


1.71
log
@log username
@
text
@d549 1
@


1.70
log
@*** empty log message ***
@
text
@d548 1
@


1.69
log
@*** empty log message ***
@
text
@d45 1
a45 1
#     - define WITH_USRLOCDB
@


1.68
log
@*** empty log message ***
@
text
@d942 1
a942 1
		set_rtpengine_set("2");
d945 1
a945 1
		set_rtpengine_set("2");
@


1.67
log
@*** empty log message ***
@
text
@d942 1
a942 1
		set_rtpengine_set("0");
d945 1
a945 1
		set_rtpengine_set("0");
@


1.66
log
@add set_rtpengine_set
@
text
@d942 1
a942 1
		set_rtpengine_set(0);
d945 1
a945 1
		set_rtpengine_set(0);
@


1.65
log
@change rtp manage
@
text
@d942 1
d945 1
@


1.64
log
@*** empty log message ***
@
text
@d942 1
a942 1
		rtpengine_manage("generate-RTCP=on  SIP-source-address replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
d944 1
a944 1
		rtpengine_manage("generate-RTCP=on replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
@


1.63
log
@*** empty log message ***
@
text
@d703 1
a703 1
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_pv $avp(mos_average) ");
@


1.62
log
@add update mos
@
text
@d707 1
a707 1
			exec_avp("/etc/kamailio/update_mos.sh $avp(setid) mos_average_samples_pv $avp(mos_average_samples ");
@


1.61
log
@update test
@
text
@d483 6
d703 1
d705 13
d733 5
@


1.60
log
@delet add
@
text
@d691 1
a691 1

d697 1
a697 1

@


1.59
log
@*** empty log message ***
@
text
@a124 1
  ALTER TABLE missed_calls ADD COLUMN dst_domain VARCHAR(128) NOT NULL DEFAULT '';
@


1.58
log
@*** empty log message ***
@
text
@d125 1
a125 2

  ALTER TABLE rtpengine ADD mos_average_jitter_pv FLOAT(10) Default NULL ;
@


1.57
log
@add COLUMN
@
text
@d126 1
a126 1
  ALTER TABLE rtpengine ADD COLUMN mos_average_jitter_pv FLOAT(10) Default NULL ;
@


1.56
log
@*** empty log message ***
@
text
@d126 2
@


1.55
log
@*** empty log message ***
@
text
@d686 1
a686 1
			$avp(setid)=$avp(data2){s.int};
@


1.54
log
@add search.sh
@
text
@d686 1
a686 1
			$avp(setid)=$avp(data2);
@


1.53
log
@add var(id)
@
text
@d684 3
a686 2
			xlog("L_INFO", "ID --------------- $var(id)\r\n ");
			$avp(setid)=$var(id);
@


1.52
log
@*** empty log message ***
@
text
@d540 1
d684 2
a685 1
			$avp(setid)=1;
@


1.51
log
@add setid
@
text
@d683 1
a683 1
			$avp(setid)=$(avp(data){s.int});
@


1.50
log
@*** empty log message ***
@
text
@d683 1
@


1.49
log
@*** empty log message ***
@
text
@d539 1
a539 1
                $avp(setid)=$avp(data){s.int};
@


1.48
log
@string to int
@
text
@d535 1
a535 1
	/*if (is_method("INVITE") && ( $var(flag) != $ci )) {
d541 1
a541 1
         }*/
@


1.47
log
@change Round robin
@
text
@d539 1
a539 1
                $avp(setid)=$avp(data);
a911 9
	if (is_method("INVITE") && ( $var(flag) != $ci )) {
                $var(flag)=$ci;
                xlog("L_INFO", "Your ID is $var(id)\n");
                exec_avp("/etc/kamailio/test.sh '$var(id)'", "$avp(data)");
                $var(id)=$avp(data);
                xlog("L_INFO", "Your return is $var(flag) and  $avp(data)\n");
                $avp(setid)=$avp(data);
                xlog("L_INFO", "Your set_id is   $avp(setid)\n");
           }
@


1.46
log
@*** empty log message ***
@
text
@d535 1
a535 1
	if (is_method("INVITE") && ( $var(flag) != $ci )) {
d541 1
a541 1
         }
d912 9
@


1.45
log
@change avp
@
text
@d537 1
a537 1
                exec_avp("/etc/kamailio/test.sh ", "$avp(i:data)");
d539 1
a539 1
                $avp(setid)=$avp(i:data);
@


1.44
log
@add modparam("pv", "varset", "id=i:0")
modparam("pv", "varset", "flag=s:miller")
loadmodule "statistics.so"
@
text
@d537 1
a537 1
                exec_avp("/etc/kamailio/test.sh ", "$avp(data)");
d539 1
a539 1
                $avp(setid)=$avp(data);
@


1.43
log
@*** empty log message ***
@
text
@d520 5
@


1.42
log
@set id xlog
@
text
@d530 1
a530 1
	/*if (is_method("INVITE") && ( $var(flag) != $ci )) {
d536 1
a536 1
         }*/
@


1.41
log
@change set id
@
text
@d527 1
a527 1
       	$avp(setid)=1;
d534 2
a535 2
                $avp(set_id)=$avp(data);
                xlog("L_INFO", "Your set_id is   $avp(set_id)\n");
@


1.40
log
@change set id
@
text
@d527 1
a527 1
       	$avp(setid)=0;
@


1.39
log
@set 0d
@
text
@d527 1
a527 1
       	$avp(setid)=1;
@


1.38
log
@comment out set id
@
text
@d527 1
a527 1
//	$avp(setid)=1;
d530 1
a530 1
	if (is_method("INVITE") && ( $var(flag) != $ci )) {
d536 1
a536 1
         }
@


1.37
log
@delet a lable
@
text
@d527 1
a527 1
	$avp(setid)=1;
@


1.36
log
@loadmodule exec
@
text
@a681 3
			xlog("LOG_LOCAL3", "L_ERR", "this rtt is $avp(mos_max) \n");
			$avp("mos_A_label")="Aleg_label";
			$avp("mos_B_label")="Bleg_label";
a703 11
			# xlog( "mos_A_label_pv $avp(mos_A_label) \n ");
			xlog("L_INFO", "mos_average_packetloss_A_pv $avp(mos_average_packetloss_A) \n ");
			xlog("L_INFO", "mos_average_jitter_A_pv $avp(mos_average_jitter_A) \n ");
			xlog("L_INFO", "mos_average_roundtrip_A_pv $avp(mos_average_roundtrip_A) \n ");
			xlog("L_INFO", "mos_average_A_pv $avp(mos_average_A) \n ");

			# xlog( "mos_B_label_pv $avp(mos_B_label) \n ");
			xlog("L_INFO", "mos_average_packetloss_B_pv $avp(mos_average_packetloss_B) \n ");
			xlog("L_INFO", "mos_average_jitter_B_pv $avp(mos_average_jitter_B) \n ");
			xlog("L_INFO", "mos_average_roundtrip_B_pv $avp(mos_average_roundtrip_B) \n ");
			xlog("L_INFO", "mos_average_B_pv $avp(mos_average_B) \n ");
@


1.35
log
@add RR
@
text
@d282 1
@


1.34
log
@enable mysql
@
text
@d529 7
a535 1

@


1.33
log
@dburl
@
text
@d30 1
a30 1
#     - define WITH_MYSQL
a481 11
modparam("rtpengine", "mos_A_label_pv", "$avp(mos_A_label)")
modparam("rtpengine", "mos_average_packetloss_A_pv", "$avp(mos_average_packetloss_A)")
modparam("rtpengine", "mos_average_jitter_A_pv", "$avp(mos_average_jitter_A)")
modparam("rtpengine", "mos_average_roundtrip_A_pv", "$avp(mos_average_roundtrip_A)")
modparam("rtpengine", "mos_average_A_pv", "$avp(mos_average_A)")

modparam("rtpengine", "mos_B_label_pv", "$avp(mos_B_label)")
modparam("rtpengine", "mos_average_packetloss_B_pv", "$avp(mos_average_packetloss_B)")
modparam("rtpengine", "mos_average_jitter_B_pv", "$avp(mos_average_jitter_B)")
modparam("rtpengine", "mos_average_roundtrip_B_pv", "$avp(mos_average_roundtrip_B)")
modparam("rtpengine", "mos_average_B_pv", "$avp(mos_average_B)")
@


1.32
log
@*** empty log message ***
@
text
@d463 1
a463 2
	
#modparam("rtpengine", "db_url", DBURL)
d466 1
@


1.31
log
@fix 
/
@
text
@d464 1
a464 1
modparam("rtpengine", "db_url", DBURL)
@


1.30
log
@*** empty log message ***
@
text
@d463 2
@


1.29
log
@use URL
@
text
@a462 1
modparam("rtpengine", "db_url", DBURL)
d535 1
a535 1

a672 1
	$avp(setid)=0;
@


1.28
log
@delet mos
@
text
@d459 2
d463 1
a463 1
#modparam("rtpengine", "db_url", DBURL)
@


1.27
log
@fux
@
text
@a489 1
#modparam("rtpengine", "mos_max_pv", "$avp(mos_max)")
@


1.26
log
@fix rtpengine
@
text
@d461 1
a461 1
modparam("rtpengine", "db_url", DBURL)
@


1.25
log
@fix setid
@
text
@a463 1
#-------modparam("rtpengine", "rtpengine_sock", "udp:rtpengine1:2223")------ #
@


1.24
log
@set_id
@
text
@d460 2
a461 2
# ----- rtpengine params -----#
#modparam("rtpengine", "db_url", DBURL)
d674 1
a674 1
	$avp(set_id)=0;
@


1.23
log
@fix
@
text
@d674 1
@


1.22
log
@fix databse
@
text
@d461 1
a461 1
modparam("rtpengine", "db_url", DBURL)
@


1.21
log
@*** empty log message ***
@
text
@d464 1
a464 1
#modparam("rtpengine", "rtpengine_sock", "udp:rtpengine1:2223")
@


1.20
log
@fix databse v1
@
text
@d463 1
a463 1
modparam("`rtpengine", "setid_avp", "$avp(setid)")
@


1.19
log
@fix 1
@
text
@d461 1
@


1.18
log
@fix database
@
text
@d462 2
a463 2
modparam("rtpengine", "setid_avp", "$avp(setid)")
//modparam("rtpengine", "rtpengine_sock", "udp:rtpengine1:2223")
@


1.17
log
@database
@
text
@d461 1
a461 1
modparam("rtpengine", "table_name", "rtpengine_table_name")
@


1.16
log
@generate-RTCP=on
@
text
@d460 4
a463 2
# ----- rtpengine params -----
modparam("rtpengine", "rtpengine_sock", "udp:rtpengine1:2223")
@


1.15
log
@rtcp-mux
@
text
@d922 1
a922 1
		rtpengine_manage("rtcp-mux  SIP-source-address replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
d924 1
a924 1
		rtpengine_manage("rtcp-mux replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
@


1.14
log
@comment delet
@
text
@d922 1
a922 1
		rtpengine_manage("SIP-source-address replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
d924 1
a924 1
		rtpengine_manage("replace-origin replace-session-connection label=Aleg_label label=Bleg_label");
@


1.13
log
@query delete
@
text
@d681 1
a681 1
			rtpengine_delete();
@


1.12
log
@setup mos
@
text
@d681 1
a681 1
		//	rtpengine_delete();
@


1.11
log
@tcp_lifetime
@
text
@d463 26
d680 1
a680 1
			rtpengine_query();
d683 36
d922 1
a922 1
		rtpengine_manage("SIP-source-address replace-origin replace-session-connection");
d924 1
a924 1
		rtpengine_manage("replace-origin replace-session-connection");
@


1.10
log
@uncomment tcp
@
text
@d203 2
a204 2
tcp_connection_lifetime=3605

@


1.9
log
@comment delete
@
text
@d199 1
a199 1
#listen=tcp:10.0.5.5:5060 advertise 163.22.22.61:5060
@


1.8
log
@switch order
@
text
@d655 1
a655 1
			rtpengine_delete();
@


1.7
log
@query
@
text
@d654 1
a655 1
			rtpengine_query();
@


1.6
log
@rtpengine_delete
@
text
@d655 1
@


1.5
log
@disable tcp
@
text
@d654 1
@


1.4
log
@rtpengine1
@
text
@d199 1
a199 1
listen=tcp:10.0.5.5:5060 advertise 163.22.22.61:5060
@


1.3
log
@*** empty log message ***
@
text
@d461 1
a461 1
modparam("rtpengine", "rtpengine_sock", "udp:10.0.5.6:2223")
@


1.2
log
@ip
@
text
@d461 1
a461 1
modparam("rtpengine", "rtpengine_sock", "udp:163.22.22.61:12223")
@


1.1
log
@Initial revision
@
text
@d198 2
@
